{"version":3,"sources":["webpack:///./node_modules/core-js/internals/native-url.js","webpack:///./src/collections/role.js","webpack:///./src/components/DataTable.vue?a6fc","webpack:///src/components/DataTable.vue","webpack:///./src/components/DataTable.vue?5239","webpack:///./src/components/DataTable.vue","webpack:///./src/collections/business.js","webpack:///./node_modules/core-js/modules/web.url.js","webpack:///./src/collections/deposit.js","webpack:///./src/collections/defaults/items_buttons.js","webpack:///./src/collections/customer.js","webpack:///./src/collections/department.js","webpack:///./src/collections/defaults/item_buttons.js","webpack:///./src/collections/defaults/getMethod.js","webpack:///./node_modules/core-js/internals/string-punycode-to-ascii.js","webpack:///./src/collections/transaction.js","webpack:///./src/collections/bank.js","webpack:///./src/collections/user.js","webpack:///./src/collections/defaults/row_buttons.js","webpack:///./node_modules/core-js/modules/web.url-search-params.js","webpack:///./node_modules/core-js/internals/get-iterator.js","webpack:///./src/collections sync ^\\.\\/.*$","webpack:///./src/collections/menu.js","webpack:///./src/collections/subaffiliate.js","webpack:///./src/collections/banktransaction.js","webpack:///./src/collections/affiliate.js","webpack:///./src/collections/payment_method.js","webpack:///./src/collections/index.js"],"names":["fails","wellKnownSymbol","IS_PURE","ITERATOR","module","exports","url","URL","searchParams","result","pathname","forEach","value","key","toJSON","sort","href","get","String","URLSearchParams","username","host","hash","undefined","title","singular","plural","icon","items","buttons","tableButtons","headers","text","align","sortable","width","rowButtons","item","itemButtons","sidebar","panels","fields","input","name","bind","label","prependInnerIcon","collection","itemText","itemValue","if","vm","user","rights","filter","e","write","allOwn","default","template","hideAddNew","content","prependIcon","required","rules","v","on","role","replace","toLowerCase","window","$form","data","autocomplete","form","render","_vm","this","_h","$createElement","_c","_self","_g","_b","scopedSlots","_u","fn","options","_t","ref","isMobile","isSelected","select","class","$event","$emit","_l","header","_obj","concat","attrs","_v","_s","_e","staticClass","getHeaderButtons","btn","ind","component","is","tag","domProps","$options","filters","dynamic","format","getFormatArgs","formatArgs","$attrs","$listeners","staticRenderFns","computed","methods","VBtn","VDataTable","VIcon","VSimpleCheckbox","VTooltip","EOF","$","DESCRIPTORS","USE_NATIVE_URL","global","defineProperties","redefine","anInstance","has","assign","arrayFrom","codeAt","toASCII","setToStringTag","URLSearchParamsModule","InternalStateModule","NativeURL","getInternalSearchParamsState","getState","setInternalState","set","getInternalURLState","getterFor","floor","Math","pow","INVALID_AUTHORITY","INVALID_SCHEME","INVALID_HOST","INVALID_PORT","ALPHA","ALPHANUMERIC","DIGIT","HEX_START","OCT","DEC","HEX","FORBIDDEN_HOST_CODE_POINT","FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT","LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE","TAB_AND_NEW_LINE","parseHost","codePoints","index","charAt","length","parseIPv6","slice","isSpecial","test","parseIPv4","percentEncode","C0ControlPercentEncodeSet","partsLength","numbers","part","radix","number","ipv4","parts","split","pop","parseInt","push","numbersSeen","ipv4Piece","swaps","swap","address","pieceIndex","compress","pointer","char","findLongestZeroSequence","ipv6","maxIndex","maxLength","currStart","currLength","serializeHost","ignore0","unshift","join","toString","fragmentPercentEncodeSet","pathPercentEncodeSet","userinfoPercentEncodeSet","code","encodeURIComponent","specialSchemes","ftp","file","http","https","ws","wss","scheme","includesCredentials","password","cannotHaveUsernamePasswordPort","cannotBeABaseURL","isWindowsDriveLetter","string","normalized","second","startsWithWindowsDriveLetter","third","shortenURLsPath","path","pathSize","isSingleDot","segment","isDoubleDot","SCHEME_START","SCHEME","NO_SCHEME","SPECIAL_RELATIVE_OR_AUTHORITY","PATH_OR_AUTHORITY","RELATIVE","RELATIVE_SLASH","SPECIAL_AUTHORITY_SLASHES","SPECIAL_AUTHORITY_IGNORE_SLASHES","AUTHORITY","HOST","HOSTNAME","PORT","FILE","FILE_SLASH","FILE_HOST","PATH_START","PATH","CANNOT_BE_A_BASE_URL_PATH","QUERY","FRAGMENT","parseURL","stateOverride","base","bufferCodePoints","failure","state","buffer","seenAt","seenBracket","seenPasswordToken","port","query","fragment","i","codePoint","encodedCodePoints","shift","URLConstructor","baseState","that","arguments","urlString","type","TypeError","searchParamsState","updateSearchParams","updateURL","serializeURL","call","origin","getOrigin","protocol","getProtocol","getUsername","getPassword","getHost","hostname","getHostname","getPort","getPathname","search","getSearch","getSearchParams","getHash","URLPrototype","prototype","output","error","accessorDescriptor","getter","setter","configurable","enumerable","nativeCreateObjectURL","createObjectURL","nativeRevokeObjectURL","revokeObjectURL","blob","apply","forced","sham","total","col","sm","returnObject","searchFields","business","department","evt","userField","collectionName","props","getPermissions","or","hide","Date","toISOString","fieldName","isNew","color","click","backURL","btoa","$route","cachState","Object","$data","localStorage","setItem","JSON","stringify","$router","field","urlParams","location","placeholder","outlined","auth","deposit_user","$refs","_id","canWrite","canDelete","disabled","selected","$confirm","confirmed","loading","remove","params","id","map","rm","status","fetch","$store","commit","console","log","canUpdate","dialog","scrollable","close","unselect","save","update","nModified","countries","affiliate","init","customer_subaffiliate","subaffiliate","md","clickedButton","validate","cache","getItem","parse","bURL","go","args","spacer","find","el","maxInt","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexNonASCII","regexSeparators","OVERFLOW_ERROR","baseMinusTMin","stringFromCharCode","fromCharCode","ucs2decode","counter","charCodeAt","extra","digitToBasic","digit","adapt","delta","numPoints","firstTime","k","encode","currentValue","inputLength","n","bias","basicLength","handledCPCount","m","handledCPCountPlusOne","RangeError","q","t","qMinusT","baseMinusT","encoded","labels","withdraw","currency","clearable","hint","depositType","indexOf","getBuiltIn","redefineAll","createIteratorConstructor","hasOwn","classof","anObject","isObject","create","createPropertyDescriptor","getIterator","getIteratorMethod","$fetch","Headers","URL_SEARCH_PARAMS","URL_SEARCH_PARAMS_ITERATOR","getInternalParamsState","getInternalIteratorState","plus","sequences","Array","percentSequence","bytes","RegExp","percentDecode","sequence","decodeURIComponent","deserialize","it","replacer","match","serialize","parseSearchParams","attribute","entry","attributes","entries","validateArgumentsLength","passed","URLSearchParamsIterator","kind","iterator","step","next","done","URLSearchParamsConstructor","iteratorMethod","entryIterator","entryNext","first","URLSearchParamsPrototype","append","splice","getAll","found","val","entriesIndex","sliceIndex","callback","boundFunction","keys","values","body","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","resolve","bank","icons","require","err"],"mappings":"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","file":"js/chunk-59363fbd.1671b788.js","sourcesContent":["var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = !fails(function () {\n  var url = new URL('b?a=1&b=2&c=3', 'http://a');\n  var searchParams = url.searchParams;\n  var result = '';\n  url.pathname = 'c%20d';\n  searchParams.forEach(function (value, key) {\n    searchParams['delete']('b');\n    result += key + value;\n  });\n  return (IS_PURE && !url.toJSON)\n    || !searchParams.sort\n    || url.href !== 'http://a/c%20d?a=1&c=3'\n    || searchParams.get('c') !== '3'\n    || String(new URLSearchParams('?a=1')) !== 'a=1'\n    || !searchParams[ITERATOR]\n    // throws in Edge\n    || new URL('https://a@b').username !== 'a'\n    || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b'\n    // not punycoded in Edge\n    || new URL('http://тест').host !== 'xn--e1aybc'\n    // not escaped in Chrome 62-\n    || new URL('http://a#б').hash !== '#%D0%B1'\n    // fails in Chrome 66-\n    || result !== 'a1c3'\n    // throws in Safari\n    || new URL('http://x', undefined).host !== 'x';\n});\n","import tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nimport itemButtons from './defaults/item_buttons'\r\n\r\nexport default {\r\n        // title: 'Roles',\r\n        title: {\r\n            singular: 'Role',\r\n            plural: 'Roles',\r\n        },\r\n        icon: 'mdi-key',\r\n        items: {\r\n            buttons: tableButtons.get('new', 'delete'),\r\n            headers: [\r\n                {\r\n                    text: 'Display Name',\r\n                    align: 'start',\r\n                    sortable: false,\r\n                    value: 'name',\r\n                },\r\n                { text: 'Role', value: 'role' },\r\n                { text: 'Menu', value: 'menu.name' },\r\n                { text: '', value: 'actions', width: '150', buttons: rowButtons.get() }\r\n\r\n            ],\r\n        },\r\n    item: {\r\n        buttons: itemButtons.get('save', 'Cancel', 'spacer', 'delete'),\r\n            sidebar: {\r\n                panels: [\r\n                   \r\n                    {\r\n                        title: 'Menu',\r\n                        fields: [\r\n                            {\r\n                                input: 'autocomplete',\r\n                                name: 'menu',\r\n                                bind: {\r\n                                    label: \"Menu\",\r\n                                    prependInnerIcon: \"mdi-menu\",\r\n                                    collection: 'menu',\r\n                                    itemText: \"name\",\r\n                                    itemValue: \"_id\",\r\n                                    // required: true,\r\n\r\n\r\n                                    // rules: [\r\n                                    //     v => !!v || 'Menu is required',\r\n                                    // ],\r\n                                }\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: 'Created By',\r\n                        icon: \"mdi-account\",\r\n                        fields: [\r\n                            {\r\n                                input: 'autocomplete',\r\n                                name: 'user',\r\n                                if: vm => (vm.user.rights.filter(e => e.collection == 'role')[0].write.allOwn == 'all'),\r\n                                default: vm => vm.user,\r\n                                bind: {\r\n                                    label: \"User\",\r\n                                    template: 'user',\r\n                                    collection: 'user',\r\n                                    itemText: \"displayName\",\r\n                                    itemValue: \"_id\",\r\n                                    hideAddNew: true,\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            content: {\r\n                panels: [\r\n                    {\r\n                        title: 'Role',\r\n                        fields: [\r\n                            {\r\n                                input: 'text',\r\n                                name: 'name',\r\n                                bind: {\r\n                                    label: \"Role Name\",\r\n                                    prependIcon: 'mdi-label',\r\n                                    required: true,\r\n\r\n                                    rules: [\r\n                                        v => !!v || 'Display Name is required',\r\n                                    ],\r\n                                },\r\n                                on: () => ({\r\n                                    input(v) {\r\n                                        const role = v.replace(/[^0-9a-zA-Z\\s+]+/, '').replace(/\\s+/g, '_').toLowerCase()\r\n                                        window.$form.data.role = role\r\n\r\n                                    }\r\n                                })\r\n                            },\r\n                            {\r\n                                input: 'text',\r\n                                name: 'role',\r\n                                bind: {\r\n                                    label: \"Role Alias\",\r\n\r\n                                    autocomplete: 'username',\r\n                                    prependIcon: 'mdi-key',\r\n                                    required: true,\r\n                                    rules: [\r\n                                        v => !!v || 'Role Alias is required',\r\n                                    ],\r\n                                }\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        // title: 'Permissions',\r\n                        fields:[\r\n                            {\r\n                                input: 'rights',\r\n                                name: 'rights',\r\n                                default: [],\r\n                                bind: {\r\n                                    label: \"Permissions\",\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        form: [\r\n            {\r\n                label: 'General',\r\n                fields: [\r\n                    {\r\n                        input: 'text',\r\n                        name: 'name',\r\n                        bind: {\r\n                            label: \"Role Name\",\r\n                            prependIcon: 'mdi-label',\r\n                            required: true,\r\n                            \r\n                            rules: [\r\n                                v => !!v || 'Display Name is required',\r\n                            ],\r\n                        },\r\n                        on: () => ({\r\n                            input(v) {\r\n                                const role = v.replace(/[^0-9a-zA-Z\\s+]+/, '').replace(/\\s+/g, '_').toLowerCase()\r\n                                window.$form.data.role = role \r\n                               \r\n                            }\r\n                        })\r\n                    },\r\n                    {\r\n                        input: 'text',\r\n                        name: 'role',\r\n                        bind: {\r\n                            label: \"Role Alias\",\r\n                     \r\n                            autocomplete: 'username',\r\n                            prependIcon: 'mdi-key',\r\n                            required: true,\r\n                            rules: [\r\n                                v => !!v || 'Role Alias is required',\r\n                            ],\r\n                        }\r\n                    },\r\n                    {\r\n                        input: 'autocomplete',\r\n                        name: 'menu',\r\n                        bind: {\r\n                            label: \"Menu\",\r\n                            prependIcon: \"mdi-menu\",\r\n                            collection: 'menu',\r\n                            itemText: \"name\",\r\n                            itemValue: \"_id\",\r\n                            // required: true,\r\n\r\n\r\n                            // rules: [\r\n                            //     v => !!v || 'Menu is required',\r\n                            // ],\r\n                        }\r\n                    },\r\n                    {\r\n                        input: 'rights',\r\n                        name: 'rights',\r\n                        default: [],\r\n                        bind: {\r\n                            label: \"Permissions\",\r\n                        }\r\n                    } \r\n                ]\r\n            } \r\n        ]\r\n    }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-data-table',_vm._g(_vm._b({scopedSlots:_vm._u([{key:\"top\",fn:function(options){return [_vm._t(\"top\",null,null,options)]}},{key:\"item\",fn:function(ref){\nvar headers = ref.headers;\nvar item = ref.item;\nvar isMobile = ref.isMobile;\nvar isSelected = ref.isSelected;\nvar select = ref.select;\nreturn [_c('tr',{class:{'v-data-table__mobile-table-row': isMobile},on:{\"click\":function($event){return _vm.$emit('click:row', item)}}},_vm._l((headers),function(header){\nvar _obj;\nreturn _c('td',{key:header.value,class:[{'v-data-table__mobile-row': isMobile},{'v-data-table__divider': !isMobile}, ( _obj = {}, _obj[(\"text-\" + (header.align || 'start'))] = !isMobile, _obj ) ].concat( header.class),attrs:{\"width\":!isMobile ? header.width : null}},[(isMobile)?_c('div',{class:{'v-data-table__mobile-row__header': isMobile}},[_vm._v(_vm._s(header.text))]):_vm._e(),(header.value == 'data-table-select')?_c('div',{class:{'v-data-table__mobile-row__cell': isMobile}},[_c('VSimpleCheckbox',{staticClass:\"v-data-table__checkbox\",attrs:{\"ripple\":false,\"value\":isSelected},on:{\"input\":select}})],1):(header.value == 'actions')?_c('div',{class:{'v-data-table__mobile-row__cell': isMobile}},_vm._l((_vm.getHeaderButtons(header)),function(btn,ind){return _c('v-tooltip',{key:ind,attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nvar attrs = ref.attrs;\nreturn [_c('v-btn',_vm._g(_vm._b({attrs:{\"icon\":\"\"}},'v-btn',typeof btn.bind == 'function' ? btn.bind(_vm.vm, item) : btn.bind,false),typeof btn.on == 'function' ? btn.on(_vm.vm, item) : btn.on),[_c('v-icon',_vm._g(_vm._b({attrs:{\"small\":\"\"}},'v-icon',attrs,false),on),[_vm._v(\" \"+_vm._s(btn.icon)+\" \")])],1)]}}],null,true)},[_c('span',[_vm._v(_vm._s(btn.title))])])}),1):(header.component)?_c('div',{class:{'v-data-table__mobile-row__cell': isMobile}},[_c(header.component.is || header.component,_vm._g(_vm._b({tag:\"component\",attrs:{\"item\":item,\"header\":header}},'component',typeof header.component == 'function' ? {} : typeof header.component.bind == 'function' ? header.component.bind(_vm.vm, item) : (header.component.bind || {}),false),typeof header.component.on == 'function' ? header.component.on(_vm.vm, item) : header.component.on))],1):_c('div',{class:{'v-data-table__mobile-row__cell': isMobile},domProps:{\"innerHTML\":_vm._s(_vm.$options.filters.dynamic([item, header.value], header.format, _vm.getFormatArgs(header.formatArgs, item) || []))}})])}),0)]}}],null,true)},'v-data-table',_vm.$attrs,false),_vm.$listeners))}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-data-table v-bind=\"$attrs\" v-on=\"$listeners\">\r\n      <template v-slot:top=\"options\">\r\n        <slot name=\"top\" v-bind=\"options\"></slot>\r\n      </template>\r\n      \r\n      \r\n      <template v-slot:item=\"{ headers, item, isMobile, isSelected, select }\" >\r\n                <tr :class=\"{'v-data-table__mobile-table-row': isMobile}\" @click=\"$emit('click:row', item)\">\r\n                    <td \r\n                    v-for=\"header in headers\" \r\n                    :key=\"header.value\" \r\n                    :width=\"!isMobile ? header.width : null\"\r\n                    :class=\"[{'v-data-table__mobile-row': isMobile},{'v-data-table__divider': !isMobile}, {[`text-${header.align || 'start'}`]: !isMobile}, ...header.class]\"\r\n                    >\r\n                        <div :class=\"{'v-data-table__mobile-row__header': isMobile}\" v-if=\"isMobile\">{{header.text}}</div>\r\n                        \r\n                        <div v-if=\"header.value == 'data-table-select'\"  :class=\"{'v-data-table__mobile-row__cell': isMobile}\" >\r\n                            <VSimpleCheckbox :ripple=\"false\" class=\"v-data-table__checkbox\" :value=\"isSelected\" @input=\"select\" />\r\n                        </div>\r\n                        <div  v-else-if=\"header.value == 'actions'\"   :class=\"{'v-data-table__mobile-row__cell': isMobile}\" >\r\n                            <v-tooltip bottom v-for=\"(btn, ind) in getHeaderButtons(header)\" :key=\"ind\" >\r\n                                <template v-slot:activator=\"{ on, attrs }\">\r\n                                    <v-btn icon\r\n                                        v-bind=\"typeof btn.bind == 'function' ? btn.bind(vm, item) : btn.bind\"\r\n                                        v-on=\"typeof btn.on == 'function' ? btn.on(vm, item) : btn.on\"\r\n                                    >\r\n\r\n                                        <v-icon\r\n                                        v-bind=\"attrs\" \r\n                                        v-on=\"on\"\r\n                                        small\r\n                                      \r\n                                        >\r\n                                        {{ btn.icon }}\r\n                                        </v-icon>\r\n                                    </v-btn>\r\n                                </template>\r\n                                <span>{{btn.title}}</span>\r\n                            </v-tooltip>\r\n            \r\n                        </div>\r\n                        <div v-else-if=\"header.component\"  :class=\"{'v-data-table__mobile-row__cell': isMobile}\" >\r\n                            \r\n                            <component \r\n                            :is=\"header.component.is || header.component\" \r\n                            v-bind=\"typeof header.component == 'function' ? {} : typeof header.component.bind == 'function' ? header.component.bind(vm, item) : (header.component.bind || {})\"\r\n                            v-on=\"typeof header.component.on == 'function' ? header.component.on(vm, item) : header.component.on\"\r\n                            :item=\"item\" \r\n                            :header=\"header\"\r\n                            ></component>\r\n\r\n                        </div>\r\n\r\n                        <div v-else  :class=\"{'v-data-table__mobile-row__cell': isMobile}\"  v-html=\"$options.filters.dynamic([item, header.value], header.format, getFormatArgs(header.formatArgs, item) || [])\"></div>\r\n\r\n                    </td>\r\n                </tr>\r\n      </template>\r\n  </v-data-table>\r\n</template>\r\n<script>\r\n \r\n\r\nexport default {\r\n  name: 'data-table',\r\n  computed: {\r\n    vm () {\r\n            return this\r\n        },\r\n  },\r\n  methods: {\r\n    getHeaderButtons (header) {\r\n        if (!header.buttons) return []\r\n\r\n        return header.buttons.filter(btn => {\r\n            if (btn.if) {\r\n                switch (typeof btn.if) {\r\n                    case 'function':\r\n                    return btn.if(this);\r\n                    case 'boolean':\r\n                    return btn.if;\r\n                    default:\r\n                    return true;\r\n                }\r\n            } else\r\n            return true\r\n        })\r\n    }\r\n  }\r\n  \r\n}\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DataTable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DataTable.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DataTable.vue?vue&type=template&id=724a3e44&\"\nimport script from \"./DataTable.vue?vue&type=script&lang=js&\"\nexport * from \"./DataTable.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VDataTable } from 'vuetify/lib/components/VDataTable';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VSimpleCheckbox } from 'vuetify/lib/components/VCheckbox';\nimport { VTooltip } from 'vuetify/lib/components/VTooltip';\ninstallComponents(component, {VBtn,VDataTable,VIcon,VSimpleCheckbox,VTooltip})\n","import tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nimport itemButtons from './defaults/item_buttons'\r\n\r\nexport default {\r\n    title: {\r\n        singular: 'Business',\r\n        plural: 'Businesses',\r\n    },\r\n    icon: 'mdi-domain',\r\n    items: {\r\n        buttons: tableButtons.get('new', 'delete'),\r\n        headers: [\r\n            {\r\n                text: 'Name',\r\n                align: 'start',\r\n                sortable: false,\r\n                value: 'name',\r\n            },\r\n            { text: '', value: 'actions', width: '150', buttons: rowButtons.get() }\r\n        ]\r\n    },\r\n    item: {\r\n        buttons: itemButtons.get('save', 'Cancel', 'spacer', 'delete'),\r\n        sidebar: {\r\n            panels: [\r\n                {\r\n                    title: 'Created By',\r\n                    icon: \"mdi-account\",\r\n                    fields: [\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'user',\r\n                            if: vm => (vm.user.rights.filter(e => e.collection == 'business')[0].write.allOwn == 'all'),\r\n                            default: vm => vm.user,\r\n                            bind: {\r\n                                label: \"User\",\r\n                                template: 'user',\r\n                                collection: 'user',\r\n                                itemText: \"displayName\",\r\n                                itemValue: \"_id\",\r\n                                hideAddNew: true,\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        content: {\r\n            panels: [\r\n                {\r\n                    title: 'Name',\r\n                    fields: [\r\n                        {\r\n                            input: 'text',\r\n                            name: 'name',\r\n                            bind: {\r\n                                label: \"Name\",\r\n                                rules: [\r\n                                    v => !!v || 'Name is required',\r\n                                ],\r\n                                required: true,\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    form: [\r\n        {\r\n            label: 'General',\r\n            fields: [\r\n                {\r\n                    input: 'text',\r\n                    name: 'name',\r\n                    bind: {\r\n                        label: \"Name\",\r\n                        rules: [\r\n                            v => !!v || 'Name is required',\r\n                        ],\r\n                        required: true,\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}","'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.string.iterator');\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar global = require('../internals/global');\nvar defineProperties = require('../internals/object-define-properties');\nvar redefine = require('../internals/redefine');\nvar anInstance = require('../internals/an-instance');\nvar has = require('../internals/has');\nvar assign = require('../internals/object-assign');\nvar arrayFrom = require('../internals/array-from');\nvar codeAt = require('../internals/string-multibyte').codeAt;\nvar toASCII = require('../internals/string-punycode-to-ascii');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar URLSearchParamsModule = require('../modules/web.url-search-params');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar NativeURL = global.URL;\nvar URLSearchParams = URLSearchParamsModule.URLSearchParams;\nvar getInternalSearchParamsState = URLSearchParamsModule.getState;\nvar setInternalState = InternalStateModule.set;\nvar getInternalURLState = InternalStateModule.getterFor('URL');\nvar floor = Math.floor;\nvar pow = Math.pow;\n\nvar INVALID_AUTHORITY = 'Invalid authority';\nvar INVALID_SCHEME = 'Invalid scheme';\nvar INVALID_HOST = 'Invalid host';\nvar INVALID_PORT = 'Invalid port';\n\nvar ALPHA = /[A-Za-z]/;\nvar ALPHANUMERIC = /[\\d+-.A-Za-z]/;\nvar DIGIT = /\\d/;\nvar HEX_START = /^(0x|0X)/;\nvar OCT = /^[0-7]+$/;\nvar DEC = /^\\d+$/;\nvar HEX = /^[\\dA-Fa-f]+$/;\n// eslint-disable-next-line no-control-regex\nvar FORBIDDEN_HOST_CODE_POINT = /[\\u0000\\u0009\\u000A\\u000D #%/:?@[\\\\]]/;\n// eslint-disable-next-line no-control-regex\nvar FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\\u0000\\u0009\\u000A\\u000D #/:?@[\\\\]]/;\n// eslint-disable-next-line no-control-regex\nvar LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\\u0000-\\u001F ]+|[\\u0000-\\u001F ]+$/g;\n// eslint-disable-next-line no-control-regex\nvar TAB_AND_NEW_LINE = /[\\u0009\\u000A\\u000D]/g;\nvar EOF;\n\nvar parseHost = function (url, input) {\n  var result, codePoints, index;\n  if (input.charAt(0) == '[') {\n    if (input.charAt(input.length - 1) != ']') return INVALID_HOST;\n    result = parseIPv6(input.slice(1, -1));\n    if (!result) return INVALID_HOST;\n    url.host = result;\n  // opaque host\n  } else if (!isSpecial(url)) {\n    if (FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT.test(input)) return INVALID_HOST;\n    result = '';\n    codePoints = arrayFrom(input);\n    for (index = 0; index < codePoints.length; index++) {\n      result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);\n    }\n    url.host = result;\n  } else {\n    input = toASCII(input);\n    if (FORBIDDEN_HOST_CODE_POINT.test(input)) return INVALID_HOST;\n    result = parseIPv4(input);\n    if (result === null) return INVALID_HOST;\n    url.host = result;\n  }\n};\n\nvar parseIPv4 = function (input) {\n  var parts = input.split('.');\n  var partsLength, numbers, index, part, radix, number, ipv4;\n  if (parts.length && parts[parts.length - 1] == '') {\n    parts.pop();\n  }\n  partsLength = parts.length;\n  if (partsLength > 4) return input;\n  numbers = [];\n  for (index = 0; index < partsLength; index++) {\n    part = parts[index];\n    if (part == '') return input;\n    radix = 10;\n    if (part.length > 1 && part.charAt(0) == '0') {\n      radix = HEX_START.test(part) ? 16 : 8;\n      part = part.slice(radix == 8 ? 1 : 2);\n    }\n    if (part === '') {\n      number = 0;\n    } else {\n      if (!(radix == 10 ? DEC : radix == 8 ? OCT : HEX).test(part)) return input;\n      number = parseInt(part, radix);\n    }\n    numbers.push(number);\n  }\n  for (index = 0; index < partsLength; index++) {\n    number = numbers[index];\n    if (index == partsLength - 1) {\n      if (number >= pow(256, 5 - partsLength)) return null;\n    } else if (number > 255) return null;\n  }\n  ipv4 = numbers.pop();\n  for (index = 0; index < numbers.length; index++) {\n    ipv4 += numbers[index] * pow(256, 3 - index);\n  }\n  return ipv4;\n};\n\n// eslint-disable-next-line max-statements\nvar parseIPv6 = function (input) {\n  var address = [0, 0, 0, 0, 0, 0, 0, 0];\n  var pieceIndex = 0;\n  var compress = null;\n  var pointer = 0;\n  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;\n\n  var char = function () {\n    return input.charAt(pointer);\n  };\n\n  if (char() == ':') {\n    if (input.charAt(1) != ':') return;\n    pointer += 2;\n    pieceIndex++;\n    compress = pieceIndex;\n  }\n  while (char()) {\n    if (pieceIndex == 8) return;\n    if (char() == ':') {\n      if (compress !== null) return;\n      pointer++;\n      pieceIndex++;\n      compress = pieceIndex;\n      continue;\n    }\n    value = length = 0;\n    while (length < 4 && HEX.test(char())) {\n      value = value * 16 + parseInt(char(), 16);\n      pointer++;\n      length++;\n    }\n    if (char() == '.') {\n      if (length == 0) return;\n      pointer -= length;\n      if (pieceIndex > 6) return;\n      numbersSeen = 0;\n      while (char()) {\n        ipv4Piece = null;\n        if (numbersSeen > 0) {\n          if (char() == '.' && numbersSeen < 4) pointer++;\n          else return;\n        }\n        if (!DIGIT.test(char())) return;\n        while (DIGIT.test(char())) {\n          number = parseInt(char(), 10);\n          if (ipv4Piece === null) ipv4Piece = number;\n          else if (ipv4Piece == 0) return;\n          else ipv4Piece = ipv4Piece * 10 + number;\n          if (ipv4Piece > 255) return;\n          pointer++;\n        }\n        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n        numbersSeen++;\n        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;\n      }\n      if (numbersSeen != 4) return;\n      break;\n    } else if (char() == ':') {\n      pointer++;\n      if (!char()) return;\n    } else if (char()) return;\n    address[pieceIndex++] = value;\n  }\n  if (compress !== null) {\n    swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex != 0 && swaps > 0) {\n      swap = address[pieceIndex];\n      address[pieceIndex--] = address[compress + swaps - 1];\n      address[compress + --swaps] = swap;\n    }\n  } else if (pieceIndex != 8) return;\n  return address;\n};\n\nvar findLongestZeroSequence = function (ipv6) {\n  var maxIndex = null;\n  var maxLength = 1;\n  var currStart = null;\n  var currLength = 0;\n  var index = 0;\n  for (; index < 8; index++) {\n    if (ipv6[index] !== 0) {\n      if (currLength > maxLength) {\n        maxIndex = currStart;\n        maxLength = currLength;\n      }\n      currStart = null;\n      currLength = 0;\n    } else {\n      if (currStart === null) currStart = index;\n      ++currLength;\n    }\n  }\n  if (currLength > maxLength) {\n    maxIndex = currStart;\n    maxLength = currLength;\n  }\n  return maxIndex;\n};\n\nvar serializeHost = function (host) {\n  var result, index, compress, ignore0;\n  // ipv4\n  if (typeof host == 'number') {\n    result = [];\n    for (index = 0; index < 4; index++) {\n      result.unshift(host % 256);\n      host = floor(host / 256);\n    } return result.join('.');\n  // ipv6\n  } else if (typeof host == 'object') {\n    result = '';\n    compress = findLongestZeroSequence(host);\n    for (index = 0; index < 8; index++) {\n      if (ignore0 && host[index] === 0) continue;\n      if (ignore0) ignore0 = false;\n      if (compress === index) {\n        result += index ? ':' : '::';\n        ignore0 = true;\n      } else {\n        result += host[index].toString(16);\n        if (index < 7) result += ':';\n      }\n    }\n    return '[' + result + ']';\n  } return host;\n};\n\nvar C0ControlPercentEncodeSet = {};\nvar fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {\n  ' ': 1, '\"': 1, '<': 1, '>': 1, '`': 1\n});\nvar pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {\n  '#': 1, '?': 1, '{': 1, '}': 1\n});\nvar userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {\n  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\\\': 1, ']': 1, '^': 1, '|': 1\n});\n\nvar percentEncode = function (char, set) {\n  var code = codeAt(char, 0);\n  return code > 0x20 && code < 0x7F && !has(set, char) ? char : encodeURIComponent(char);\n};\n\nvar specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nvar isSpecial = function (url) {\n  return has(specialSchemes, url.scheme);\n};\n\nvar includesCredentials = function (url) {\n  return url.username != '' || url.password != '';\n};\n\nvar cannotHaveUsernamePasswordPort = function (url) {\n  return !url.host || url.cannotBeABaseURL || url.scheme == 'file';\n};\n\nvar isWindowsDriveLetter = function (string, normalized) {\n  var second;\n  return string.length == 2 && ALPHA.test(string.charAt(0))\n    && ((second = string.charAt(1)) == ':' || (!normalized && second == '|'));\n};\n\nvar startsWithWindowsDriveLetter = function (string) {\n  var third;\n  return string.length > 1 && isWindowsDriveLetter(string.slice(0, 2)) && (\n    string.length == 2 ||\n    ((third = string.charAt(2)) === '/' || third === '\\\\' || third === '?' || third === '#')\n  );\n};\n\nvar shortenURLsPath = function (url) {\n  var path = url.path;\n  var pathSize = path.length;\n  if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {\n    path.pop();\n  }\n};\n\nvar isSingleDot = function (segment) {\n  return segment === '.' || segment.toLowerCase() === '%2e';\n};\n\nvar isDoubleDot = function (segment) {\n  segment = segment.toLowerCase();\n  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';\n};\n\n// States:\nvar SCHEME_START = {};\nvar SCHEME = {};\nvar NO_SCHEME = {};\nvar SPECIAL_RELATIVE_OR_AUTHORITY = {};\nvar PATH_OR_AUTHORITY = {};\nvar RELATIVE = {};\nvar RELATIVE_SLASH = {};\nvar SPECIAL_AUTHORITY_SLASHES = {};\nvar SPECIAL_AUTHORITY_IGNORE_SLASHES = {};\nvar AUTHORITY = {};\nvar HOST = {};\nvar HOSTNAME = {};\nvar PORT = {};\nvar FILE = {};\nvar FILE_SLASH = {};\nvar FILE_HOST = {};\nvar PATH_START = {};\nvar PATH = {};\nvar CANNOT_BE_A_BASE_URL_PATH = {};\nvar QUERY = {};\nvar FRAGMENT = {};\n\n// eslint-disable-next-line max-statements\nvar parseURL = function (url, input, stateOverride, base) {\n  var state = stateOverride || SCHEME_START;\n  var pointer = 0;\n  var buffer = '';\n  var seenAt = false;\n  var seenBracket = false;\n  var seenPasswordToken = false;\n  var codePoints, char, bufferCodePoints, failure;\n\n  if (!stateOverride) {\n    url.scheme = '';\n    url.username = '';\n    url.password = '';\n    url.host = null;\n    url.port = null;\n    url.path = [];\n    url.query = null;\n    url.fragment = null;\n    url.cannotBeABaseURL = false;\n    input = input.replace(LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');\n  }\n\n  input = input.replace(TAB_AND_NEW_LINE, '');\n\n  codePoints = arrayFrom(input);\n\n  while (pointer <= codePoints.length) {\n    char = codePoints[pointer];\n    switch (state) {\n      case SCHEME_START:\n        if (char && ALPHA.test(char)) {\n          buffer += char.toLowerCase();\n          state = SCHEME;\n        } else if (!stateOverride) {\n          state = NO_SCHEME;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case SCHEME:\n        if (char && (ALPHANUMERIC.test(char) || char == '+' || char == '-' || char == '.')) {\n          buffer += char.toLowerCase();\n        } else if (char == ':') {\n          if (stateOverride && (\n            (isSpecial(url) != has(specialSchemes, buffer)) ||\n            (buffer == 'file' && (includesCredentials(url) || url.port !== null)) ||\n            (url.scheme == 'file' && !url.host)\n          )) return;\n          url.scheme = buffer;\n          if (stateOverride) {\n            if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;\n            return;\n          }\n          buffer = '';\n          if (url.scheme == 'file') {\n            state = FILE;\n          } else if (isSpecial(url) && base && base.scheme == url.scheme) {\n            state = SPECIAL_RELATIVE_OR_AUTHORITY;\n          } else if (isSpecial(url)) {\n            state = SPECIAL_AUTHORITY_SLASHES;\n          } else if (codePoints[pointer + 1] == '/') {\n            state = PATH_OR_AUTHORITY;\n            pointer++;\n          } else {\n            url.cannotBeABaseURL = true;\n            url.path.push('');\n            state = CANNOT_BE_A_BASE_URL_PATH;\n          }\n        } else if (!stateOverride) {\n          buffer = '';\n          state = NO_SCHEME;\n          pointer = 0;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case NO_SCHEME:\n        if (!base || (base.cannotBeABaseURL && char != '#')) return INVALID_SCHEME;\n        if (base.cannotBeABaseURL && char == '#') {\n          url.scheme = base.scheme;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          url.cannotBeABaseURL = true;\n          state = FRAGMENT;\n          break;\n        }\n        state = base.scheme == 'file' ? FILE : RELATIVE;\n        continue;\n\n      case SPECIAL_RELATIVE_OR_AUTHORITY:\n        if (char == '/' && codePoints[pointer + 1] == '/') {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          pointer++;\n        } else {\n          state = RELATIVE;\n          continue;\n        } break;\n\n      case PATH_OR_AUTHORITY:\n        if (char == '/') {\n          state = AUTHORITY;\n          break;\n        } else {\n          state = PATH;\n          continue;\n        }\n\n      case RELATIVE:\n        url.scheme = base.scheme;\n        if (char == EOF) {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n        } else if (char == '/' || (char == '\\\\' && isSpecial(url))) {\n          state = RELATIVE_SLASH;\n        } else if (char == '?') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          state = FRAGMENT;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.path.pop();\n          state = PATH;\n          continue;\n        } break;\n\n      case RELATIVE_SLASH:\n        if (isSpecial(url) && (char == '/' || char == '\\\\')) {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        } else if (char == '/') {\n          state = AUTHORITY;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          state = PATH;\n          continue;\n        } break;\n\n      case SPECIAL_AUTHORITY_SLASHES:\n        state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        if (char != '/' || buffer.charAt(pointer + 1) != '/') continue;\n        pointer++;\n        break;\n\n      case SPECIAL_AUTHORITY_IGNORE_SLASHES:\n        if (char != '/' && char != '\\\\') {\n          state = AUTHORITY;\n          continue;\n        } break;\n\n      case AUTHORITY:\n        if (char == '@') {\n          if (seenAt) buffer = '%40' + buffer;\n          seenAt = true;\n          bufferCodePoints = arrayFrom(buffer);\n          for (var i = 0; i < bufferCodePoints.length; i++) {\n            var codePoint = bufferCodePoints[i];\n            if (codePoint == ':' && !seenPasswordToken) {\n              seenPasswordToken = true;\n              continue;\n            }\n            var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);\n            if (seenPasswordToken) url.password += encodedCodePoints;\n            else url.username += encodedCodePoints;\n          }\n          buffer = '';\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url))\n        ) {\n          if (seenAt && buffer == '') return INVALID_AUTHORITY;\n          pointer -= arrayFrom(buffer).length + 1;\n          buffer = '';\n          state = HOST;\n        } else buffer += char;\n        break;\n\n      case HOST:\n      case HOSTNAME:\n        if (stateOverride && url.scheme == 'file') {\n          state = FILE_HOST;\n          continue;\n        } else if (char == ':' && !seenBracket) {\n          if (buffer == '') return INVALID_HOST;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PORT;\n          if (stateOverride == HOSTNAME) return;\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url))\n        ) {\n          if (isSpecial(url) && buffer == '') return INVALID_HOST;\n          if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PATH_START;\n          if (stateOverride) return;\n          continue;\n        } else {\n          if (char == '[') seenBracket = true;\n          else if (char == ']') seenBracket = false;\n          buffer += char;\n        } break;\n\n      case PORT:\n        if (DIGIT.test(char)) {\n          buffer += char;\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url)) ||\n          stateOverride\n        ) {\n          if (buffer != '') {\n            var port = parseInt(buffer, 10);\n            if (port > 0xFFFF) return INVALID_PORT;\n            url.port = (isSpecial(url) && port === specialSchemes[url.scheme]) ? null : port;\n            buffer = '';\n          }\n          if (stateOverride) return;\n          state = PATH_START;\n          continue;\n        } else return INVALID_PORT;\n        break;\n\n      case FILE:\n        url.scheme = 'file';\n        if (char == '/' || char == '\\\\') state = FILE_SLASH;\n        else if (base && base.scheme == 'file') {\n          if (char == EOF) {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n          } else if (char == '?') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n            url.fragment = '';\n            state = FRAGMENT;\n          } else {\n            if (!startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n              url.host = base.host;\n              url.path = base.path.slice();\n              shortenURLsPath(url);\n            }\n            state = PATH;\n            continue;\n          }\n        } else {\n          state = PATH;\n          continue;\n        } break;\n\n      case FILE_SLASH:\n        if (char == '/' || char == '\\\\') {\n          state = FILE_HOST;\n          break;\n        }\n        if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n          if (isWindowsDriveLetter(base.path[0], true)) url.path.push(base.path[0]);\n          else url.host = base.host;\n        }\n        state = PATH;\n        continue;\n\n      case FILE_HOST:\n        if (char == EOF || char == '/' || char == '\\\\' || char == '?' || char == '#') {\n          if (!stateOverride && isWindowsDriveLetter(buffer)) {\n            state = PATH;\n          } else if (buffer == '') {\n            url.host = '';\n            if (stateOverride) return;\n            state = PATH_START;\n          } else {\n            failure = parseHost(url, buffer);\n            if (failure) return failure;\n            if (url.host == 'localhost') url.host = '';\n            if (stateOverride) return;\n            buffer = '';\n            state = PATH_START;\n          } continue;\n        } else buffer += char;\n        break;\n\n      case PATH_START:\n        if (isSpecial(url)) {\n          state = PATH;\n          if (char != '/' && char != '\\\\') continue;\n        } else if (!stateOverride && char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          state = PATH;\n          if (char != '/') continue;\n        } break;\n\n      case PATH:\n        if (\n          char == EOF || char == '/' ||\n          (char == '\\\\' && isSpecial(url)) ||\n          (!stateOverride && (char == '?' || char == '#'))\n        ) {\n          if (isDoubleDot(buffer)) {\n            shortenURLsPath(url);\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else if (isSingleDot(buffer)) {\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else {\n            if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {\n              if (url.host) url.host = '';\n              buffer = buffer.charAt(0) + ':'; // normalize windows drive letter\n            }\n            url.path.push(buffer);\n          }\n          buffer = '';\n          if (url.scheme == 'file' && (char == EOF || char == '?' || char == '#')) {\n            while (url.path.length > 1 && url.path[0] === '') {\n              url.path.shift();\n            }\n          }\n          if (char == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          }\n        } else {\n          buffer += percentEncode(char, pathPercentEncodeSet);\n        } break;\n\n      case CANNOT_BE_A_BASE_URL_PATH:\n        if (char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          url.path[0] += percentEncode(char, C0ControlPercentEncodeSet);\n        } break;\n\n      case QUERY:\n        if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          if (char == \"'\" && isSpecial(url)) url.query += '%27';\n          else if (char == '#') url.query += '%23';\n          else url.query += percentEncode(char, C0ControlPercentEncodeSet);\n        } break;\n\n      case FRAGMENT:\n        if (char != EOF) url.fragment += percentEncode(char, fragmentPercentEncodeSet);\n        break;\n    }\n\n    pointer++;\n  }\n};\n\n// `URL` constructor\n// https://url.spec.whatwg.org/#url-class\nvar URLConstructor = function URL(url /* , base */) {\n  var that = anInstance(this, URLConstructor, 'URL');\n  var base = arguments.length > 1 ? arguments[1] : undefined;\n  var urlString = String(url);\n  var state = setInternalState(that, { type: 'URL' });\n  var baseState, failure;\n  if (base !== undefined) {\n    if (base instanceof URLConstructor) baseState = getInternalURLState(base);\n    else {\n      failure = parseURL(baseState = {}, String(base));\n      if (failure) throw TypeError(failure);\n    }\n  }\n  failure = parseURL(state, urlString, null, baseState);\n  if (failure) throw TypeError(failure);\n  var searchParams = state.searchParams = new URLSearchParams();\n  var searchParamsState = getInternalSearchParamsState(searchParams);\n  searchParamsState.updateSearchParams(state.query);\n  searchParamsState.updateURL = function () {\n    state.query = String(searchParams) || null;\n  };\n  if (!DESCRIPTORS) {\n    that.href = serializeURL.call(that);\n    that.origin = getOrigin.call(that);\n    that.protocol = getProtocol.call(that);\n    that.username = getUsername.call(that);\n    that.password = getPassword.call(that);\n    that.host = getHost.call(that);\n    that.hostname = getHostname.call(that);\n    that.port = getPort.call(that);\n    that.pathname = getPathname.call(that);\n    that.search = getSearch.call(that);\n    that.searchParams = getSearchParams.call(that);\n    that.hash = getHash.call(that);\n  }\n};\n\nvar URLPrototype = URLConstructor.prototype;\n\nvar serializeURL = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var username = url.username;\n  var password = url.password;\n  var host = url.host;\n  var port = url.port;\n  var path = url.path;\n  var query = url.query;\n  var fragment = url.fragment;\n  var output = scheme + ':';\n  if (host !== null) {\n    output += '//';\n    if (includesCredentials(url)) {\n      output += username + (password ? ':' + password : '') + '@';\n    }\n    output += serializeHost(host);\n    if (port !== null) output += ':' + port;\n  } else if (scheme == 'file') output += '//';\n  output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n  if (query !== null) output += '?' + query;\n  if (fragment !== null) output += '#' + fragment;\n  return output;\n};\n\nvar getOrigin = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var port = url.port;\n  if (scheme == 'blob') try {\n    return new URL(scheme.path[0]).origin;\n  } catch (error) {\n    return 'null';\n  }\n  if (scheme == 'file' || !isSpecial(url)) return 'null';\n  return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');\n};\n\nvar getProtocol = function () {\n  return getInternalURLState(this).scheme + ':';\n};\n\nvar getUsername = function () {\n  return getInternalURLState(this).username;\n};\n\nvar getPassword = function () {\n  return getInternalURLState(this).password;\n};\n\nvar getHost = function () {\n  var url = getInternalURLState(this);\n  var host = url.host;\n  var port = url.port;\n  return host === null ? ''\n    : port === null ? serializeHost(host)\n    : serializeHost(host) + ':' + port;\n};\n\nvar getHostname = function () {\n  var host = getInternalURLState(this).host;\n  return host === null ? '' : serializeHost(host);\n};\n\nvar getPort = function () {\n  var port = getInternalURLState(this).port;\n  return port === null ? '' : String(port);\n};\n\nvar getPathname = function () {\n  var url = getInternalURLState(this);\n  var path = url.path;\n  return url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n};\n\nvar getSearch = function () {\n  var query = getInternalURLState(this).query;\n  return query ? '?' + query : '';\n};\n\nvar getSearchParams = function () {\n  return getInternalURLState(this).searchParams;\n};\n\nvar getHash = function () {\n  var fragment = getInternalURLState(this).fragment;\n  return fragment ? '#' + fragment : '';\n};\n\nvar accessorDescriptor = function (getter, setter) {\n  return { get: getter, set: setter, configurable: true, enumerable: true };\n};\n\nif (DESCRIPTORS) {\n  defineProperties(URLPrototype, {\n    // `URL.prototype.href` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-href\n    href: accessorDescriptor(serializeURL, function (href) {\n      var url = getInternalURLState(this);\n      var urlString = String(href);\n      var failure = parseURL(url, urlString);\n      if (failure) throw TypeError(failure);\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.origin` getter\n    // https://url.spec.whatwg.org/#dom-url-origin\n    origin: accessorDescriptor(getOrigin),\n    // `URL.prototype.protocol` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-protocol\n    protocol: accessorDescriptor(getProtocol, function (protocol) {\n      var url = getInternalURLState(this);\n      parseURL(url, String(protocol) + ':', SCHEME_START);\n    }),\n    // `URL.prototype.username` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-username\n    username: accessorDescriptor(getUsername, function (username) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(username));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.username = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.password` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-password\n    password: accessorDescriptor(getPassword, function (password) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(password));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.password = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.host` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-host\n    host: accessorDescriptor(getHost, function (host) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(host), HOST);\n    }),\n    // `URL.prototype.hostname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hostname\n    hostname: accessorDescriptor(getHostname, function (hostname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(hostname), HOSTNAME);\n    }),\n    // `URL.prototype.port` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-port\n    port: accessorDescriptor(getPort, function (port) {\n      var url = getInternalURLState(this);\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      port = String(port);\n      if (port == '') url.port = null;\n      else parseURL(url, port, PORT);\n    }),\n    // `URL.prototype.pathname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-pathname\n    pathname: accessorDescriptor(getPathname, function (pathname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      url.path = [];\n      parseURL(url, pathname + '', PATH_START);\n    }),\n    // `URL.prototype.search` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-search\n    search: accessorDescriptor(getSearch, function (search) {\n      var url = getInternalURLState(this);\n      search = String(search);\n      if (search == '') {\n        url.query = null;\n      } else {\n        if ('?' == search.charAt(0)) search = search.slice(1);\n        url.query = '';\n        parseURL(url, search, QUERY);\n      }\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.searchParams` getter\n    // https://url.spec.whatwg.org/#dom-url-searchparams\n    searchParams: accessorDescriptor(getSearchParams),\n    // `URL.prototype.hash` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hash\n    hash: accessorDescriptor(getHash, function (hash) {\n      var url = getInternalURLState(this);\n      hash = String(hash);\n      if (hash == '') {\n        url.fragment = null;\n        return;\n      }\n      if ('#' == hash.charAt(0)) hash = hash.slice(1);\n      url.fragment = '';\n      parseURL(url, hash, FRAGMENT);\n    })\n  });\n}\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\nredefine(URLPrototype, 'toJSON', function toJSON() {\n  return serializeURL.call(this);\n}, { enumerable: true });\n\n// `URL.prototype.toString` method\n// https://url.spec.whatwg.org/#URL-stringification-behavior\nredefine(URLPrototype, 'toString', function toString() {\n  return serializeURL.call(this);\n}, { enumerable: true });\n\nif (NativeURL) {\n  var nativeCreateObjectURL = NativeURL.createObjectURL;\n  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;\n  // `URL.createObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n  // eslint-disable-next-line no-unused-vars\n  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', function createObjectURL(blob) {\n    return nativeCreateObjectURL.apply(NativeURL, arguments);\n  });\n  // `URL.revokeObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL\n  // eslint-disable-next-line no-unused-vars\n  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', function revokeObjectURL(url) {\n    return nativeRevokeObjectURL.apply(NativeURL, arguments);\n  });\n}\n\nsetToStringTag(URLConstructor, 'URL');\n\n$({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {\n  URL: URLConstructor\n});\n","\r\n \r\nimport tableButtons from './defaults/items_buttons'\r\nimport itemButtons from './defaults/item_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\n \r\nexport default {\r\n    // title: 'Deposits',\r\n    title: {\r\n        singular: 'Deposit',\r\n        plural: 'Deposits',\r\n    },\r\n    icon: 'mdi-bank-transfer-in',\r\n    items: {\r\n        total: {\r\n            headers: [\r\n                {\r\n                    text: 'Subtotal',\r\n                    align: 'start',\r\n                    value: 'subtotal.amount',\r\n                    format: 'money',\r\n                    sortable: false,\r\n                },\r\n                {\r\n                    text: 'Withraw',\r\n                    align: 'start',\r\n                    format: 'money',\r\n                    value: 'withdraw.amount',\r\n                    sortable: false,\r\n                },\r\n                {\r\n                    text: 'Total',\r\n                    align: 'start',\r\n                    format: 'money',\r\n                    value: 'amount',\r\n                    sortable: false,\r\n                }\r\n            ]\r\n        },\r\n        buttons: tableButtons.get('new', 'withdraw', 'delete' ),\r\n       \r\n        filters: [\r\n            {\r\n                input: 'autocomplete',\r\n                name: 'customer',\r\n                col: {\r\n                    sm: 6\r\n                },\r\n                bind: {\r\n                    label: \"Account\",\r\n                    template: 'customer',\r\n                    returnObject: false,\r\n                    prependIcon: \"mdi-account-box\",\r\n                    collection: 'customer',\r\n                    itemText: \"name\",\r\n                    itemValue: \"_id\",\r\n                    searchFields: ['name', 'tpc'],\r\n                    hideAddNew: true,\r\n\r\n                }\r\n            },\r\n            {\r\n                input: 'range',\r\n                name: 'created_on',\r\n                col: {\r\n                    sm: 6\r\n                },\r\n                bind: {\r\n                    label: \"Date\",\r\n                    prependIcon: \"mdi-calendar\",\r\n\r\n                }\r\n            },\r\n        {\r\n            input: 'autocomplete',\r\n            name: 'business',\r\n            if: vm => !(vm.user.business),\r\n            col: {\r\n                sm: 4\r\n            },\r\n            bind: {\r\n                label: \"Business Unit\",\r\n                prependIcon: \"mdi-domain\",\r\n                collection: 'business',\r\n                itemText: \"name\",\r\n                itemValue: \"_id\",\r\n          \r\n\r\n            }\r\n        },\r\n        {\r\n            input: 'autocomplete',\r\n            name: 'department',\r\n            if: vm => !(vm.user.department),\r\n             \r\n            col: {\r\n                sm: 4\r\n            },\r\n            bind: {\r\n                label: \"Department\",\r\n                prependIcon: \"mdi-briefcase-account-outline\",\r\n                collection: 'department',\r\n                itemText: \"name\",\r\n                itemValue: \"_id\",\r\n            \r\n\r\n\r\n            },\r\n            on: vm => ({\r\n                input(evt) {\r\n                    const userField = `filter_${vm.collectionName}_user`\r\n                    if (evt)\r\n                        vm.props[userField] = { \r\n                            query:{\r\n                                department: evt\r\n                            }\r\n                        }\r\n                    else\r\n                        delete vm.props[userField]\r\n                }\r\n            })\r\n        },\r\n        {\r\n            input: 'autocomplete',\r\n            name: 'user',\r\n            if: vm => (vm.getPermissions('deposit').write.allOwn == 'all'),\r\n            col: {\r\n                sm: 4\r\n            },\r\n            bind: {\r\n                label: \"Owner\",\r\n                template: 'user',\r\n                prependIcon: \"mdi-account\",\r\n                collection: 'user',\r\n                itemText: \"displayName\",\r\n                itemValue: \"_id\",\r\n                hideAddNew: true,\r\n                or: false,\r\n                query: {\r\n                    role: ['!wakel', '!affiliate']\r\n                }\r\n\r\n            }\r\n        },\r\n        \r\n\r\n        ],\r\n        headers: [\r\n            {\r\n                text: 'TP Account',\r\n                align: 'start',\r\n                value: 'customer.tpc',\r\n                sortable: false,\r\n            },\r\n            { text: 'Account name', sortable: false, value: 'customer.name' },\r\n            { text: 'Country', sortable: false, value: 'customer.country', format: 'country', width: '150' },\r\n            { text: 'Type', sortable: false, value: 'type', format: 'depositType', width: '50' },\r\n            { text: 'Amount', value: 'amount', format: 'money' },\r\n            { text: 'Payment Method', sortable: false, value: 'payment_method.name' },\r\n            { text: 'Affiliate', value: 'customer.affiliate.name' },\r\n            { text: 'Sub Affiliate', value: 'customer.subaffiliate.name' },\r\n            { text: 'Created Date', value: 'created_on', width: '120', format: 'date' },\r\n            { text: 'Note', value: 'note' },\r\n            { text: 'Business Unit', value: 'business.name', sortable: false },\r\n            { text: 'Department', value: 'department.name', sortable: false },\r\n            { \r\n                text: 'Owner', \r\n                sortable: false, \r\n                value: 'user.displayName', \r\n                width: '200',\r\n                component: () => import('./../components/items/fields/User.vue') \r\n            },\r\n            { text: 'profileImage', sortable: false, value: 'user.profileImage', hide: true },\r\n            { \r\n                text: '', \r\n                value: 'actions', \r\n                sortable: false, \r\n                width: '150',\r\n                buttons: rowButtons.get() \r\n            }\r\n            ]\r\n    },\r\n    item: {\r\n        buttons: itemButtons.get('save', 'Cancel', 'spacer', 'delete'),\r\n        sidebar: {\r\n            panels: [\r\n                {   \r\n                    title: \"Created Date\",\r\n                    fields: [\r\n                        {\r\n                            input: 'date',\r\n                            name: 'created_on',\r\n                            default: (new Date()).toISOString().split('T')[0],\r\n                            bind: {\r\n                                label: \"Date\",\r\n                                prependInnerIcon: 'mdi-calendar',\r\n                                required: true,\r\n                                rules: [\r\n                                    v => !!v || 'Created On is required',\r\n                                ],\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    title: 'Business',\r\n                    // icon: 'mdi-domain',\r\n                    fields: [\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'business',\r\n                            if: vm => !(vm.user.business),\r\n                            default: vm => vm.user.business,\r\n                            bind: {\r\n                                label: \"Business Unit\",\r\n                                prependInnerIcon: \"mdi-domain\",\r\n                                collection: 'business',\r\n                                itemText: \"name\",\r\n                                itemValue: \"_id\",\r\n                                required: true,\r\n                                rules: [\r\n                                    v => !!v || 'Business Unit is required',\r\n                                ],\r\n                            }\r\n                        },\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'department',\r\n                            if: vm => !(vm.user.department),\r\n                            default: vm => vm.user.department,\r\n                            bind: () => ({\r\n                                label: \"Department\",\r\n                                prependInnerIcon: \"mdi-briefcase-account-outline\",\r\n                                collection: 'department',\r\n                                itemText: \"name\",\r\n                                itemValue: \"_id\",\r\n                                required: true,\r\n                                rules: [\r\n                                    v => !!v || 'Department is required',\r\n                                ]\r\n                            }),\r\n                            on: (vm) => ({\r\n                                input(evt) {\r\n                                    const fieldName = vm.collectionName + '_' + 'user'\r\n                                    if (evt) {\r\n                                        vm.props[fieldName] = {\r\n                                            query: {\r\n                                                department: evt,\r\n                                                role: ['!wakel', '!affiliate']\r\n                                            }\r\n                                        }\r\n                                        \r\n                                    } else if (vm.props[fieldName]) {\r\n                                        delete vm.props[fieldName]\r\n                                    }\r\n                                }\r\n                            })\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    title: 'Owner',\r\n                    icon: 'mdi-account',\r\n                   \r\n                    fields: [\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'user',\r\n                            if: vm => (vm.user.rights.filter(e => e.collection == 'deposit')[0].write.allOwn == 'all'),\r\n                            default: vm => vm.user,\r\n                            bind: (vm) => ({\r\n                                label: \"Owner\",\r\n                                // prependInnerIcon: \"mdi-account\",\r\n                                template: 'user',\r\n                                collection: 'user',\r\n                                itemText: \"displayName\",\r\n                                itemValue: \"_id\",\r\n                                required: true,\r\n                                rules: [\r\n                                    v => !!v || 'Owner is required',\r\n                                ],\r\n                                or: false,\r\n                                query: (() => {\r\n                                    return vm.data.department ? { department: vm.data.department, role: ['!wakel', '!affiliate'] } : { role: ['!wakel', '!affiliate'] }\r\n                                })() \r\n                            })\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        content: {\r\n            panels: [\r\n                {\r\n                    title: 'Account',\r\n                    icon: 'mdi-account-box',\r\n                    buttons: [\r\n                        {\r\n                            title: 'Add New Account',\r\n                            if: vm => (vm.getPermissions('customer').write.value && vm.isNew),\r\n                            icon: 'mdi-account-plus',\r\n                            bind: {\r\n                                color: 'green'\r\n                            },\r\n                            on: vm => ({\r\n                                click () {\r\n                                    const backURL = btoa(vm.$route.path)\r\n                                    const cachState = Object.assign({}, vm.$data)\r\n                                    localStorage.setItem('backURL', JSON.stringify({\r\n                                        backURL,\r\n                                        cachState\r\n                                    }))\r\n                                    \r\n                                    vm.$router.push({\r\n                                        path: '/customer/new',\r\n                                        query: {\r\n                                            field: 'customer',\r\n                                            backURL: btoa(vm.$route.path)\r\n                                        }\r\n                                    })\r\n                                }\r\n                            })\r\n                        }\r\n                    ],\r\n                    fields: [\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'customer',\r\n                            bind: () => ({\r\n                                label: \"Account\",\r\n                            \r\n                                template: 'customer',\r\n                                collection: 'customer',\r\n                                itemText: \"name\",\r\n                                itemValue: \"_id\",\r\n                                required: true,\r\n                                searchFields: ['tpc'],\r\n\r\n                                rules: [\r\n                                    v => !!v || 'Account is required',\r\n                                ],\r\n                            })\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    title: 'Payment',\r\n                   \r\n                    fields: [\r\n                        {\r\n                            input: 'text',\r\n                            name: 'amount',\r\n                           \r\n                            bind: {\r\n                                label: \"Amount\",\r\n                                prependInnerIcon: 'mdi-currency-usd',\r\n                                required: true,\r\n                                type: 'number',\r\n                                rules: [\r\n                                    v => !!v || 'Amount is required',\r\n                                ],\r\n                            }\r\n                        },\r\n\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'payment_method',\r\n                           \r\n                            if() {\r\n                                // hide on withdraw\r\n                                const urlParams = new URLSearchParams(location.search);\r\n                                return urlParams.get('type') != 'wtd'\r\n                            },\r\n                            default: () => null,\r\n                            bind: {\r\n                                label: \"Payment Method\",\r\n                                prependInnerIcon: \"mdi-credit-card-settings-outline\",\r\n                                collection: 'payment_method',\r\n                                itemText: \"name\",\r\n                                itemValue: \"_id\",\r\n                                required: true,\r\n\r\n\r\n                                rules: [\r\n                                    v => !!v || 'Payment Method is required',\r\n                                ],\r\n                            }\r\n                        },\r\n                        {\r\n                            input: 'hidden',\r\n                            name: 'type',\r\n                            default() {\r\n                                const urlParams = new URLSearchParams(location.search);\r\n                                return urlParams.get('type')\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    title: 'Note',\r\n                    icon: 'mdi-message',\r\n                    fields: [\r\n                        {\r\n                            input: 'textarea',\r\n                            name: 'note',\r\n                            bind: {\r\n                                placeholder: \"Write a note...\"\r\n                            }\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    form: [\r\n        {\r\n            label: 'General',\r\n            fields: [\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'customer',\r\n                    bind: {\r\n                        label: \"Account\",\r\n                        prependIcon: \"mdi-account-box\",\r\n                        collection: 'customer',\r\n                        itemText: \"name\",\r\n                        itemValue: \"_id\",\r\n                        required: true,\r\n                        searchFields: ['name', 'tpc'],\r\n\r\n                        rules: [\r\n                            v => !!v || 'Account is required',\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    input: 'text',\r\n                    name: 'amount',\r\n\r\n                    bind: {\r\n                        label: \"Amount\",\r\n                        prependIcon: 'mdi-cash',\r\n                        required: true,\r\n                        type: 'number',\r\n                        rules: [\r\n                            v => !!v || 'Amount is required',\r\n                        ],\r\n                    }\r\n                },\r\n\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'payment_method',\r\n                    if() {\r\n                        // hide on withdraw\r\n                        const urlParams = new URLSearchParams(location.search);\r\n                        return urlParams.get('type') != 'wtd'\r\n                    },\r\n                    default: () =>  null,\r\n                    bind: {\r\n                        label: \"Payment Method\",\r\n                        prependIcon: \"mdi-credit-card-settings-outline\",\r\n                        collection: 'payment_method',\r\n                        itemText: \"name\",\r\n                        itemValue: \"_id\",\r\n                        required: true,\r\n\r\n\r\n                        rules: [\r\n                            v => !!v || 'Payment Method is required',\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    input: 'hidden',\r\n                    name: 'type',\r\n                    default () {\r\n                        const urlParams = new URLSearchParams(location.search);\r\n                        return urlParams.get('type')  \r\n                    }\r\n                },\r\n                {\r\n                    input: 'date',\r\n                    name: 'created_on',\r\n                    default: (new Date()).toISOString().split('T')[0],\r\n                    bind: {\r\n                        label: \"Created Date\",\r\n                        prependIcon: 'mdi-calendar',\r\n                        required: true,\r\n\r\n\r\n                        rules: [\r\n                            v => !!v || 'Created On is required',\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    input: 'textarea',\r\n                    name: 'note',\r\n                    bind: {\r\n                        label: \"Note\",\r\n                        prependIcon: 'mdi-message',\r\n                        outlined:true\r\n                    }\r\n                },\r\n                // {\r\n                //     input: 'select',\r\n                //     name: 'type',\r\n                //     bind: {\r\n                //         label: \"Deposit Type\",\r\n                //         prependIcon: 'mdi-bank-transfer',\r\n                //         items: [\r\n                //             { text: 'First Deposit', value: 'ftd' }, \r\n                //             { text: 'Retention Deposit', value: 'rtn' },\r\n                //             { text: 'Withdraw', value: 'wtd' },\r\n                //         ],\r\n                //         required: true,\r\n\r\n\r\n                //         rules: [\r\n                //             v => !!v || 'Created On is required',\r\n                //         ],\r\n                //     }\r\n                // },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'business',\r\n                    if: state => !(state.auth.user.business),\r\n                    default: state => state.auth.user.business,\r\n                    bind: {\r\n                        label: \"Business Unit\",\r\n                        prependIcon: \"mdi-domain\",\r\n                        collection: 'business',\r\n                        itemText: \"name\",\r\n                        itemValue: \"_id\",\r\n                        required: true,\r\n                        rules: [\r\n                            v => !!v || 'Business Unit is required',\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'department',\r\n                    if: state => !(state.auth.user.department),\r\n                    default: state => state.auth.user.department,\r\n                    bind: {\r\n                        label: \"Department\",\r\n                        prependIcon: \"mdi-briefcase-account-outline\",\r\n                        collection: 'department',\r\n                        itemText: \"name\",\r\n                        itemValue: \"_id\",\r\n                        required: true,\r\n                        rules: [\r\n                            v => !!v || 'Department is required',\r\n                        ],\r\n                    },\r\n                    on: () => ({\r\n                        input(evt) {\r\n                            const { deposit_user } = window.$form.$refs\r\n                            if (!evt && deposit_user[0].query.department)\r\n                                delete deposit_user[0].query.department\r\n                            else if (evt)\r\n                                deposit_user[0].query.department = evt\r\n\r\n                        }\r\n                    })\r\n                },\r\n\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'user',\r\n                    if: state => (state.auth.user.rights.filter(e => e.collection == 'deposit')[0].write.allOwn == 'all'),\r\n                    default: state => state.auth.user._id,\r\n                    bind: {\r\n                        label: \"Owner\",\r\n                        prependIcon: \"mdi-account\",\r\n                        collection: 'user',\r\n                        itemText: \"displayName\",\r\n                        itemValue: \"_id\",\r\n                        required: true,\r\n                        rules: [\r\n                            v => !!v || 'Owner is required',\r\n                        ],\r\n                        or: false,\r\n                        query: {\r\n\r\n                            role: ['!wakel', '!affiliate']\r\n                        }\r\n                    }\r\n                },\r\n\r\n\r\n            ]\r\n        }\r\n    ]\r\n\r\n}\r\n\r\n\r\n// export default {\r\n//     title: 'Deposits',\r\n//     icon: 'mdi-bank-transfer-in',\r\n//     withdraw: true,\r\n//     filters:[\r\n       \r\n//         {\r\n//             input: 'autocomplete',\r\n//             name: 'business',\r\n//             if: state => !(state.auth.user.business),\r\n//             bind: {\r\n//                 label: \"Business Unit\",\r\n//                 prependInnerIcon: \"mdi-domain\",\r\n//                 collection: 'business',\r\n//                 itemText: \"name\",\r\n//                 itemValue: \"_id\",\r\n//                 hideAddNew: true,\r\n               \r\n//             }\r\n//         },\r\n//         {\r\n//             input: 'autocomplete',\r\n//             name: 'department',\r\n//             if: state => !(state.auth.user.department),\r\n//             bind: {\r\n//                 label: \"Department\",\r\n//                 prependInnerIcon: \"mdi-briefcase-account-outline\",\r\n//                 collection: 'department',\r\n//                 itemText: \"name\",\r\n//                 itemValue: \"_id\",\r\n//                 hideAddNew: true,\r\n               \r\n                \r\n//             },\r\n//             on: {\r\n//                 input(evt) {\r\n//                     const { user } = window.$items.$refs\r\n//                     if (!evt && user[0].query.department)\r\n//                         delete user[0].query.department\r\n//                     else if(evt) \r\n//                         user[0].query.department = evt\r\n                   \r\n//                 }\r\n//             }\r\n//         },\r\n//         {\r\n//             input: 'autocomplete',\r\n//             name: 'user',\r\n//             if: state => (state.auth.user.rights.filter(e => e.collection == 'deposit')[0].write.allOwn == 'all'),\r\n//             bind: {\r\n//                 label: \"Owner\",\r\n//                 prependInnerIcon: \"mdi-account\",\r\n//                 collection: 'user',\r\n//                 itemText: \"displayName\",\r\n//                 itemValue: \"_id\",\r\n//                 hideAddNew: true,\r\n//                 or: false,\r\n//                 query: {\r\n//                     role: ['!wakel', '!affiliate']\r\n//                 }\r\n                \r\n//             }\r\n//         },\r\n//         {\r\n//             input: 'autocomplete',\r\n//             name: 'customer',\r\n//             bind: {\r\n//                 label: \"Account\",\r\n//                 prependInnerIcon: \"mdi-account-box\",\r\n//                 collection: 'customer',\r\n//                 itemText: \"name\",\r\n//                 itemValue: \"_id\",\r\n//                 searchFields: ['name', 'tpc'],\r\n//                 hideAddNew: true,\r\n\r\n//             }\r\n//         },\r\n//         {\r\n//             input: 'range',\r\n//             name: 'created_on',\r\n//             bind: {\r\n//                 label: \"Date\",\r\n//                 prependInnerIcon: \"mdi-calendar\",\r\n\r\n//             }\r\n//         }\r\n\r\n//     ],\r\n\r\n//     table: [\r\n//         {\r\n//             text: 'TP Account',\r\n//             align: 'start',\r\n//             value: 'customer.tpc',\r\n//             sortable: false,\r\n//         },\r\n//         { text: 'Account name', sortable: false, value: 'customer.name' },\r\n//         { text: 'Country', sortable: false, value: 'customer.country', format: 'country' },\r\n//         { text: 'Type', sortable: false, value: 'type', format: 'depositType' },\r\n//         { text: 'Amount', value: 'amount', format: 'money' },\r\n//         { text: 'Payment Method', sortable: false, value: 'payment_method.name' },\r\n//         { text: 'Affiliate', value: 'customer.affiliate.name' },\r\n//         { text: 'Sub Affiliate', value: 'customer.subaffiliate.name' },\r\n//         { text: 'Created Date', value: 'created_on', width: '120', format: 'date' },\r\n//         { text: 'Note', value: 'note' },\r\n//         { text: 'Business Unit', value: 'business.name', sortable: false },\r\n//         { text: 'Department', value: 'department.name', sortable: false },\r\n//         { text: 'Owner', sortable: false, value: 'user.displayName' },\r\n//         { text: 'Actions', value: 'actions', sortable: false, width: '150' }\r\n\r\n//     ],\r\n//     form: [\r\n//         {\r\n//             label: 'General',\r\n//             fields: [\r\n//                 {\r\n//                     input: 'autocomplete',\r\n//                     name: 'customer',\r\n//                     bind: {\r\n//                         label: \"Account\",\r\n//                         prependIcon: \"mdi-account-box\",\r\n//                         collection: 'customer',\r\n//                         itemText: \"name\",\r\n//                         itemValue: \"_id\",\r\n//                         required: true,\r\n//                         searchFields: ['name', 'tpc'],\r\n\r\n//                         rules: [\r\n//                             v => !!v || 'Account is required',\r\n//                         ],\r\n//                     }\r\n//                 },\r\n//                 {\r\n//                     input: 'text',\r\n//                     name: 'amount',\r\n                   \r\n//                     bind: {\r\n//                         label: \"Amount\",\r\n//                         prependIcon: 'mdi-cash',\r\n//                         required: true,\r\n//                         type: 'number',\r\n//                         rules: [\r\n//                             v => !!v || 'Amount is required',\r\n//                         ],\r\n//                     }\r\n//                 },\r\n               \r\n//                 {\r\n//                     input: 'autocomplete',\r\n//                     name: 'payment_method',\r\n//                     if() {\r\n//                         // hide on withdraw\r\n//                         const urlParams = new URLSearchParams(location.search);\r\n//                         return urlParams.get('type') != 'wtd'\r\n//                     },\r\n//                     default: () =>  null,\r\n//                     bind: {\r\n//                         label: \"Payment Method\",\r\n//                         prependIcon: \"mdi-credit-card-settings-outline\",\r\n//                         collection: 'payment_method',\r\n//                         itemText: \"name\",\r\n//                         itemValue: \"_id\",\r\n//                         required: true,\r\n                        \r\n                        \r\n//                         rules: [\r\n//                             v => !!v || 'Payment Method is required',\r\n//                         ],\r\n//                     }\r\n//                 },\r\n//                 {\r\n//                     input: 'hidden',\r\n//                     name: 'type',\r\n//                     default () {\r\n//                         const urlParams = new URLSearchParams(location.search);\r\n//                         return urlParams.get('type')  \r\n//                     }\r\n//                 },\r\n//                 {\r\n//                     input: 'date',\r\n//                     name: 'created_on',\r\n//                     default: (new Date()).toISOString().split('T')[0],\r\n//                     bind: {\r\n//                         label: \"Created Date\",\r\n//                         prependIcon: 'mdi-calendar',\r\n//                         required: true,\r\n                        \r\n                        \r\n//                         rules: [\r\n//                             v => !!v || 'Created On is required',\r\n//                         ],\r\n//                     }\r\n//                 },\r\n//                 {\r\n//                     input: 'textarea',\r\n//                     name: 'note',\r\n//                     bind: {\r\n//                         label: \"Note\",\r\n//                         prependIcon: 'mdi-message',\r\n//                         outlined:true\r\n//                     }\r\n//                 },\r\n//                 // {\r\n//                 //     input: 'select',\r\n//                 //     name: 'type',\r\n//                 //     bind: {\r\n//                 //         label: \"Deposit Type\",\r\n//                 //         prependIcon: 'mdi-bank-transfer',\r\n//                 //         items: [\r\n//                 //             { text: 'First Deposit', value: 'ftd' }, \r\n//                 //             { text: 'Retention Deposit', value: 'rtn' },\r\n//                 //             { text: 'Withdraw', value: 'wtd' },\r\n//                 //         ],\r\n//                 //         required: true,\r\n\r\n\r\n//                 //         rules: [\r\n//                 //             v => !!v || 'Created On is required',\r\n//                 //         ],\r\n//                 //     }\r\n//                 // },\r\n//                 {\r\n//                     input: 'autocomplete',\r\n//                     name: 'business',\r\n//                     if: state => !(state.auth.user.business),\r\n//                     default: state => state.auth.user.business,\r\n//                     bind: {\r\n//                         label: \"Business Unit\",\r\n//                         prependIcon: \"mdi-domain\",\r\n//                         collection: 'business',\r\n//                         itemText: \"name\",\r\n//                         itemValue: \"_id\",\r\n//                         required: true,\r\n//                         rules: [\r\n//                             v => !!v || 'Business Unit is required',\r\n//                         ],\r\n//                     }\r\n//                 },\r\n//                 {\r\n//                     input: 'autocomplete',\r\n//                     name: 'department',\r\n//                     if: state => !(state.auth.user.department),\r\n//                     default: state => state.auth.user.department,\r\n//                     bind: {\r\n//                         label: \"Department\",\r\n//                         prependIcon: \"mdi-briefcase-account-outline\",\r\n//                         collection: 'department',\r\n//                         itemText: \"name\",\r\n//                         itemValue: \"_id\",\r\n//                         required: true,\r\n//                         rules: [\r\n//                             v => !!v || 'Department is required',\r\n//                         ],\r\n//                     },\r\n//                     on: () => ({\r\n//                         input(evt) {\r\n//                             const { deposit_user } = window.$form.$refs\r\n//                             if (!evt && deposit_user[0].query.department)\r\n//                                 delete deposit_user[0].query.department\r\n//                             else if (evt)\r\n//                                 deposit_user[0].query.department = evt\r\n\r\n//                         }\r\n//                     })\r\n//                 },\r\n                \r\n//                 {\r\n//                     input: 'autocomplete',\r\n//                     name: 'user',\r\n//                     if: state => (state.auth.user.rights.filter(e => e.collection == 'deposit')[0].write.allOwn == 'all'),\r\n//                     default: state => state.auth.user._id,\r\n//                     bind: {\r\n//                         label: \"Owner\",\r\n//                         prependIcon: \"mdi-account\",\r\n//                         collection: 'user',\r\n//                         itemText: \"displayName\",\r\n//                         itemValue: \"_id\",\r\n//                         required: true,\r\n//                         rules: [\r\n//                             v => !!v || 'Owner is required',\r\n//                         ],\r\n//                         or: false,\r\n//                         query: {\r\n                        \r\n//                             role: ['!wakel', '!affiliate']\r\n//                         }\r\n//                     }\r\n//                 },\r\n                \r\n               \r\n//             ]\r\n//         }\r\n//     ]\r\n// }","import get from './getMethod'\r\nexport default {\r\n    get,\r\n    buttons: [\r\n        {\r\n            title: 'New',\r\n            icon: 'mdi-plus',\r\n            if: (vm) => vm.canWrite,\r\n            bind: {\r\n                color: 'green',\r\n            },\r\n            on: (vm) => ({\r\n                click() {\r\n                    vm.$router.push(vm.$route.path + '/new')\r\n                }\r\n            })\r\n        },\r\n        {\r\n            title: 'Withdraw',\r\n            icon: 'mdi-bank-transfer-out',\r\n            if: (vm) => vm.canWrite,\r\n            bind: {\r\n                color: 'red',\r\n            },\r\n            on: (vm) => ({\r\n                click() {\r\n                    vm.$router.push(vm.$route.path + '/new?type=wtd')\r\n                }\r\n            })\r\n        },\r\n        {\r\n            title: 'Stuck',\r\n            icon: 'mdi-bank-off',\r\n            if: (vm) => vm.canWrite,\r\n            bind: {\r\n                color: 'orange',\r\n            },\r\n            on: (vm) => ({\r\n                click() {\r\n                    vm.$router.push(vm.$route.path + '/new?type=stk')\r\n                }\r\n            })\r\n        },\r\n        {\r\n            title: 'Delete',\r\n            icon: 'mdi-delete',\r\n            if: (vm) => vm.canDelete,\r\n            bind: (vm) => ({\r\n                color: 'red',\r\n                disabled: vm.selected.length < 1\r\n            }),\r\n            on: (vm) => ({\r\n                async click() {\r\n                    if (vm.selected.length) {\r\n                        const confirmed = await vm.$confirm(`Do you realy want to delete <b>(${vm.selected.length})</b> items ?`, { title: 'Delete Item', color: 'red' })\r\n                        if (confirmed) {\r\n                            vm.loading = true\r\n                            const rm = await vm.remove({ collection: vm.$route.params.collection, id: 'delete', data: vm.selected.map(item => item._id) })\r\n                            if (rm.status === 200) {\r\n\r\n                                vm.fetch()\r\n                                vm.loading = false\r\n                                vm.$store.commit('success', `(${vm.selected.length}) items has been deleted successfuly`)\r\n                                vm.selected = []\r\n                            }\r\n                        }\r\n                        console.log(confirmed);\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        {\r\n            title: 'Assign',\r\n            icon: 'mdi-clipboard-account',\r\n            if: (vm) => vm.canUpdate,\r\n            bind: (vm) => ({\r\n                color: 'info',\r\n                disabled: vm.selected.length < 1\r\n            }),\r\n            on: (vm) => ({\r\n                async click() {\r\n                    if (vm.selected.length) {\r\n                        vm.dialog.value = true\r\n                        vm.dialog.bind = {\r\n                            'max-width': \"650\",\r\n                            scrollable: true\r\n                        }\r\n                        vm.dialog.component = {\r\n                            is: () => import('./../../components/items/dialog/Assign.vue'),\r\n                            bind: (vm) => ({\r\n                                items: vm.selected,\r\n                                headers: [\r\n                                    { text: 'TP Account', value: 'tpc' },\r\n                                    { text: 'Account Name', value: 'name' },\r\n                                    { text: 'Remove', value: 'action' },\r\n                                ]\r\n                            }),\r\n                            on: (vm) => ({\r\n                                close () {\r\n                                    vm.dialog.value = false\r\n                                },\r\n                                unselect (item) {\r\n                                    vm.selected = vm.selected.filter(e => item != e)\r\n                                  \r\n                                },\r\n                                async save (user) {\r\n                                    if (vm.selected.length) {\r\n                                        const update = await vm.update({\r\n                                            collection: 'customer', id: 'assign', data: {\r\n                                                user: user,\r\n                                                items: vm.selected.map(e => e._id)\r\n                                            }\r\n                                        })\r\n\r\n                                        if (update.status == 200) {\r\n                                            vm.$store.commit('success', update.data.nModified + ' items has been assigned')\r\n                                            vm.dialog.value = false\r\n                                            vm.selected = []\r\n                                            vm.fetch()\r\n                                        }\r\n\r\n                                    } else {\r\n                                        this.$store.commit('error', 'No item has been selected! please select at least one item ')\r\n                                    }\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    ]\r\n}","\r\nimport tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nimport itemButtons from './defaults/item_buttons'\r\n\r\nimport countries from '../country'\r\n \r\n \r\nexport default {\r\n \r\n    title: {\r\n        singular: 'Customer',\r\n        plural: 'Customers',\r\n    },\r\n    icon: 'mdi-account-box',\r\n    \r\n    items: {\r\n        buttons: tableButtons.get('new', 'delete','assign'),\r\n        filters: [\r\n            {\r\n                input: 'text',\r\n                name: 'tpc',\r\n                search: ['name'],\r\n                bind: {\r\n                    label: \"TP/Name Account\",\r\n                    prependIcon: 'mdi-card-account-details',\r\n\r\n                }\r\n            },\r\n            // {\r\n            //     input: 'text',\r\n            //     name: 'name',\r\n            //     bind: {\r\n            //         label: \"Account Name\",\r\n            //         prependInnerIcon: 'mdi-account-box',\r\n\r\n            //     }\r\n            // },\r\n            {\r\n                input: 'autocomplete',\r\n                name: 'country',\r\n                col: {\r\n                    sm: 4\r\n                },\r\n                bind: {\r\n                    template: 'country',\r\n                    label: \"Country\",\r\n                    prependIcon: \"mdi-flag\",\r\n                    items: countries,\r\n                    itemText: \"name\",\r\n                    itemValue: \"code\",\r\n                  \r\n\r\n                }\r\n            },\r\n            {\r\n                input: 'autocomplete',\r\n                name: 'affiliate',\r\n                col: {\r\n                    sm: 4\r\n                },\r\n                bind: {\r\n                    label: \"Affiliate\",\r\n                    collection: 'affiliate',\r\n                    itemText: \"name\",\r\n                    itemValue: \"_id\",\r\n                    prependIcon: \"mdi-account-network-outline\",\r\n                }\r\n            },\r\n            {\r\n                input: 'autocomplete',\r\n                name: 'user',\r\n                if: vm => (vm.getPermissions('customer').write.allOwn == 'all'),\r\n                col: {\r\n                    sm: 4\r\n                },\r\n                bind: {\r\n\r\n                    label: \"Owner\",\r\n                    prependIcon: \"mdi-account\",\r\n                    collection: 'user',\r\n                    template: 'user',\r\n                    itemText: \"displayName\",\r\n                    itemValue: \"_id\",\r\n                   \r\n                \r\n                    query: {\r\n                        role: ['!wakel', '!affiliate']\r\n                    }\r\n                }\r\n            },\r\n            // {\r\n            //     input: 'select',\r\n            //     name: 'status',\r\n            //     bind: {\r\n            //         label: \"Status\",\r\n            //         items: [\r\n            //             { text: 'All', value: null },\r\n            //             { text: 'New', value: 'new' },\r\n            //             { text: 'Call again', value: 'call again' },\r\n            //             { text: 'No Answer', value: 'no Answer' },\r\n            //             { text: 'Not interested', value: 'not interested' },\r\n            //         ],\r\n            //         itemText: \"text\",\r\n            //         itemValue: \"value\",\r\n            //         prependInnerIcon: \"mdi-list-status\",\r\n            //     }\r\n            // }\r\n        ],\r\n        headers: [\r\n            {\r\n                text: 'TP Account',\r\n                align: 'start',\r\n                value: 'tpc',\r\n                sortable: false\r\n            },\r\n            { text: 'Account name', value: 'name', sortable: false },\r\n            { text: 'Country', value: 'country', format: 'country', width: '150'  },\r\n            { text: 'Affiliate', value: 'affiliate.name', sortable: false },\r\n            { text: 'Subaffiliate', value: 'subaffiliate.name', sortable: false },\r\n\r\n            { text: 'FTD', value: 'ftd.amount', sortable: false, format: 'money' },\r\n            { text: 'FTD Date', value: 'ftd.created_on', width: 120, sortable: false, format: 'date' },\r\n            { \r\n                text: 'Owner Conversion', \r\n                value: 'ftd.user.displayName', \r\n                sortable: false,\r\n                width: '200',\r\n                component: () => import('./../components/items/fields/User.vue')\r\n            },\r\n            { text: 'profileImage', sortable: false, value: 'ftd.user.profileImage', hide: true },\r\n\r\n            \r\n\r\n            // { text: 'Status', value: 'status', sortable: false },\r\n            {\r\n                text: 'Owner',\r\n                sortable: false,\r\n                value: 'user.displayName',\r\n                width: '200',\r\n                component: () => import('./../components/items/fields/User.vue')\r\n            },\r\n            { text: 'profileImage', sortable: false, value: 'user.profileImage', hide: true },\r\n\r\n            // { text: 'Deposits', value: 'child.length' },\r\n            // { text: 'Total Deposits', value: 'total[0].amount' },\r\n            { text: '', value: 'actions', sortable: false, width: '150', buttons: rowButtons.get() }\r\n\r\n        ]\r\n    },\r\n    item: {\r\n        buttons: itemButtons.get('save', 'Cancel', 'spacer', 'delete'),\r\n        sidebar: {\r\n            panels: [\r\n                // {\r\n                //     title: \"Status\",\r\n                //     fields: [\r\n                //         {\r\n                //             input: 'select',\r\n                //             name: 'status',\r\n                //             default: () => 'new',\r\n                //             bind: {\r\n                //                 label: \"Status\",\r\n                //                 items: [\r\n                //                     { text: 'New', value: 'new' },\r\n                //                     { text: 'Call again', value: 'call again' },\r\n                //                     { text: 'No Answer', value: 'no Answer' },\r\n                //                     { text: 'Not interested', value: 'not interested' },\r\n                //                 ],\r\n                //                 itemText: \"text\",\r\n                //                 itemValue: \"value\",\r\n                //                 prependInnerIcon: \"mdi-list-status\",\r\n                //             }\r\n                //         }\r\n                //     ]\r\n                // },\r\n                {\r\n                    title: 'Country',\r\n                    icon: \"mdi-flag\",\r\n                    fields: [\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'country',\r\n                            bind: {\r\n                                label: \"Country\",\r\n                                // prependInnerIcon: \"mdi-flag\",\r\n                                // template: {\r\n                                //     item: () => import('../components/autocomplete/country/Item.vue'),\r\n                                //     selection: () => import('../components/autocomplete/country/Selection.vue')\r\n                                // },\r\n                                template: 'country',\r\n                                items: countries,\r\n                                itemText: \"name\",\r\n                                itemValue: \"code\",\r\n                                required: true,\r\n                                hideAddNew: true,\r\n                                rules: [\r\n                                    v => !!v || 'Country is required',\r\n                                ],\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    title: 'Affiliate',\r\n                    fields: [\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'affiliate',\r\n                            bind: {\r\n                                label: \"Affiliate\",\r\n                                collection: 'affiliate',\r\n                                itemText: \"name\",\r\n                                itemValue: \"_id\",\r\n                                prependInnerIcon: \"mdi-account-network-outline\",\r\n                                required: true,\r\n                                rules: [\r\n                                    v => !!v || 'Affiliate is required',\r\n                                ],\r\n                            },\r\n                            on: (vm) => ({\r\n                                input(evt) {\r\n                                    const fieldName = vm.collectionName + '_' + 'subaffiliate'\r\n                                    if (evt) {\r\n                                        vm.props[fieldName] = {\r\n                                            query: {\r\n                                                affiliate: evt ? evt : '!',\r\n                                            }\r\n                                        }\r\n\r\n                                    } else if (vm.props[fieldName]) {\r\n                                        delete vm.props[fieldName]\r\n                                        vm.data['subaffiliate'] = ''\r\n                                    }\r\n\r\n                                }\r\n                            })\r\n                        },\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'subaffiliate',\r\n                            if: (vm) => {\r\n                                return vm.data.affiliate\r\n                            },\r\n                            default: null,\r\n                            bind: (vm) => ({\r\n                                label: \"Subaffiliate\",\r\n                                collection: 'subaffiliate',\r\n                                itemText: \"name\",\r\n                                itemValue: \"_id\",\r\n                                prependInnerIcon: \"mdi-account-network-outline\",\r\n                                hideAddNew: true,\r\n                                query: (() => {\r\n                                    \r\n                                    const id = vm.data.affiliate._id || vm.data.affiliate\r\n                                    \r\n                                    \r\n                                    return { affiliate: id ? id : '!' }\r\n                                })()\r\n                            })\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    title: 'Owner',\r\n                    icon: 'mdi-account',\r\n                    fields: [\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'user',\r\n                            if: vm => (vm.user.rights.filter(e => e.collection == 'customer')[0].write.allOwn == 'all'),\r\n                            default: vm => vm.user,\r\n                            bind: () => ({\r\n                                label: \"Owner\",\r\n                                // prependInnerIcon: \"mdi-account\",\r\n                                collection: 'user',\r\n                                template: 'user',\r\n                                itemText: \"displayName\",\r\n                                itemValue: \"_id\",\r\n                                required: true,\r\n                                rules: [\r\n                                    v => !!v || 'Owner is required',\r\n                                ],\r\n                                or: false,\r\n                                query: {\r\n                                    role: ['!wakel', '!affiliate'],\r\n                                },\r\n                                hideAddNew: true,\r\n                               \r\n                            })\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        content: {\r\n            panels: [\r\n                {\r\n                    title: \"Account\",\r\n                    fields: [\r\n                        {\r\n                            input: 'text',\r\n                            name: 'tpc',\r\n                            bind: {\r\n                                label: \"TP Account\",\r\n                                prependInnerIcon: 'mdi-card-account-details',\r\n                                required: true,\r\n                                rules: [\r\n                                    v => !!v || 'ID is required',\r\n                                ],\r\n                            }\r\n                        },\r\n                        {\r\n                            input: 'text',\r\n                            name: 'name',\r\n                            bind: {\r\n                                label: \"Account Name\",\r\n                                prependInnerIcon: 'mdi-account-box',\r\n                                required: true,\r\n                                rules: [\r\n                                    v => !!v || 'ID is required',\r\n                                ],\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n               \r\n                {\r\n                    title: 'Assignment History',\r\n                    \r\n                    fields: [\r\n                        {\r\n                            input: 'assignment',\r\n                            if: (vm) => !vm.isNew,\r\n                            name: 'history',\r\n                            default: () => []\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    form: [\r\n        {\r\n            label: 'General',\r\n            fields: [\r\n                {\r\n                    input: 'text',\r\n                    name: 'tpc',\r\n                    bind: {\r\n                        label: \"TP Account\",\r\n                        prependIcon: 'mdi-card-account-details',\r\n                        required: true,\r\n                        rules: [\r\n                            v => !!v || 'ID is required',\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    input: 'text',\r\n                    name: 'name',\r\n                    bind: {\r\n                        label: \"Account Name\",\r\n                        prependIcon: 'mdi-account-box',\r\n                        required: true,\r\n                        rules: [\r\n                            v => !!v || 'ID is required',\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'country',\r\n                    bind: {\r\n                        label: \"Country\",\r\n                        prependIcon: \"mdi-flag\",\r\n                        items: countries,\r\n                        itemText: \"name\",\r\n                        itemValue: \"code\",\r\n                        required: true,\r\n                        hideAddNew: true,\r\n                        rules: [\r\n                            v => !!v || 'Country is required',\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'affiliate',\r\n                    bind: {\r\n                        label: \"Affiliate\",\r\n                        collection: 'affiliate',\r\n                        itemText: \"name\",\r\n                        itemValue: \"_id\",\r\n                        prependIcon: \"mdi-account-network-outline\",\r\n                    },\r\n                    on: (vm) => ({\r\n                        init (evt) {\r\n                            if (vm.$refs.customer_subaffiliate) {\r\n                                const [subaffiliate] = vm.$refs.customer_subaffiliate\r\n                                vm.data['subaffiliate'] = null\r\n                                subaffiliate.query.affiliate = evt[0] ? evt[0]._id : '!'\r\n                            }\r\n                        },\r\n                        input (evt) {\r\n                           \r\n                            if (vm.$refs.customer_subaffiliate) {\r\n                                const [subaffiliate] = vm.$refs.customer_subaffiliate\r\n                                vm.data['subaffiliate'] = null \r\n                                subaffiliate.query.affiliate = evt ? evt : '!'\r\n                            }\r\n                        }\r\n                    }) \r\n                },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'subaffiliate',\r\n                    default: null,\r\n                    bind: {\r\n                        label: \"Subaffiliate\",\r\n                        collection: 'subaffiliate',\r\n                        itemText: \"name\",\r\n                        itemValue: \"_id\",\r\n                        prependIcon: \"mdi-account-network-outline\",\r\n                        hideAddNew: true,\r\n                        query: { affiliate: '!' }\r\n                    }\r\n                },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'user',\r\n                    if: state => (state.auth.user.rights.filter(e => e.collection == 'customer')[0].write.allOwn == 'all'),\r\n                    default: state => state.auth.user._id,\r\n                    bind: {\r\n                       \r\n                        label: \"Owner\",\r\n                        prependIcon: \"mdi-account\",\r\n                        collection: 'user',\r\n                        itemText: \"displayName\",\r\n                        itemValue: \"_id\",\r\n                        or: false,\r\n                        query: {\r\n                            role: ['!wakel', '!affiliate'],\r\n                            // department: store.state.rtn\r\n                        },\r\n                        hideAddNew: true,\r\n                    }\r\n                },\r\n                {\r\n                    input: 'select',\r\n                    name: 'status',\r\n                    default: () => 'new',\r\n                    bind: {\r\n                        label: \"Status\",\r\n                        items: [\r\n                            { text: 'New', value: 'new' },\r\n                            { text: 'Call again', value: 'call again' },\r\n                            { text: 'No Answer', value: 'no Answer' },\r\n                            { text: 'Not interested', value: 'not interested' },\r\n                        ],\r\n                        itemText: \"text\",\r\n                        itemValue: \"value\",\r\n                        prependIcon: \"mdi-list-status\",\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: 'Assignment History',\r\n            if: (vm) => vm.$route.params.id,\r\n            fields: [\r\n                {\r\n                    input: 'assignment',\r\n                    name: 'history',\r\n                    default: () => []\r\n                } \r\n            ]\r\n        }\r\n    ]\r\n}","import tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nimport itemButtons from './defaults/item_buttons'\r\n\r\nexport default {\r\n    title: {\r\n        singular: 'Department',\r\n        plural: 'Departments',\r\n    },\r\n    icon: 'mdi-briefcase-account-outline',\r\n    items: {\r\n        buttons: tableButtons.get('new', 'delete'),\r\n        headers: [\r\n            {\r\n                text: 'Name',\r\n                align: 'start',\r\n                sortable: false,\r\n                value: 'name',\r\n            },\r\n            {\r\n                text: 'Deposit Type',\r\n                sortable: false,\r\n                value: 'type',\r\n            },\r\n            { text: '', value: 'actions', width: '150', buttons: rowButtons.get() }\r\n        ]\r\n    },\r\n    item: {\r\n        buttons: itemButtons.get('save', 'Cancel', 'spacer', 'delete'),\r\n        sidebar: {\r\n            panels: [\r\n                {\r\n                    title: 'Created By',\r\n                    icon: \"mdi-account\",\r\n                    fields: [\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'user',\r\n                            if: vm => (vm.user.rights.filter(e => e.collection == 'department')[0].write.allOwn == 'all'),\r\n                            default: vm => vm.user,\r\n                            bind: {\r\n                                label: \"User\",\r\n                                template: 'user',\r\n                                collection: 'user',\r\n                                itemText: \"displayName\",\r\n                                itemValue: \"_id\",\r\n                                hideAddNew: true,\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        content: {\r\n            panels: [\r\n               {\r\n                   title: 'Department',\r\n                    fields: [\r\n                        {\r\n                            input: 'text',\r\n                            name: 'name',\r\n                            col: {\r\n                                md: 8\r\n                            },\r\n                            bind: {\r\n                                label: \"Name\",\r\n                                rules: [\r\n                                    v => !!v || 'Name is required',\r\n                                ],\r\n                                required: true,\r\n                            }\r\n                        },\r\n                        {\r\n                            input: 'select',\r\n                            name: 'type',\r\n                            col: {\r\n                                md: 4\r\n                            },\r\n                            bind: {\r\n                                label: \"Deposit Type\",\r\n                                items: [\r\n                                    { text: 'FTD', value: 'ftd' },\r\n                                    { text: 'Retention', value: 'rtn' },\r\n                                    { text: 'Withdraw', value: 'wtd' },\r\n                                ],\r\n                                rules: [\r\n                                    v => !!v || 'Deposit Type',\r\n                                ],\r\n                                required: true,\r\n                            }\r\n                        }\r\n                    ]\r\n               }\r\n            ]\r\n        }\r\n    },\r\n    form: [\r\n        {\r\n            label: 'General',\r\n            fields: [\r\n                {\r\n                    input: 'text',\r\n                    name: 'name',\r\n                    bind: {\r\n                        label: \"Name\",\r\n                        rules: [\r\n                            v => !!v || 'Name is required',\r\n                        ],\r\n                        required: true,\r\n                    }\r\n                },\r\n                {\r\n                    input: 'select',\r\n                    name: 'type',\r\n                    bind: {\r\n                        label: \"Deposit Type\",\r\n                        items: [\r\n                            { text: 'FTD', value: 'ftd' },\r\n                            { text: 'Retention', value: 'rtn' },\r\n                            { text: 'Withdraw', value: 'wtd' },\r\n                        ],\r\n                        rules: [\r\n                            v => !!v || 'Deposit Type',\r\n                        ],\r\n                        required: true,\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}","import get from './getMethod'\r\n\r\nexport default {\r\n    get,\r\n    buttons: [\r\n        {\r\n            title: 'Save',\r\n            icon: 'mdi-content-save',\r\n            bind: vm =>  ({\r\n                color: 'info',\r\n                loading: vm.loading && vm.clickedButton == 'save',\r\n                disabled: vm.loading\r\n\r\n            }),\r\n            on: vm => ({\r\n                async click() {\r\n                   \r\n                    const { form } = vm.$refs    \r\n                    if (form.validate()) {\r\n                        const data = { collection: vm.collectionName, data: vm.data }\r\n                        if (!vm.isNew)\r\n                            data.id = vm.id\r\n\r\n                        vm.loading = true\r\n                        vm.clickedButton = 'save'\r\n                        \r\n                        const result = vm.isNew ? await vm.save(data) : await vm.update(data)\r\n\r\n                        vm.loading = false\r\n                        delete vm.clickedButton\r\n\r\n\r\n                        // update the cached state with the new field value\r\n                        const { backURL, field } = vm.$route.query\r\n                        if (backURL && field) {\r\n                            const cache = localStorage.getItem('backURL')\r\n                            if (cache) {\r\n                                const { cachState, backURL: bURL   } = JSON.parse(cache)\r\n                                if (backURL ==  bURL) {\r\n                                    //set the new field value\r\n                                    cachState.data[field] = result.data\r\n                                    // save the cache\r\n                                    localStorage.setItem('backURL', JSON.stringify({\r\n                                        backURL,\r\n                                        cachState\r\n                                    }))\r\n\r\n                                }\r\n                            }\r\n                        }\r\n                            \r\n                        if (result.status == 200)\r\n                            vm.$router.go(-1);\r\n\r\n                        vm.$store.commit('success', `${vm.title} has been ${!vm.isNew ? ' updated' : ' saved'} successfuly`)\r\n\r\n                    } else \r\n                        vm.$store.commit('error', 'One or more fields is not valid. please check the form and try again')\r\n                   \r\n                }\r\n            }) \r\n        },\r\n        {\r\n            title: 'Cancel',\r\n            icon: 'mdi-content-save-off',\r\n            bind: vm => ({\r\n                \r\n                disabled: vm.loading\r\n\r\n            }),\r\n            on: vm => ({\r\n                click () {\r\n                    vm.$router.go(-1)\r\n                }\r\n            })\r\n             \r\n        },\r\n        {\r\n            title: 'Delete',\r\n            icon: 'mdi-delete',\r\n            if: vm => !vm.isNew && vm.canDelete,\r\n            bind: (vm) => ({\r\n                color: 'red',\r\n                loading: vm.loading && vm.clickedButton == 'delete',\r\n                disabled: vm.loading\r\n            }),\r\n            on: (vm) => ({\r\n                async click() {\r\n               \r\n            \r\n                    const confirmed = await vm.$confirm(`Do you realy want to delete this item?`, { title: 'Delete Item', color: 'red' })\r\n                    if (confirmed) {\r\n                        vm.loading = true\r\n                        vm.clickedButton = 'delete'\r\n\r\n                        const rm = await vm.remove({ collection: vm.$route.params.collection, id: vm.id })\r\n                        if (rm.status === 200) {\r\n                            vm.$store.commit('success', `item has been deleted successfuly`)\r\n                            vm.$router.go(-1)\r\n                        }\r\n                        vm.loading = false\r\n                        delete vm.clickedButton\r\n                    }\r\n                    // console.log(confirmed);\r\n                }\r\n            })\r\n        },\r\n         \r\n    ]\r\n}","export default (function () {\r\n  \r\n    const args = [...arguments]\r\n\r\n    const buttons = args.map(e => {\r\n        return e.toLowerCase() == 'spacer' ? { spacer: true } : this.buttons.find(el => el.title.toLowerCase() == e.toLowerCase())\r\n    }).filter(e => e)\r\n\r\n    return buttons.length ? buttons : this.buttons\r\n})","'use strict';\n// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\nvar regexNonASCII = /[^\\0-\\u007E]/; // non-ASCII chars\nvar regexSeparators = /[.\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\nvar OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n */\nvar ucs2decode = function (string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n  while (counter < length) {\n    var value = string.charCodeAt(counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // It's a high surrogate, and there is a next character.\n      var extra = string.charCodeAt(counter++);\n      if ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // It's an unmatched surrogate; only append this code unit, in case the\n        // next code unit is the high surrogate of a surrogate pair.\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n */\nvar digitToBasic = function (digit) {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n */\nvar adapt = function (delta, numPoints, firstTime) {\n  var k = 0;\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\n  delta += floor(delta / numPoints);\n  for (; delta > baseMinusTMin * tMax >> 1; k += base) {\n    delta = floor(delta / baseMinusTMin);\n  }\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n */\n// eslint-disable-next-line  max-statements\nvar encode = function (input) {\n  var output = [];\n\n  // Convert the input in UCS-2 to an array of Unicode code points.\n  input = ucs2decode(input);\n\n  // Cache the length.\n  var inputLength = input.length;\n\n  // Initialize the state.\n  var n = initialN;\n  var delta = 0;\n  var bias = initialBias;\n  var i, currentValue;\n\n  // Handle the basic code points.\n  for (i = 0; i < input.length; i++) {\n    currentValue = input[i];\n    if (currentValue < 0x80) {\n      output.push(stringFromCharCode(currentValue));\n    }\n  }\n\n  var basicLength = output.length; // number of basic code points.\n  var handledCPCount = basicLength; // number of code points that have been handled;\n\n  // Finish the basic string with a delimiter unless it's empty.\n  if (basicLength) {\n    output.push(delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n    // All non-basic code points < n have been handled already. Find the next larger one:\n    var m = maxInt;\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.\n    var handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n      throw RangeError(OVERFLOW_ERROR);\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue < n && ++delta > maxInt) {\n        throw RangeError(OVERFLOW_ERROR);\n      }\n      if (currentValue == n) {\n        // Represent delta as a generalized variable-length integer.\n        var q = delta;\n        for (var k = base; /* no condition */; k += base) {\n          var t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n          if (q < t) break;\n          var qMinusT = q - t;\n          var baseMinusT = base - t;\n          output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT)));\n          q = floor(qMinusT / baseMinusT);\n        }\n\n        output.push(stringFromCharCode(digitToBasic(q)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n  }\n  return output.join('');\n};\n\nmodule.exports = function (input) {\n  var encoded = [];\n  var labels = input.toLowerCase().replace(regexSeparators, '\\u002E').split('.');\n  var i, label;\n  for (i = 0; i < labels.length; i++) {\n    label = labels[i];\n    encoded.push(regexNonASCII.test(label) ? 'xn--' + encode(label) : label);\n  }\n  return encoded.join('.');\n};\n","\r\n\r\nimport tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nimport itemButtons from './defaults/item_buttons'\r\n \r\n\r\nexport default {\r\n    // title: 'Transactions',\r\n    title: {\r\n        singular: 'Transaction',\r\n        plural: 'Transactions',\r\n    },\r\n    icon: 'mdi-bank-transfer',\r\n    withdraw: true,\r\n    currency: 'SAR',\r\n    total: true,\r\n   \r\n    items: {\r\n        total: {\r\n            headers: [\r\n                {\r\n                    text: 'Subtotal',\r\n                    align: 'start',\r\n                    value: 'subtotal.amount',\r\n                    format: 'money',\r\n                    formatArgs: ['SAR'],\r\n                    sortable: false,\r\n                },\r\n                {\r\n                    text: 'Withraw',\r\n                    align: 'start',\r\n                    format: 'money',\r\n                    formatArgs: ['SAR'],\r\n                    value: 'withdraw.amount',\r\n                    sortable: false,\r\n                },\r\n                {\r\n                    text: 'Stuck',\r\n                    align: 'start',\r\n                    format: 'money',\r\n                    formatArgs: ['SAR', false, 'orange--text'],\r\n                    value: 'stuck.amount',\r\n                    sortable: false,\r\n                },\r\n                {\r\n                    text: 'Total',\r\n                    align: 'start',\r\n                    format: 'money',\r\n                    formatArgs: ['SAR'],\r\n                    value: 'amount',\r\n                    sortable: false,\r\n                },\r\n                {\r\n                    text: 'Total USD',\r\n                    align: 'start',\r\n                    format: 'money',\r\n                    value: 'amount_usd',\r\n                    sortable: false,\r\n                }\r\n            ]\r\n        },\r\n        buttons: tableButtons.get('new', 'withdraw', 'Stuck',  'delete'),\r\n        filters: [\r\n\r\n\r\n\r\n            {\r\n                input: 'autocomplete',\r\n                name: 'user',\r\n                if: vm => vm.getPermissions('transaction').write.allOwn == 'all',\r\n                col: {\r\n                    sm: 4\r\n                },\r\n                bind: {\r\n                    label: \"Label\",\r\n                    prependIcon: \"mdi-account\",\r\n                    collection: 'user',\r\n                    template: 'user',\r\n                    itemText: \"displayName\",\r\n                    itemValue: \"_id\",\r\n                   \r\n                   \r\n                    query: {\r\n                        role: 'wakel'\r\n                    },\r\n\r\n                }\r\n            },\r\n\r\n            {\r\n                input: 'range',\r\n                name: 'created_on',\r\n                col: {\r\n                    sm: 5\r\n                },\r\n                default: (new Date()).toISOString().split('T')[0],\r\n                bind: {\r\n                    label: \"Date\",\r\n                    prependIcon: \"mdi-calendar\",\r\n\r\n                }\r\n            },\r\n            {\r\n                input: 'select',\r\n                name: 'type',\r\n                col: {\r\n                    sm: 3\r\n                },\r\n                bind: {\r\n                    label: \"Type\",\r\n                    items:[\r\n                        {\r\n                            text: 'Deposit',\r\n                            value: 'deposit'\r\n                        },\r\n                        {\r\n                            text: 'Withdraw',\r\n                            value: 'wtd'\r\n                        },\r\n                        {\r\n                            text: 'Stuck',\r\n                            value: 'stk'\r\n                        }\r\n                    ],\r\n                    prependIcon: \"mdi-format-list-bulleted-type\",\r\n                    clearable: true\r\n\r\n                }\r\n            }\r\n\r\n        ],\r\n        headers: [\r\n            { text: 'Account name', value: 'name', class: \"font-weight-bold\" },\r\n            { text: 'Type', sortable: false, value: 'type', format: 'depositType', width: '50'  },\r\n            { text: 'Amount', value: 'amount', format: 'money', formatArgs: ['SAR'] },\r\n            // { text: 'Email', value: 'email' },\r\n            { text: 'Date', value: 'created_on', format: 'date' },\r\n            { \r\n                text: 'Label', \r\n                sortable: false, \r\n                value: 'user.displayName',\r\n                width: '200',\r\n                component: () => import('./../components/items/fields/User.vue')\r\n            },\r\n            { text: 'profileImage', sortable: false, value: 'user.profileImage', hide: true },\r\n            { text: '', value: 'actions', sortable: false, width: '150', buttons: rowButtons.get() }\r\n        ]\r\n    },\r\n    item: {\r\n        buttons: itemButtons.get('save', 'Cancel', 'spacer', 'delete'),\r\n        sidebar:{\r\n            panels: [\r\n                {\r\n                    title: \"Created Date\",\r\n                    fields: [\r\n                        {\r\n                            input: 'date',\r\n                            name: 'created_on',\r\n                            default: (new Date()).toISOString().split('T')[0],\r\n                            bind: {\r\n                                label: \"Date\",\r\n                                prependInnerIcon: 'mdi-calendar',\r\n                                required: true,\r\n                                rules: [\r\n                                    v => !!v || 'Created On is required',\r\n                                ],\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    title: 'Label',\r\n                    icon: 'mdi-account',\r\n                    fields: [\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'user',\r\n                            if: vm => (vm.user.rights.filter(e => e.collection == 'transaction')[0].write.allOwn == 'all'),\r\n                            // default: vm => vm.$store.state.auth.user._id,\r\n                            bind: {\r\n                                label: \"Label\",\r\n                                // prependIcon: \"mdi-account\",\r\n                                collection: 'user',\r\n                                template: 'user',\r\n                                itemText: \"displayName\",\r\n                                itemValue: \"_id\",\r\n                                required: true,\r\n                                or: false,\r\n                                query: {\r\n                                    role: 'wakel'\r\n                                },\r\n                                rules: [\r\n                                    v => !!v || 'Label is required',\r\n                                ],\r\n                            }\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        content: {\r\n            panels: [\r\n                {\r\n                    title: 'Account name',\r\n                    icon: 'mdi-account-box',\r\n                    fields:[\r\n                        {\r\n                            input: 'text',\r\n                            name: 'name',\r\n                            bind: {\r\n                                label: \"Account name\",\r\n                                // prependIcon: \"mdi-account-box\",\r\n\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    title: 'Payment',\r\n                    fields: [\r\n                        {\r\n                            input: 'text',\r\n                            name: 'amount',\r\n\r\n                            bind: {\r\n                                label: \"Amount\",\r\n                                prependInnerIcon: 'mdi-currency-rial',\r\n                                required: true,\r\n                                type: 'number',\r\n                                rules: [\r\n                                    v => !!v || 'Amount is required',\r\n                                ],\r\n                            }\r\n                        },\r\n\r\n\r\n                        {\r\n                            input: 'hidden',\r\n                            name: 'type',\r\n                            default() {\r\n                                const urlParams = new URLSearchParams(location.search);\r\n                                return urlParams.get('type') || 'deposit'\r\n                            }\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    form: [\r\n        {\r\n            label: 'General',\r\n            fields: [\r\n                {\r\n                    input: 'text',\r\n                    name: 'name',\r\n                    bind: {\r\n                        label: \"Account name\",\r\n                        prependIcon: \"mdi-account-box\",\r\n                     \r\n                    }\r\n                },\r\n                {\r\n                    input: 'text',\r\n                    name: 'amount',\r\n                   \r\n                    bind: {\r\n                        label: \"Amount\",\r\n                        prependIcon: 'mdi-currency-rial',\r\n                        required: true,\r\n                        type: 'number',\r\n                        rules: [\r\n                            v => !!v || 'Amount is required',\r\n                        ],\r\n                    }\r\n                },\r\n               \r\n             \r\n                {\r\n                    input: 'hidden',\r\n                    name: 'type',\r\n                    default () {\r\n                        const urlParams = new URLSearchParams(location.search);\r\n                        return urlParams.get('type') || 'deposit'\r\n                    }\r\n                },\r\n                {\r\n                    input: 'date',\r\n                    name: 'created_on',\r\n                    default: (new Date()).toISOString().split('T')[0],\r\n                    bind: {\r\n                        label: \"Created Date\",\r\n                        prependIcon: 'mdi-calendar',\r\n                        required: true,\r\n                        \r\n                        \r\n                        rules: [\r\n                            v => !!v || 'Created On is required',\r\n                        ],\r\n                    }\r\n                },\r\n\r\n                 \r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'user',\r\n                    if: state => (state.auth.user.rights.filter(e => e.collection == 'transaction')[0].write.allOwn == 'all'),\r\n                    bind: {\r\n                        label: \"Label\",\r\n                        prependIcon: \"mdi-account\",\r\n                        collection: 'user',\r\n                        itemText: \"displayName\",\r\n                        itemValue: \"_id\",\r\n                        required: true,\r\n                        or: false,\r\n                        query: {\r\n                            role: 'wakel'\r\n                        },\r\n                        rules: [\r\n                            v => !!v || 'Label is required',\r\n                        ],\r\n                    }\r\n                },\r\n                \r\n               \r\n            ]\r\n        }\r\n    ]\r\n}","import tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nimport itemButtons from './defaults/item_buttons'\r\nimport countries from '../country'\r\n\r\nexport default {\r\n    // title: 'Banks',\r\n    title: {\r\n        singular: 'Bank',\r\n        plural: 'Banks',\r\n    },\r\n    icon: 'mdi-bank',\r\n    items: {\r\n        buttons: tableButtons.get('new', 'delete'),\r\n        headers: [\r\n            {\r\n                text: 'Bank Number',\r\n                align: 'start',\r\n                value: 'number',\r\n                sortable: false\r\n            },\r\n            { text: 'Country', value: 'country', sortable: false, format: 'country', width: '150'  },\r\n            { text: 'Currency', value: 'currency', sortable: false, component: () => import('./../components/items/fields/Currency.vue')  },\r\n            // { text: 'USD Rate', value: 'usd_rate', sortable: false },\r\n            // { text: 'SAR Rate', value: 'sar_rate', sortable: false },\r\n            { text: '', value: 'actions', sortable: false, width: '150', buttons: rowButtons.get() }\r\n        ]\r\n    },\r\n    item: {\r\n        buttons: itemButtons.get('save', 'Cancel', 'spacer', 'delete'),\r\n        sidebar: {\r\n            panels:[\r\n                {\r\n                    title: 'Currency',\r\n                    fields:[\r\n                        {\r\n                            input: 'select',\r\n                            name: 'currency',\r\n                            bind: {\r\n                                label: \"Bank Currency\",\r\n                                prependInnerIcon: \"mdi-currency-usd-circle-outline\",\r\n                                items: ['USD', 'EUR', 'SAR', 'TRY'],\r\n                                required: true,\r\n                                rules: [\r\n                                    v => !!v || 'Currency is required',\r\n                                ],\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    title: 'Created By',\r\n                    icon: \"mdi-account\",\r\n                    fields:[\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'user',\r\n                            if: vm => (vm.user.rights.filter(e => e.collection == 'bank')[0].write.allOwn == 'all'),\r\n                            default: vm => vm.user,\r\n                            bind: {\r\n                                label: \"User\",\r\n                                template: 'user',\r\n                                collection: 'user',\r\n                                itemText: \"displayName\",\r\n                                itemValue: \"_id\",\r\n                                hideAddNew: true,\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        content: {\r\n            panels: [\r\n                {\r\n                    title: 'Bank',\r\n                    fields:[\r\n                        {\r\n                            input: 'text',\r\n                            name: 'number',\r\n                            bind: {\r\n                                label: \"Bank Number\",\r\n                                prependInnerIcon: 'mdi-card-account-details',\r\n                                required: true,\r\n                                rules: [\r\n                                    v => !!v || 'ID is required',\r\n                                ],\r\n                            }\r\n                        },\r\n\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'country',\r\n                            bind: {\r\n                                label: \"Bank Country\",\r\n                                prependInnerIcon: \"mdi-flag\",\r\n                                items: countries,\r\n                                itemText: \"name\",\r\n                                itemValue: \"code\",\r\n                                required: true,\r\n                                hideAddNew: true,\r\n                                rules: [\r\n                                    v => !!v || 'Country is required',\r\n                                ],\r\n                            }\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}","import tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nimport itemButtons from './defaults/item_buttons'\r\n\r\nexport default  {\r\n        // title: 'Users',\r\n        title: {\r\n            singular: 'User',\r\n            plural: 'Users',\r\n        },\r\n        icon: 'mdi-account-multiple',\r\n        \r\n        items: {\r\n            // buttons: [],\r\n            buttons: tableButtons.get('new', 'delete'),\r\n            filters: [\r\n                {\r\n                    input: 'text',\r\n                    name: 'displayName',\r\n                    search: 'username', \r\n                    col: {\r\n                        sm: 6\r\n                    },\r\n                    bind: {\r\n                        label: \"Display Name / Username\",\r\n                        prependIcon: 'mdi-account',\r\n\r\n                    }\r\n                },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'role',\r\n                    col: {\r\n                        sm: 3\r\n                    },\r\n                    bind: {\r\n                        label: \"Role\",\r\n                        collection: 'role',\r\n                        itemText: \"name\",\r\n                        itemValue: \"role\",\r\n                        prependIcon: \"mdi-key\",\r\n\r\n                    }\r\n                },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'department',\r\n                    col: {\r\n                        sm: 3\r\n                    },\r\n                    bind: {\r\n                        label: \"Department\",\r\n                        prependIcon: \"mdi-briefcase-account-outline\",\r\n                        collection: 'department',\r\n                        itemText: \"name\",\r\n                        itemValue: \"_id\",\r\n                    }\r\n                },\r\n            ],\r\n            headers: [\r\n                {\r\n                    text: 'Pic',\r\n                    align: 'start',\r\n                    value: 'profileImage',\r\n                    component: () => import('./../components/items/fields/Pic')\r\n                },\r\n                {\r\n                  text: 'Display Name',\r\n                  align: 'start',\r\n                  \r\n                  value: 'displayName',\r\n                },\r\n                { text: 'Username', value: 'username' },\r\n                { text: 'Role', value: 'role' },\r\n                { text: 'Target', value: 'target' },\r\n                { text: 'Business Unit', sortable: false, value: 'business.name' },\r\n                { text: 'Department', sortable: false, value: 'department.name' },\r\n                { text: 'Town', value: 'town' },\r\n                { text: '', value: 'actions', sortable: false, width: '150', buttons: rowButtons.get() } \r\n            ]\r\n        },\r\n    item: {\r\n        buttons: itemButtons.get('save', 'Cancel', 'spacer', 'delete'),\r\n            sidebar: {\r\n                panels: [\r\n                    {\r\n                        title: 'Role',\r\n                        icon: 'mdi-key',\r\n                        fields: [\r\n                            {\r\n                                input: 'autocomplete',\r\n                                name: 'role',\r\n                                bind: {\r\n                                    label: \"Role\",\r\n                                    collection: 'role',\r\n                                    itemText: \"name\",\r\n                                    itemValue: \"role\",\r\n                                    // prependIcon: \"mdi-key\",\r\n                                    required: true,\r\n                                    rules: [\r\n                                        v => !!v || 'Role is required',\r\n                                    ],\r\n                                }\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: 'Target',\r\n                        icon: 'mdi-bullseye-arrow',\r\n                        fields: [\r\n                            {\r\n                                input: 'text',\r\n                                name: 'target',\r\n                                default: 0,\r\n                                bind: {\r\n                                    label: \"Target\",\r\n                                    // prependIcon: \"mdi-bullseye-arrow\",\r\n                                    type: 'number'\r\n                                }\r\n                            }, \r\n                        ]\r\n                    },\r\n                   \r\n                    {\r\n                        title: 'Business',\r\n                        fields: [\r\n                            {\r\n                                input: 'autocomplete',\r\n                                name: 'business',\r\n                                default: (vm) => vm.user.business,\r\n                                if: (vm) => !vm.user.business,\r\n                                bind: {\r\n                                    label: \"Business Unit\",\r\n                                    prependInnerIcon: \"mdi-domain\",\r\n                                    collection: 'business',\r\n                                    itemText: \"name\",\r\n                                    itemValue: \"_id\",\r\n                                }\r\n                            },\r\n                            {\r\n                                input: 'autocomplete',\r\n                                name: 'department',\r\n                                default: (vm) => vm.user.department,\r\n                                if: (vm) => !vm.user.department,\r\n                                bind: vm => ({\r\n                                    label: \"Department\",\r\n                                    prependInnerIcon: \"mdi-briefcase-account-outline\",\r\n                                    collection: 'department',\r\n                                    itemText: \"name\",\r\n                                    itemValue: \"_id\",\r\n                                    returnObject: true,\r\n                                    hint: 'Deposit Type ' + vm.data.depositType\r\n                                }),\r\n                                on: vm => ({\r\n                                    input (data) {\r\n                                        vm.data.depositType = data.type\r\n                                    }\r\n                                })\r\n                            },\r\n                            {\r\n                                name: 'depositType',\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: 'Affiliate',\r\n                        fields: [\r\n                            {\r\n                                input: 'autocomplete',\r\n                                if: (vm) => ['admin', 'owner'].indexOf(vm.user.role) != -1,\r\n                                name: 'affiliate',\r\n                                bind: {\r\n                                    label: \"Affiliate\",\r\n                                    prependInnerIcon: \"mdi-account-network-outline\",\r\n                                    collection: 'affiliate',\r\n                                    itemText: \"name\",\r\n                                    itemValue: \"_id\",\r\n                                }\r\n                            },\r\n                        ]\r\n                    }\r\n                    \r\n                ]\r\n            },\r\n            content: {\r\n                panels: [\r\n                    {\r\n                        title: 'Display',\r\n                        fields: [\r\n                            {\r\n                                input: 'profile-image',\r\n                                name: 'profileImage',\r\n                                bind: {\r\n                                    placeholder: \"Profile Picture\",\r\n                                    prependIcon: 'mdi-image',\r\n\r\n                                }\r\n                            },\r\n                            {\r\n                                input: 'text',\r\n                                name: 'displayName',\r\n                                bind: {\r\n                                    label: \"Display Name\",\r\n                                    prependInnerIcon: 'mdi-account',\r\n                                    required: true,\r\n                                    rules: [\r\n                                        v => !!v || 'Display Name is required',\r\n                                    ],\r\n                                }\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: 'Address',\r\n                        fields: [\r\n                            {\r\n                                input: 'select',\r\n                                name: 'town',\r\n                                bind: {\r\n                                    label: \"Town\",\r\n                                    items: ['Haifa', 'Nabless'],\r\n                                    prependInnerIcon: \"mdi-map-marker\",\r\n                                    required: true,\r\n                                    rules: [\r\n                                        v => !!v || 'Town is required',\r\n                                    ],\r\n                                }\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: 'Username & Password',\r\n                        fields: [\r\n                            {\r\n                                input: 'text',\r\n                                name: 'username',\r\n                                bind: {\r\n                                    label: \"Username\",\r\n                                    autocomplete: 'username',\r\n                                    prependIcon: 'mdi-account-box',\r\n                                    required: true,\r\n                                    rules: [\r\n                                        v => !!v || 'Username is required',\r\n                                    ],\r\n                                }\r\n                            },\r\n                            {\r\n                                input: 'password',\r\n                                name: 'password',\r\n                                bind: {\r\n                                    label: \"Password\",\r\n                                    prependIcon: 'mdi-lock',\r\n\r\n\r\n                                }\r\n                            },\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        form: [\r\n            {\r\n                label: 'General',\r\n                fields: [\r\n                    {\r\n                        input: 'profile-image',\r\n                        name: 'profileImage',\r\n                        bind: {\r\n                            placeholder: \"Profile Picture\",\r\n                            prependIcon: 'mdi-image',\r\n\r\n                        }\r\n                    },\r\n                    {\r\n                        input: 'text',\r\n                        name: 'displayName',\r\n                        bind: {\r\n                            label: \"Display Name\",\r\n                            prependIcon: 'mdi-account',\r\n                            required: true,\r\n                            rules: [\r\n                                v => !!v || 'Display Name is required',\r\n                            ],\r\n                        } \r\n                    },\r\n              \r\n                    {\r\n                        input: 'text',\r\n                        name: 'username',\r\n                        bind: {\r\n                            label: \"Username\",\r\n                            autocomplete: 'username',\r\n                            prependIcon: 'mdi-account-box',\r\n                            required: true,\r\n                            rules: [\r\n                                v => !!v || 'Username is required',\r\n                            ],\r\n                        } \r\n                    },\r\n                    {\r\n                        input: 'password',\r\n                        name: 'password',\r\n                        bind: {\r\n                            label: \"Password\",\r\n                            prependIcon: 'mdi-lock',\r\n                             \r\n                            \r\n                        } \r\n                    },\r\n                    {\r\n                        input: 'select',\r\n                        name: 'town',\r\n                        bind: {\r\n                            label: \"Town\", \r\n                            items: ['Haifa', 'Nabless'],\r\n                            prependIcon: \"mdi-map-marker\",\r\n                            required: true,\r\n                            rules: [\r\n                                v => !!v || 'Town is required',\r\n                            ],\r\n                        } \r\n                    }, \r\n                    {\r\n                        input: 'autocomplete',\r\n                        name: 'role',\r\n                        bind: {\r\n                            label: \"Role\",\r\n                            collection: 'role',\r\n                            itemText: \"name\",\r\n                            itemValue: \"role\",\r\n                            prependIcon: \"mdi-key\",\r\n                            required: true,\r\n                            rules: [\r\n                                v => !!v || 'Role is required',\r\n                            ],\r\n                        }\r\n                    },\r\n                    {\r\n                        input: 'text',\r\n                        name: 'target',\r\n                        bind: {\r\n                            label: \"Target\",\r\n                            prependIcon: \"mdi-bullseye-arrow\",\r\n                            type: 'number'\r\n                        }\r\n                    }, \r\n                    {\r\n                        input: 'autocomplete',\r\n                        name: 'business',\r\n                        default: (state) => state.auth.user.business,\r\n                        if: (state) => !state.auth.user.business,\r\n                        bind: {\r\n                            label: \"Business Unit\",\r\n                            prependIcon: \"mdi-domain\",\r\n                            collection: 'business',\r\n                            itemText: \"name\",\r\n                            itemValue: \"_id\",\r\n                        }\r\n                    },\r\n                    {\r\n                        input: 'autocomplete',\r\n                        name: 'department',\r\n                        default: (state) => state.auth.user.department,\r\n                        if: (state) => !state.auth.user.department,\r\n                        bind: {\r\n                            label: \"Department\",\r\n                            prependIcon: \"mdi-briefcase-account-outline\",\r\n                            collection: 'department',\r\n                            itemText: \"name\",\r\n                            itemValue: \"_id\",\r\n                        }\r\n                    },\r\n                    {\r\n                        input: 'autocomplete',\r\n                        if: (state) => ['admin', 'owner'].indexOf(state.auth.user.role) != -1,\r\n                        name: 'affiliate',\r\n                        bind: {\r\n                            label: \"Affiliate\",\r\n                            prependIcon: \"mdi-account-network-outline\",\r\n                            collection: 'affiliate',\r\n                            itemText: \"name\",\r\n                            itemValue: \"_id\",\r\n                        }\r\n                    },\r\n                    {\r\n                        input: 'switch',\r\n                        name: 'active',\r\n                        default: true,\r\n                        bind: {\r\n                            label: \"Active\" \r\n                        } \r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }","import get from './getMethod'\r\nexport default {\r\n    get,\r\n    buttons: [\r\n        {\r\n            title: 'Edit',\r\n            icon: 'mdi-pencil',\r\n            if: (vm) => vm.canUpdate,\r\n            bind: {\r\n                color: 'info'\r\n            },\r\n            on: (vm, item) => ({\r\n                click () {\r\n                    vm.$router.push(vm.$route.path + '/' + item._id)\r\n                }\r\n            })\r\n        },\r\n        {\r\n            title: 'Delete',\r\n            icon: 'mdi-delete',\r\n            if: (vm) => vm.canDelete,\r\n            bind: {\r\n                color: 'red'\r\n            },\r\n            on: (vm, item) => ({\r\n                async click() {\r\n                    const confirmed = await vm.$confirm('Are you sure do you want to delete this item ?', { title: 'Delete Item', color: 'red' })\r\n                    if (confirmed) {\r\n                        vm.loading = true\r\n                        const rm = await vm.remove({ collection: vm.$route.params.collection, id: item._id })\r\n                        if (rm.status === 200) {\r\n\r\n                            vm.fetch()\r\n                            vm.loading = false\r\n                            vm.$store.commit('success', 'Item has been deleted successfuly')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        {\r\n            title: 'Duplicate',\r\n            icon: 'mdi-content-copy',\r\n            if: (vm) => vm.canWrite,\r\n            on: (vm, item) => ({\r\n                click() {\r\n                    vm.$router.push(vm.$route.path + '/new?clone=' + item._id)\r\n                }\r\n            })\r\n        }\r\n    ]\r\n}","'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.array.iterator');\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar redefine = require('../internals/redefine');\nvar redefineAll = require('../internals/redefine-all');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar InternalStateModule = require('../internals/internal-state');\nvar anInstance = require('../internals/an-instance');\nvar hasOwn = require('../internals/has');\nvar bind = require('../internals/function-bind-context');\nvar classof = require('../internals/classof');\nvar anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $fetch = getBuiltIn('fetch');\nvar Headers = getBuiltIn('Headers');\nvar ITERATOR = wellKnownSymbol('iterator');\nvar URL_SEARCH_PARAMS = 'URLSearchParams';\nvar URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalParamsState = InternalStateModule.getterFor(URL_SEARCH_PARAMS);\nvar getInternalIteratorState = InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);\n\nvar plus = /\\+/g;\nvar sequences = Array(4);\n\nvar percentSequence = function (bytes) {\n  return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp('((?:%[\\\\da-f]{2}){' + bytes + '})', 'gi'));\n};\n\nvar percentDecode = function (sequence) {\n  try {\n    return decodeURIComponent(sequence);\n  } catch (error) {\n    return sequence;\n  }\n};\n\nvar deserialize = function (it) {\n  var result = it.replace(plus, ' ');\n  var bytes = 4;\n  try {\n    return decodeURIComponent(result);\n  } catch (error) {\n    while (bytes) {\n      result = result.replace(percentSequence(bytes--), percentDecode);\n    }\n    return result;\n  }\n};\n\nvar find = /[!'()~]|%20/g;\n\nvar replace = {\n  '!': '%21',\n  \"'\": '%27',\n  '(': '%28',\n  ')': '%29',\n  '~': '%7E',\n  '%20': '+'\n};\n\nvar replacer = function (match) {\n  return replace[match];\n};\n\nvar serialize = function (it) {\n  return encodeURIComponent(it).replace(find, replacer);\n};\n\nvar parseSearchParams = function (result, query) {\n  if (query) {\n    var attributes = query.split('&');\n    var index = 0;\n    var attribute, entry;\n    while (index < attributes.length) {\n      attribute = attributes[index++];\n      if (attribute.length) {\n        entry = attribute.split('=');\n        result.push({\n          key: deserialize(entry.shift()),\n          value: deserialize(entry.join('='))\n        });\n      }\n    }\n  }\n};\n\nvar updateSearchParams = function (query) {\n  this.entries.length = 0;\n  parseSearchParams(this.entries, query);\n};\n\nvar validateArgumentsLength = function (passed, required) {\n  if (passed < required) throw TypeError('Not enough arguments');\n};\n\nvar URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {\n  setInternalState(this, {\n    type: URL_SEARCH_PARAMS_ITERATOR,\n    iterator: getIterator(getInternalParamsState(params).entries),\n    kind: kind\n  });\n}, 'Iterator', function next() {\n  var state = getInternalIteratorState(this);\n  var kind = state.kind;\n  var step = state.iterator.next();\n  var entry = step.value;\n  if (!step.done) {\n    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];\n  } return step;\n});\n\n// `URLSearchParams` constructor\n// https://url.spec.whatwg.org/#interface-urlsearchparams\nvar URLSearchParamsConstructor = function URLSearchParams(/* init */) {\n  anInstance(this, URLSearchParamsConstructor, URL_SEARCH_PARAMS);\n  var init = arguments.length > 0 ? arguments[0] : undefined;\n  var that = this;\n  var entries = [];\n  var iteratorMethod, iterator, next, step, entryIterator, entryNext, first, second, key;\n\n  setInternalState(that, {\n    type: URL_SEARCH_PARAMS,\n    entries: entries,\n    updateURL: function () { /* empty */ },\n    updateSearchParams: updateSearchParams\n  });\n\n  if (init !== undefined) {\n    if (isObject(init)) {\n      iteratorMethod = getIteratorMethod(init);\n      if (typeof iteratorMethod === 'function') {\n        iterator = iteratorMethod.call(init);\n        next = iterator.next;\n        while (!(step = next.call(iterator)).done) {\n          entryIterator = getIterator(anObject(step.value));\n          entryNext = entryIterator.next;\n          if (\n            (first = entryNext.call(entryIterator)).done ||\n            (second = entryNext.call(entryIterator)).done ||\n            !entryNext.call(entryIterator).done\n          ) throw TypeError('Expected sequence with length 2');\n          entries.push({ key: first.value + '', value: second.value + '' });\n        }\n      } else for (key in init) if (hasOwn(init, key)) entries.push({ key: key, value: init[key] + '' });\n    } else {\n      parseSearchParams(entries, typeof init === 'string' ? init.charAt(0) === '?' ? init.slice(1) : init : init + '');\n    }\n  }\n};\n\nvar URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;\n\nredefineAll(URLSearchParamsPrototype, {\n  // `URLSearchParams.prototype.appent` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-append\n  append: function append(name, value) {\n    validateArgumentsLength(arguments.length, 2);\n    var state = getInternalParamsState(this);\n    state.entries.push({ key: name + '', value: value + '' });\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.delete` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete\n  'delete': function (name) {\n    validateArgumentsLength(arguments.length, 1);\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    var key = name + '';\n    var index = 0;\n    while (index < entries.length) {\n      if (entries[index].key === key) entries.splice(index, 1);\n      else index++;\n    }\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.get` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-get\n  get: function get(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var index = 0;\n    for (; index < entries.length; index++) {\n      if (entries[index].key === key) return entries[index].value;\n    }\n    return null;\n  },\n  // `URLSearchParams.prototype.getAll` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall\n  getAll: function getAll(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var result = [];\n    var index = 0;\n    for (; index < entries.length; index++) {\n      if (entries[index].key === key) result.push(entries[index].value);\n    }\n    return result;\n  },\n  // `URLSearchParams.prototype.has` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-has\n  has: function has(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var index = 0;\n    while (index < entries.length) {\n      if (entries[index++].key === key) return true;\n    }\n    return false;\n  },\n  // `URLSearchParams.prototype.set` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-set\n  set: function set(name, value) {\n    validateArgumentsLength(arguments.length, 1);\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    var found = false;\n    var key = name + '';\n    var val = value + '';\n    var index = 0;\n    var entry;\n    for (; index < entries.length; index++) {\n      entry = entries[index];\n      if (entry.key === key) {\n        if (found) entries.splice(index--, 1);\n        else {\n          found = true;\n          entry.value = val;\n        }\n      }\n    }\n    if (!found) entries.push({ key: key, value: val });\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.sort` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort\n  sort: function sort() {\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    // Array#sort is not stable in some engines\n    var slice = entries.slice();\n    var entry, entriesIndex, sliceIndex;\n    entries.length = 0;\n    for (sliceIndex = 0; sliceIndex < slice.length; sliceIndex++) {\n      entry = slice[sliceIndex];\n      for (entriesIndex = 0; entriesIndex < sliceIndex; entriesIndex++) {\n        if (entries[entriesIndex].key > entry.key) {\n          entries.splice(entriesIndex, 0, entry);\n          break;\n        }\n      }\n      if (entriesIndex === sliceIndex) entries.push(entry);\n    }\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.forEach` method\n  forEach: function forEach(callback /* , thisArg */) {\n    var entries = getInternalParamsState(this).entries;\n    var boundFunction = bind(callback, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var index = 0;\n    var entry;\n    while (index < entries.length) {\n      entry = entries[index++];\n      boundFunction(entry.value, entry.key, this);\n    }\n  },\n  // `URLSearchParams.prototype.keys` method\n  keys: function keys() {\n    return new URLSearchParamsIterator(this, 'keys');\n  },\n  // `URLSearchParams.prototype.values` method\n  values: function values() {\n    return new URLSearchParamsIterator(this, 'values');\n  },\n  // `URLSearchParams.prototype.entries` method\n  entries: function entries() {\n    return new URLSearchParamsIterator(this, 'entries');\n  }\n}, { enumerable: true });\n\n// `URLSearchParams.prototype[@@iterator]` method\nredefine(URLSearchParamsPrototype, ITERATOR, URLSearchParamsPrototype.entries);\n\n// `URLSearchParams.prototype.toString` method\n// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\nredefine(URLSearchParamsPrototype, 'toString', function toString() {\n  var entries = getInternalParamsState(this).entries;\n  var result = [];\n  var index = 0;\n  var entry;\n  while (index < entries.length) {\n    entry = entries[index++];\n    result.push(serialize(entry.key) + '=' + serialize(entry.value));\n  } return result.join('&');\n}, { enumerable: true });\n\nsetToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);\n\n$({ global: true, forced: !USE_NATIVE_URL }, {\n  URLSearchParams: URLSearchParamsConstructor\n});\n\n// Wrap `fetch` for correct work with polyfilled `URLSearchParams`\n// https://github.com/zloirock/core-js/issues/674\nif (!USE_NATIVE_URL && typeof $fetch == 'function' && typeof Headers == 'function') {\n  $({ global: true, enumerable: true, forced: true }, {\n    fetch: function fetch(input /* , init */) {\n      var args = [input];\n      var init, body, headers;\n      if (arguments.length > 1) {\n        init = arguments[1];\n        if (isObject(init)) {\n          body = init.body;\n          if (classof(body) === URL_SEARCH_PARAMS) {\n            headers = init.headers ? new Headers(init.headers) : new Headers();\n            if (!headers.has('content-type')) {\n              headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n            }\n            init = create(init, {\n              body: createPropertyDescriptor(0, String(body)),\n              headers: createPropertyDescriptor(0, headers)\n            });\n          }\n        }\n        args.push(init);\n      } return $fetch.apply(this, args);\n    }\n  });\n}\n\nmodule.exports = {\n  URLSearchParams: URLSearchParamsConstructor,\n  getState: getInternalParamsState\n};\n","var anObject = require('../internals/an-object');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nmodule.exports = function (it) {\n  var iteratorMethod = getIteratorMethod(it);\n  if (typeof iteratorMethod != 'function') {\n    throw TypeError(String(it) + ' is not iterable');\n  } return anObject(iteratorMethod.call(it));\n};\n","var map = {\n\t\"./\": \"fb57\",\n\t\"./affiliate\": \"e5f9\",\n\t\"./affiliate.js\": \"e5f9\",\n\t\"./bank\": \"80b5\",\n\t\"./bank.js\": \"80b5\",\n\t\"./banktransaction\": \"ce83\",\n\t\"./banktransaction.js\": \"ce83\",\n\t\"./business\": \"267a\",\n\t\"./business.js\": \"267a\",\n\t\"./customer\": \"3310\",\n\t\"./customer.js\": \"3310\",\n\t\"./defaults/getMethod\": \"5dca\",\n\t\"./defaults/getMethod.js\": \"5dca\",\n\t\"./defaults/item_buttons\": \"48a4\",\n\t\"./defaults/item_buttons.js\": \"48a4\",\n\t\"./defaults/items_buttons\": \"314f\",\n\t\"./defaults/items_buttons.js\": \"314f\",\n\t\"./defaults/row_buttons\": \"93d5\",\n\t\"./defaults/row_buttons.js\": \"93d5\",\n\t\"./department\": \"4739\",\n\t\"./department.js\": \"4739\",\n\t\"./deposit\": \"2d47\",\n\t\"./deposit.js\": \"2d47\",\n\t\"./index\": \"fb57\",\n\t\"./index.js\": \"fb57\",\n\t\"./menu\": \"a2c8\",\n\t\"./menu.js\": \"a2c8\",\n\t\"./payment_method\": \"f3ec\",\n\t\"./payment_method.js\": \"f3ec\",\n\t\"./role\": \"177a\",\n\t\"./role.js\": \"177a\",\n\t\"./subaffiliate\": \"cbd5\",\n\t\"./subaffiliate.js\": \"cbd5\",\n\t\"./transaction\": \"675e\",\n\t\"./transaction.js\": \"675e\",\n\t\"./user\": \"8d32\",\n\t\"./user.js\": \"8d32\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"9fab\";","import tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nimport itemButtons from './defaults/item_buttons'\r\n\r\nexport default {\r\n    // title: 'Menu',\r\n    title: {\r\n        singular: 'Menu',\r\n        plural: 'Menu',\r\n    },\r\n    icon: 'mdi-microsoft-xbox-controller-menu',\r\n    items: {\r\n        buttons: tableButtons.get('new', 'delete'),\r\n        headers: [\r\n            {\r\n                text: 'Name',\r\n                align: 'start',\r\n                sortable: false,\r\n                value: 'name',\r\n            },\r\n            { text: '', value: 'actions', width: '150', buttons: rowButtons.get() }\r\n        ],\r\n    },\r\n    item: {\r\n        buttons: itemButtons.get('save', 'Cancel', 'spacer', 'delete'),\r\n        sidebar: {\r\n            panels: [\r\n                {\r\n                    title: 'Created By',\r\n                    icon: \"mdi-account\",\r\n                    fields: [\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'user',\r\n                            if: vm => (vm.user.rights.filter(e => e.collection == 'menu')[0].write.allOwn == 'all'),\r\n                            default: vm => vm.user,\r\n                            bind: {\r\n                                label: \"User\",\r\n                                template: 'user',\r\n                                collection: 'user',\r\n                                itemText: \"displayName\",\r\n                                itemValue: \"_id\",\r\n                                hideAddNew: true,\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        content: {\r\n            panels: [\r\n                {\r\n                    title: 'Name',\r\n                    fields: [\r\n                        {\r\n                            input: 'text',\r\n                            name: 'name',\r\n                            bind: {\r\n                                label: \"Name\",\r\n                                rules: [\r\n                                    v => !!v || 'Name is required',\r\n                                ],\r\n                                required: true,\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    title: 'Menu Items',\r\n                    fields: [\r\n                        {\r\n                            input: 'menu-items',\r\n                            name: 'menu_item',\r\n                            default: [{ \"name\": \"Dashboard\", \"icon\": \"mdi-view-dashboard\", \"path\": \"/\" },\r\n                            { \"name\": \"Deposit\", \"icon\": \"mdi-bank-transfer-in\", \"path\": \"/deposit\" },\r\n                            { \"name\": \"Customer\", \"icon\": \"mdi-account-box\", \"path\": \"/customer\" },\r\n                            { \"name\": \"Payment Method\", \"icon\": \"mdi mdi-credit-card-settings-outline\", \"path\": \"/payment_method\" },\r\n                            { \"name\": \"Affiliate\", \"icon\": \"mdi-account-network-outline\", \"path\": \"/affiliate\" },\r\n                            { \"name\": \"Users\", \"icon\": \"mdi-account-multiple\", \"path\": \"/user\" },\r\n                            { \"name\": \"Roles\", \"icon\": \"mdi-key\", \"path\": \"/role\" },\r\n                            { \"name\": \"Menus\", \"icon\": \"mdi-menu\", \"path\": \"/menu\" },\r\n                            { \"name\": \"Business\", \"icon\": \"mdi-domain\", \"path\": \"/business\" },\r\n                            { \"name\": \"Department\", \"icon\": \"mdi-briefcase-account-outline\", \"path\": \"/department\" }],\r\n                            bind: {\r\n                                label: 'Menu Items'\r\n                            }\r\n                        } \r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    form: [\r\n        {\r\n            label: 'General',\r\n            fields: [\r\n                {\r\n                    input: 'text',\r\n                    name: 'name',\r\n                    bind: {\r\n                        label: \"Name\",\r\n                        rules: [\r\n                            v => !!v || 'Name is required',\r\n                        ],\r\n                        required: true,\r\n                    }\r\n                },\r\n                {\r\n                    input: 'menu_item',\r\n                    name: 'menu_item',\r\n                    default: [{ \"name\": \"Dashboard\", \"icon\": \"mdi-view-dashboard\", \"path\": \"/\" }, \r\n                    { \"name\": \"Deposit\", \"icon\": \"mdi-bank-transfer-in\", \"path\": \"/deposit\" }, \r\n                    { \"name\": \"Customer\", \"icon\": \"mdi-account-box\", \"path\": \"/customer\" }, \r\n                    { \"name\": \"Payment Method\", \"icon\": \"mdi mdi-credit-card-settings-outline\", \"path\": \"/payment_method\" }, \r\n                    { \"name\": \"Affiliate\", \"icon\": \"mdi-account-network-outline\", \"path\": \"/affiliate\" }, \r\n                    { \"name\": \"Users\", \"icon\": \"mdi-account-multiple\", \"path\": \"/user\" }, \r\n                    { \"name\": \"Roles\", \"icon\": \"mdi-key\", \"path\": \"/role\" }, \r\n                    { \"name\": \"Menus\", \"icon\": \"mdi-menu\", \"path\": \"/menu\" }, \r\n                    { \"name\": \"Business\", \"icon\": \"mdi-domain\", \"path\": \"/business\" }, \r\n                    { \"name\": \"Department\", \"icon\": \"mdi-briefcase-account-outline\", \"path\": \"/department\" }],\r\n                    bind: {\r\n                         label: 'Menu Items'\r\n                    }\r\n                }\r\n                \r\n            ]\r\n        }\r\n    ]\r\n}","import tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nimport itemButtons from './defaults/item_buttons'\r\n\r\nexport default {\r\n    // title: 'Sub-Affiliate',\r\n    title: {\r\n        singular: 'Sub-Affiliate',\r\n        plural: 'Sub-Affiliates',\r\n    },\r\n    icon: 'mdi-account-network-outline',\r\n    items: {\r\n\r\n        buttons: tableButtons.get('new', 'delete'),\r\n        headers: [\r\n            {\r\n                text: 'Name',\r\n                align: 'start',\r\n                value: 'name',\r\n            },\r\n            {\r\n                text: 'Affiliate',\r\n                value: 'affiliate.name'\r\n            },\r\n            // { text: 'Active', value: 'active', sortable: false, width: '10%' },\r\n            { text: '', value: 'actions', sortable: false, width: '150', buttons: rowButtons.get() }\r\n        ],\r\n    },\r\n    item: {\r\n        buttons: itemButtons.get('save', 'Cancel', 'spacer', 'delete'),\r\n        sidebar: {\r\n            panels: [\r\n                // {\r\n                //     title: 'Active',\r\n                //     fields: [\r\n                //         {\r\n                //             input: 'switch',\r\n                //             name: 'active',\r\n                //             default: true,\r\n                //             bind: {\r\n                //                 label: \"Active\"\r\n                //             }\r\n                //         }\r\n                //     ]\r\n                // },\r\n                {\r\n                    title: 'Affiliate',\r\n                    fields: [\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'affiliate',\r\n                            bind: {\r\n                                label: \"Affiliate\",\r\n                                collection: 'affiliate',\r\n                                itemText: \"name\",\r\n                                itemValue: \"_id\",\r\n                                prependInnerIcon: \"mdi-account-network-outline\",\r\n                                rules: [\r\n                                    v => !!v || 'Affiliate is required',\r\n                                ],\r\n                                required: true,\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    title: 'Created By',\r\n                    icon: \"mdi-account\",\r\n                    fields: [\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'user',\r\n                            if: vm => (vm.user.rights.filter(e => e.collection == 'subaffiliate')[0].write.allOwn == 'all'),\r\n                            default: vm => vm.user,\r\n                            bind: {\r\n                                label: \"User\",\r\n                                template: 'user',\r\n                                collection: 'user',\r\n                                itemText: \"displayName\",\r\n                                itemValue: \"_id\",\r\n                                hideAddNew: true,\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        content: {\r\n            panels: [\r\n                {\r\n                    title: 'Name',\r\n                    fields: [\r\n                        {\r\n                            input: 'text',\r\n                            name: 'name',\r\n                            bind: {\r\n                                label: \"Name\",\r\n                                rules: [\r\n                                    v => !!v || 'Name is required',\r\n                                ],\r\n                                required: true,\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n\r\n               \r\n            ]\r\n        }\r\n    },\r\n    form: [\r\n        {\r\n            label: 'General',\r\n            fields: [\r\n                {\r\n                    input: 'text',\r\n                    name: 'name',\r\n                    bind: {\r\n                        label: \"Name\",\r\n                        rules: [\r\n                            v => !!v || 'Name is required',\r\n                        ],\r\n                        required: true,\r\n                    }\r\n                },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'affiliate',\r\n                    bind: {\r\n                        label: \"Affiliate\",\r\n                        collection: 'affiliate',\r\n                        itemText: \"name\",\r\n                        itemValue: \"_id\",\r\n                        prependIcon: \"mdi-account-network-outline\",\r\n                        rules: [\r\n                            v => !!v || 'Affiliate is required',\r\n                        ],\r\n                        required: true,\r\n                    }\r\n                },\r\n                {\r\n                    input: 'switch',\r\n                    name: 'active',\r\n                    default: true,\r\n                    bind: {\r\n                        label: \"Active\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}","\r\n\r\nimport tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nimport itemButtons from './defaults/item_buttons'\r\n\r\nexport default {\r\n    // title: 'Bank Transactions',\r\n    title: {\r\n        singular: 'Bank Transaction',\r\n        plural: 'Banks Transactions',\r\n    },\r\n    icon: 'mdi-bank-transfer',\r\n     \r\n    \r\n    items: {\r\n        total: {\r\n            headers: [\r\n                {\r\n                    text: 'Currency',\r\n                    align: 'start',\r\n                    value: '_id',\r\n                    component: () => import('./../components/items/fields/Currency.vue'),\r\n                    sortable: false,\r\n                    width:\"50\"\r\n                },\r\n                {\r\n                    text: 'Subtotal',\r\n                    align: 'start',\r\n                    value: 'subtotal.amount',\r\n                    format: 'money',\r\n                    formatArgs: ['$_id', true],\r\n                    sortable: false,\r\n                },\r\n                {\r\n                    text: 'Withraw',\r\n                    align: 'start',\r\n                    format: 'money',\r\n                    formatArgs: ['$_id', true],\r\n                    value: 'withdraw.amount',\r\n                    sortable: false,\r\n                },\r\n                {\r\n                    text: 'Total',\r\n                    align: 'start',\r\n                    format: 'money',\r\n                    formatArgs: ['$_id', true],\r\n                    value: 'amount',\r\n                    sortable: false,\r\n                },\r\n                // {\r\n                //     text: 'Total SAR',\r\n                //     align: 'start',\r\n                //     format: 'money',\r\n                //     formatArgs: ['SAR', true],\r\n                //     value: 'amount_sar',\r\n                //     sortable: false,\r\n                // }\r\n            ]\r\n        },\r\n        buttons: tableButtons.get('new', 'withdraw', 'delete'),\r\n        filters: [\r\n\r\n\r\n            {\r\n                input: 'autocomplete',\r\n                name: 'bank',\r\n                col: {\r\n                    sm: 7\r\n                },\r\n                bind: {\r\n                    label: \"Bank\",\r\n                    prependIcon: \"mdi-bank\",\r\n                    collection: 'bank',\r\n                    itemText: \"number\",\r\n                    itemValue: \"_id\",\r\n               \r\n                }\r\n            },\r\n            {\r\n                input: 'range',\r\n                name: 'created_on',\r\n                col: {\r\n                    sm: 5\r\n                },\r\n                bind: {\r\n                    label: \"Date\",\r\n                    prependIcon: \"mdi-calendar\",\r\n\r\n                }\r\n            }\r\n\r\n        ],\r\n        headers: [\r\n            { text: 'Agent', value: 'agent' },\r\n            { text: 'Bank', value: 'bank.number' },\r\n            { text: 'Country', value: 'bank.country', format: 'country', width: '100' },\r\n            { text: 'Currency', value: 'currency', sortable: false, component: () => import('./../components/items/fields/Currency.vue') },\r\n            { text: 'Type', sortable: false, value: 'type', format: 'depositType', width: '50'  },\r\n            // { text: 'Amount', value: 'amount', format: 'money', formatArgs: ['$bank.currency'] },\r\n            { text: 'TRY', value: 'amount_try', format: 'money', formatArgs: ['TRY', true] },\r\n            { text: 'EUR', value: 'amount_eur', format: 'money', formatArgs: ['EUR', true] },\r\n            { text: 'SAR', value: 'amount_sar', format: 'money', formatArgs: ['SAR', true] },\r\n            { text: 'USD', value: 'amount_usd', format: 'money', formatArgs: ['USD', true] },\r\n            { text: 'Date', value: 'created_on', format: 'date' },\r\n            { text: '', value: 'actions', sortable: false, width: '150', buttons: rowButtons.get() }\r\n\r\n        ]\r\n    },\r\n    item: {\r\n        buttons: itemButtons.get('save', 'Cancel', 'spacer', 'delete'),\r\n        sidebar: {\r\n            panels:[\r\n                {\r\n                    title: 'Created Date',\r\n                    fields:[\r\n                        {\r\n                            input: 'date',\r\n                            name: 'created_on',\r\n                            default: (new Date()).toISOString().split('T')[0],\r\n                            bind: {\r\n                                label: \"Created Date\",\r\n                                prependInnerIcon: 'mdi-calendar',\r\n                                required: true,\r\n\r\n\r\n                                rules: [\r\n                                    v => !!v || 'Created On is required',\r\n                                ],\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    title: 'Created By',\r\n                    icon: 'mdi-account',\r\n                    fields: [\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'user',\r\n                            if: vm => (vm.user.rights.filter(e => e.collection == 'banktransaction')[0].write.allOwn == 'all'),\r\n                            default: vm => vm.user,\r\n                            bind: {\r\n                                label: \"User\",\r\n                                collection: 'user',\r\n                                template: 'user',\r\n                                itemText: \"displayName\",\r\n                                itemValue: \"_id\",\r\n                                required: true,\r\n                                or: false,\r\n                                query: {\r\n                                    role: ['!wakel', '!affiliate'],\r\n                                },\r\n                                rules: [\r\n                                    v => !!v || 'User is required',\r\n                                ],\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        content: {\r\n            panels: [\r\n                {\r\n                    title: 'Agent',\r\n                    fields: [\r\n                        {\r\n                            input: 'text',\r\n                            name: 'agent',\r\n                            bind: {\r\n                                label: \"Agent name\",\r\n                                prependInnerIcon: 'mdi-account',\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    title: 'Bank',\r\n                    fields:[\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'bank',\r\n                            col: {\r\n                                md: 9\r\n                            },\r\n                            bind: {\r\n                                label: \"Bank\",\r\n                                prependInnerIcon: \"mdi-bank\",\r\n                                collection: 'bank',\r\n                                itemText: \"number\",\r\n                                itemValue: \"_id\",\r\n                                required: true,\r\n                                searchFields: ['number', 'country'],\r\n                                returnObject: true,\r\n                                rules: [\r\n                                    v => !!v || 'Bank is required',\r\n                                ],\r\n                            },\r\n                            on: (vm) => ({\r\n                                input(bank) {\r\n                                    console.log(bank);\r\n                                    vm.data.currency = bank ? bank.currency : ''\r\n                                }\r\n                            })\r\n                        },\r\n                        {\r\n                            input: 'select',\r\n                            name: 'currency',\r\n                            col: {\r\n                                md: 3\r\n                            },\r\n                            bind: {\r\n                                label: \"Currency\",\r\n                                prependInnerIcon: \"mdi-currency-usd-circle-outline\",\r\n                                items: ['USD', 'EUR', 'SAR', 'TRY'],\r\n                                required: true,\r\n                                rules: [\r\n                                    v => !!v || 'Currency is required',\r\n                                ],\r\n                            },\r\n                            on: (vm) => ({\r\n                                input(currency) {\r\n                                  \r\n                                    const icons = {\r\n                                        'USD': 'mdi-currency-usd',\r\n                                        'SAR': 'mdi-currency-rial',\r\n                                        'TRY': 'mdi-currency-try',\r\n                                        'EUR': 'mdi-currency-eur',\r\n                                    }\r\n\r\n                                    if (currency) {\r\n                                        vm.props['banktransaction_amount'] = {\r\n                                            prependInnerIcon: icons[currency],\r\n                                            label: 'Amount in ' + currency\r\n                                        }\r\n\r\n                                    } else if (vm.props['banktransaction_amount'])\r\n                                        delete vm.props['banktransaction_amount']\r\n                                }\r\n                            })\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    title: 'Transaction amount',\r\n                    fields: [\r\n                        {\r\n                            input: 'text',\r\n                            name: 'amount',\r\n                            col: {\r\n                                md: 6\r\n                            },\r\n                            bind: (vm) => ({\r\n                                label: (() => {\r\n                                  \r\n\r\n                                    return vm.data.currency ? `Amount in ${vm.data.currency}` : \"Amount\"\r\n                                })(),\r\n                                prependInnerIcon: (() => {\r\n                                    \r\n                                    const icons = {\r\n                                        'USD': 'mdi-currency-usd',\r\n                                        'SAR': 'mdi-currency-rial',\r\n                                        'TRY': 'mdi-currency-try',\r\n                                        'EUR': 'mdi-currency-eur',\r\n                                    }\r\n                                    return icons[vm.data.currency] || 'mdi-cash'\r\n                                })(),\r\n                                required: true,\r\n                                type: 'number',\r\n                                rules: [\r\n                                    v => !!v || 'Amount is required',\r\n                                ],\r\n                            })\r\n                        },\r\n                        {\r\n                            input: 'text',\r\n                            name: 'amount_sar',\r\n                            col: {\r\n                                md: 6\r\n                            },\r\n                            bind: {\r\n                                label: \"Amount in SAR\",\r\n                                prependInnerIcon: 'mdi-currency-rial',\r\n                                required: true,\r\n                                type: 'number',\r\n                                rules: [\r\n                                    v => !!v || 'Amount is required',\r\n                                ],\r\n                            }\r\n                        },\r\n\r\n                        {\r\n                            input: 'hidden',\r\n                            name: 'type',\r\n                            default() {\r\n                                const urlParams = new URLSearchParams(location.search);\r\n                                return urlParams.get('type') || 'deposit'\r\n                            }\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    } \r\n}","import tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nimport itemButtons from './defaults/item_buttons'\r\n\r\nexport default {\r\n    // title: 'Affiliate',\r\n    title: {\r\n        singular: 'Affiliate',\r\n        plural: 'Affiliates',\r\n    },\r\n    icon: 'mdi-account-network-outline',\r\n    items: {\r\n        buttons: tableButtons.get('new', 'delete'),\r\n        headers: [\r\n            {\r\n                text: 'Name',\r\n                align: 'start',\r\n\r\n                value: 'name',\r\n            },\r\n            // { text: 'Active', value: 'active', sortable: false, width: '10%' },\r\n            { text: '', value: 'actions', sortable: false, width: '150', buttons: rowButtons.get() }\r\n        ]\r\n    },\r\n    item: {\r\n        buttons: itemButtons.get('save', 'Cancel', 'spacer', 'delete'),\r\n        sidebar: {\r\n            panels: [\r\n                // {\r\n                //     title: 'Active',\r\n                //     fields: [\r\n                //         {\r\n                //             input: 'switch',\r\n                //             name: 'active',\r\n                //             default: true,\r\n                //             bind: {\r\n                //                 label: \"Active\"\r\n                //             }\r\n                //         }\r\n                //     ]\r\n                // },\r\n                {\r\n                    title: 'Created By',\r\n                    icon: \"mdi-account\",\r\n                    fields: [\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'user',\r\n                            if: vm => (vm.user.rights.filter(e => e.collection == 'affiliate')[0].write.allOwn == 'all'),\r\n                            default: vm => vm.user,\r\n                            bind: {\r\n                                label: \"User\",\r\n                                template: 'user',\r\n                                collection: 'user',\r\n                                itemText: \"displayName\",\r\n                                itemValue: \"_id\",\r\n                                hideAddNew: true,\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        content: {\r\n            panels: [\r\n                {\r\n                    title: 'Name',\r\n                    fields: [\r\n                        {\r\n                            input: 'text',\r\n                            name: 'name',\r\n                            bind: {\r\n                                label: \"Name\",\r\n                                rules: [\r\n                                    v => !!v || 'Name is required',\r\n                                ],\r\n                                required: true,\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}","import tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nimport itemButtons from './defaults/item_buttons'\r\n\r\nexport default {\r\n    // title: 'Payment Method',\r\n    title: {\r\n        singular: 'Payment Method',\r\n        plural: 'Payment Methods',\r\n    },\r\n    icon: 'mdi-credit-card-settings-outline',\r\n    items: {\r\n        buttons: tableButtons.get('new', 'delete'),\r\n        headers: [\r\n            {\r\n                text: 'Name',\r\n                align: 'start',\r\n\r\n                value: 'name',\r\n            },\r\n            { text: 'Type', value: 'type', width: '20%' },\r\n            // { text: 'Active', value: 'active', sortable: false, width: '10%' },\r\n            { text: '', value: 'actions', sortable: false, width: '150', buttons: rowButtons.get() }\r\n        ],\r\n    },\r\n    item: {\r\n        buttons: itemButtons.get('save', 'Cancel', 'spacer', 'delete'),\r\n        sidebar: {\r\n            panels: [\r\n                // {\r\n                //     title: 'Active',\r\n                //     fields: [\r\n                //         {\r\n                //             input: 'switch',\r\n                //             name: 'active',\r\n                //             default: true,\r\n                //             bind: {\r\n                //                 label: \"Active\"\r\n                //             }\r\n                //         }\r\n                //     ]\r\n                // }\r\n                {\r\n                    title: 'Created By',\r\n                    icon: \"mdi-account\",\r\n                    fields: [\r\n                        {\r\n                            input: 'autocomplete',\r\n                            name: 'user',\r\n                            if: vm => (vm.user.rights.filter(e => e.collection == 'payment_method')[0].write.allOwn == 'all'),\r\n                            default: vm => vm.user,\r\n                            bind: {\r\n                                label: \"User\",\r\n                                template: 'user',\r\n                                collection: 'user',\r\n                                itemText: \"displayName\",\r\n                                itemValue: \"_id\",\r\n                                hideAddNew: true,\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        content: {\r\n            panels: [\r\n                {\r\n                    title: 'Payment Method',\r\n                    fields: [\r\n                        {\r\n                            input: 'text',\r\n                            name: 'name',\r\n                            col: {\r\n                                md: 8\r\n                            },\r\n                            bind: {\r\n                                label: \"Name\",\r\n                                rules: [\r\n                                    v => !!v || 'Name is required',\r\n                                ],\r\n                                required: true,\r\n                            }\r\n                        },\r\n                        {\r\n                            input: 'select',\r\n                            name: 'type',\r\n                            col: {\r\n                                md: 4\r\n                            },\r\n                            bind: {\r\n                                label: \"Type\",\r\n                                rules: [\r\n                                    v => !!v || 'Type is required',\r\n                                ],\r\n                                items: [\r\n                                    {\r\n                                        label: \"Credit Card\",\r\n                                        value: \"cc\"\r\n                                    },\r\n                                    {\r\n                                        label: \"Wire\",\r\n                                        value: \"wire\"\r\n                                    }\r\n                                ],\r\n                                itemText: \"label\",\r\n                                itemValue: \"value\",\r\n                                required: true,\r\n                            }\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    form: [\r\n        {\r\n            label: 'General',\r\n            fields: [\r\n                {\r\n                    input: 'text',\r\n                    name: 'name',\r\n                    bind: {\r\n                        label: \"Name\",\r\n                        rules: [\r\n                            v => !!v || 'Name is required',\r\n                        ],\r\n                        required: true,\r\n                    }\r\n                },\r\n                {\r\n                    input: 'select',\r\n                    name: 'type',\r\n                    bind: {\r\n                        label: \"Type\",\r\n                        rules: [\r\n                            v => !!v || 'Type is required',\r\n                        ],\r\n                        items: [\r\n                            {\r\n                                label: \"Credit Card\",\r\n                                value: \"cc\"\r\n                            },\r\n                            {\r\n                                label: \"Wire\",\r\n                                value: \"wire\"\r\n                            }\r\n                        ],\r\n                        itemText: \"label\",\r\n                        itemValue: \"value\",\r\n                        required: true,\r\n                    }\r\n                },\r\n                {\r\n                    input: 'switch',\r\n                    name: 'active',\r\n                    default: true,\r\n                    bind: {\r\n                        label: \"Active\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}"," \r\n\r\n// import payment_method from './payment_method'\r\n// import retention from './retention'\r\n// import sale from './sale'\r\n// import user from './user'\r\n// import role from './role'\r\n// import notefication from './notefication'\r\n\r\n\r\n\r\n\r\n\r\nexport default {\r\n    get(name) {\r\n        try {\r\n           return  require('./' + name).default\r\n        } catch (err) {\r\n            return false\r\n        }\r\n       \r\n    },\r\n    // sale,\r\n    // retention,\r\n    // payment_method,\r\n    // user,\r\n    // role,\r\n    // notefication\r\n}"],"sourceRoot":""}