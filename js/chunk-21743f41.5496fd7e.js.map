{"version":3,"sources":["webpack:///./node_modules/core-js/internals/native-url.js","webpack:///./src/collections/role.js","webpack:///./src/collections/business.js","webpack:///./node_modules/core-js/modules/web.url.js","webpack:///./src/collections/deposit.js","webpack:///./src/collections/defaults/items_buttons.js","webpack:///./src/collections/customer.js","webpack:///./src/collections/department.js","webpack:///./node_modules/core-js/internals/string-punycode-to-ascii.js","webpack:///./src/collections/transaction.js","webpack:///./src/collections/bank.js","webpack:///./src/collections/user.js","webpack:///./src/collections/defaults/row_buttons.js","webpack:///./node_modules/core-js/modules/web.url-search-params.js","webpack:///./node_modules/core-js/internals/get-iterator.js","webpack:///./src/collections sync ^\\.\\/.*$","webpack:///./src/collections/menu.js","webpack:///./src/collections/subaffiliate.js","webpack:///./src/collections/banktransaction.js","webpack:///./src/collections/affiliate.js","webpack:///./src/collections/payment_method.js","webpack:///./src/collections/index.js"],"names":["fails","wellKnownSymbol","IS_PURE","ITERATOR","module","exports","url","URL","searchParams","result","pathname","forEach","value","key","toJSON","sort","href","get","String","URLSearchParams","username","host","hash","undefined","title","icon","items","buttons","tableButtons","headers","text","align","sortable","width","rowButtons","form","label","fields","input","name","bind","prependIcon","required","rules","v","on","role","replace","toLowerCase","window","$form","data","autocomplete","collection","itemText","itemValue","default","EOF","$","DESCRIPTORS","USE_NATIVE_URL","global","defineProperties","redefine","anInstance","has","assign","arrayFrom","codeAt","toASCII","setToStringTag","URLSearchParamsModule","InternalStateModule","NativeURL","getInternalSearchParamsState","getState","setInternalState","set","getInternalURLState","getterFor","floor","Math","pow","INVALID_AUTHORITY","INVALID_SCHEME","INVALID_HOST","INVALID_PORT","ALPHA","ALPHANUMERIC","DIGIT","HEX_START","OCT","DEC","HEX","FORBIDDEN_HOST_CODE_POINT","FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT","LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE","TAB_AND_NEW_LINE","parseHost","codePoints","index","charAt","length","parseIPv6","slice","isSpecial","test","parseIPv4","percentEncode","C0ControlPercentEncodeSet","partsLength","numbers","part","radix","number","ipv4","parts","split","pop","parseInt","push","numbersSeen","ipv4Piece","swaps","swap","address","pieceIndex","compress","pointer","char","findLongestZeroSequence","ipv6","maxIndex","maxLength","currStart","currLength","serializeHost","ignore0","unshift","join","toString","fragmentPercentEncodeSet","pathPercentEncodeSet","userinfoPercentEncodeSet","code","encodeURIComponent","specialSchemes","ftp","file","http","https","ws","wss","scheme","includesCredentials","password","cannotHaveUsernamePasswordPort","cannotBeABaseURL","isWindowsDriveLetter","string","normalized","second","startsWithWindowsDriveLetter","third","shortenURLsPath","path","pathSize","isSingleDot","segment","isDoubleDot","SCHEME_START","SCHEME","NO_SCHEME","SPECIAL_RELATIVE_OR_AUTHORITY","PATH_OR_AUTHORITY","RELATIVE","RELATIVE_SLASH","SPECIAL_AUTHORITY_SLASHES","SPECIAL_AUTHORITY_IGNORE_SLASHES","AUTHORITY","HOST","HOSTNAME","PORT","FILE","FILE_SLASH","FILE_HOST","PATH_START","PATH","CANNOT_BE_A_BASE_URL_PATH","QUERY","FRAGMENT","parseURL","stateOverride","base","bufferCodePoints","failure","state","buffer","seenAt","seenBracket","seenPasswordToken","port","query","fragment","i","codePoint","encodedCodePoints","shift","URLConstructor","baseState","that","this","arguments","urlString","type","TypeError","searchParamsState","updateSearchParams","updateURL","serializeURL","call","origin","getOrigin","protocol","getProtocol","getUsername","getPassword","getHost","hostname","getHostname","getPort","getPathname","search","getSearch","getSearchParams","getHash","URLPrototype","prototype","output","error","accessorDescriptor","getter","setter","configurable","enumerable","nativeCreateObjectURL","createObjectURL","nativeRevokeObjectURL","revokeObjectURL","blob","apply","forced","sham","total","format","filters","if","auth","user","business","prependInnerIcon","hideAddNew","department","evt","$items","$refs","rights","filter","e","write","allOwn","or","searchFields","component","hide","item","urlParams","location","Date","toISOString","outlined","deposit_user","_id","args","map","spacer","find","el","color","vm","click","$router","$route","disabled","selected","$confirm","confirmed","loading","remove","params","id","rm","status","fetch","$store","commit","console","log","dialog","scrollable","is","close","unselect","save","update","nModified","indexOf","store","dark","small","backMode","countries","init","customer_subaffiliate","subaffiliate","affiliate","maxInt","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexNonASCII","regexSeparators","OVERFLOW_ERROR","baseMinusTMin","stringFromCharCode","fromCharCode","ucs2decode","counter","charCodeAt","extra","digitToBasic","digit","adapt","delta","numPoints","firstTime","k","encode","currentValue","inputLength","n","bias","basicLength","handledCPCount","m","handledCPCountPlusOne","RangeError","q","t","qMinusT","baseMinusT","encoded","labels","pad","str","withdraw","currency","today","setHours","getFullYear","getMonth","getDate","class","placeholder","getBuiltIn","redefineAll","createIteratorConstructor","hasOwn","classof","anObject","isObject","create","createPropertyDescriptor","getIterator","getIteratorMethod","$fetch","Headers","URL_SEARCH_PARAMS","URL_SEARCH_PARAMS_ITERATOR","getInternalParamsState","getInternalIteratorState","plus","sequences","Array","percentSequence","bytes","RegExp","percentDecode","sequence","decodeURIComponent","deserialize","it","replacer","match","serialize","parseSearchParams","attribute","entry","attributes","entries","validateArgumentsLength","passed","URLSearchParamsIterator","kind","iterator","step","next","done","URLSearchParamsConstructor","iteratorMethod","entryIterator","entryNext","first","URLSearchParamsPrototype","append","splice","getAll","found","val","entriesIndex","sliceIndex","callback","boundFunction","keys","values","body","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","Object","resolve","formatArgs","bank","banktransaction_currency","$emit","icons","props","require","err"],"mappings":"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","file":"js/chunk-21743f41.5496fd7e.js","sourcesContent":["var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = !fails(function () {\n  var url = new URL('b?a=1&b=2&c=3', 'http://a');\n  var searchParams = url.searchParams;\n  var result = '';\n  url.pathname = 'c%20d';\n  searchParams.forEach(function (value, key) {\n    searchParams['delete']('b');\n    result += key + value;\n  });\n  return (IS_PURE && !url.toJSON)\n    || !searchParams.sort\n    || url.href !== 'http://a/c%20d?a=1&c=3'\n    || searchParams.get('c') !== '3'\n    || String(new URLSearchParams('?a=1')) !== 'a=1'\n    || !searchParams[ITERATOR]\n    // throws in Edge\n    || new URL('https://a@b').username !== 'a'\n    || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b'\n    // not punycoded in Edge\n    || new URL('http://тест').host !== 'xn--e1aybc'\n    // not escaped in Chrome 62-\n    || new URL('http://a#б').hash !== '#%D0%B1'\n    // fails in Chrome 66-\n    || result !== 'a1c3'\n    // throws in Safari\n    || new URL('http://x', undefined).host !== 'x';\n});\n","import tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nexport default {\r\n        title: 'Roles',\r\n        icon: 'mdi-key',\r\n        items: {\r\n            buttons: tableButtons.get('new', 'delete'),\r\n            headers: [\r\n                {\r\n                    text: 'Display Name',\r\n                    align: 'start',\r\n                    sortable: false,\r\n                    value: 'name',\r\n                },\r\n                { text: 'Role', value: 'role' },\r\n                { text: 'Menu', value: 'menu.name' },\r\n                { text: '', value: 'actions', width: '150', buttons: rowButtons.get() }\r\n\r\n            ],\r\n        },\r\n        \r\n        form: [\r\n            {\r\n                label: 'General',\r\n                fields: [\r\n                    {\r\n                        input: 'text',\r\n                        name: 'name',\r\n                        bind: {\r\n                            label: \"Role Name\",\r\n                            prependIcon: 'mdi-label',\r\n                            required: true,\r\n                            \r\n                            rules: [\r\n                                v => !!v || 'Display Name is required',\r\n                            ],\r\n                        },\r\n                        on: () => ({\r\n                            input(v) {\r\n                                const role = v.replace(/[^0-9a-zA-Z\\s+]+/, '').replace(/\\s+/g, '_').toLowerCase()\r\n                                window.$form.data.role = role \r\n                               \r\n                            }\r\n                        })\r\n                    },\r\n                    {\r\n                        input: 'text',\r\n                        name: 'role',\r\n                        bind: {\r\n                            label: \"Role Alias\",\r\n                     \r\n                            autocomplete: 'username',\r\n                            prependIcon: 'mdi-key',\r\n                            required: true,\r\n                            rules: [\r\n                                v => !!v || 'Role Alias is required',\r\n                            ],\r\n                        }\r\n                    },\r\n                    {\r\n                        input: 'autocomplete',\r\n                        name: 'menu',\r\n                        bind: {\r\n                            label: \"Menu\",\r\n                            prependIcon: \"mdi-menu\",\r\n                            collection: 'menu',\r\n                            itemText: \"name\",\r\n                            itemValue: \"_id\",\r\n                            // required: true,\r\n\r\n\r\n                            // rules: [\r\n                            //     v => !!v || 'Menu is required',\r\n                            // ],\r\n                        }\r\n                    },\r\n                    {\r\n                        input: 'rights',\r\n                        name: 'rights',\r\n                        default: [],\r\n                        bind: {\r\n                            label: \"Permissions\",\r\n                        }\r\n                    } \r\n                ]\r\n            } \r\n        ]\r\n    }","import tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nexport default {\r\n    title: 'Business',\r\n    icon: 'mdi-domain',\r\n    items: {\r\n        buttons: tableButtons.get('new', 'delete'),\r\n        headers: [\r\n            {\r\n                text: 'Name',\r\n                align: 'start',\r\n                sortable: false,\r\n                value: 'name',\r\n            },\r\n            { text: '', value: 'actions', width: '150', buttons: rowButtons.get() }\r\n        ]\r\n    },\r\n    form: [\r\n        {\r\n            label: 'General',\r\n            fields: [\r\n                {\r\n                    input: 'text',\r\n                    name: 'name',\r\n                    bind: {\r\n                        label: \"Name\",\r\n                        rules: [\r\n                            v => !!v || 'Name is required',\r\n                        ],\r\n                        required: true,\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}","'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.string.iterator');\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar global = require('../internals/global');\nvar defineProperties = require('../internals/object-define-properties');\nvar redefine = require('../internals/redefine');\nvar anInstance = require('../internals/an-instance');\nvar has = require('../internals/has');\nvar assign = require('../internals/object-assign');\nvar arrayFrom = require('../internals/array-from');\nvar codeAt = require('../internals/string-multibyte').codeAt;\nvar toASCII = require('../internals/string-punycode-to-ascii');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar URLSearchParamsModule = require('../modules/web.url-search-params');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar NativeURL = global.URL;\nvar URLSearchParams = URLSearchParamsModule.URLSearchParams;\nvar getInternalSearchParamsState = URLSearchParamsModule.getState;\nvar setInternalState = InternalStateModule.set;\nvar getInternalURLState = InternalStateModule.getterFor('URL');\nvar floor = Math.floor;\nvar pow = Math.pow;\n\nvar INVALID_AUTHORITY = 'Invalid authority';\nvar INVALID_SCHEME = 'Invalid scheme';\nvar INVALID_HOST = 'Invalid host';\nvar INVALID_PORT = 'Invalid port';\n\nvar ALPHA = /[A-Za-z]/;\nvar ALPHANUMERIC = /[\\d+-.A-Za-z]/;\nvar DIGIT = /\\d/;\nvar HEX_START = /^(0x|0X)/;\nvar OCT = /^[0-7]+$/;\nvar DEC = /^\\d+$/;\nvar HEX = /^[\\dA-Fa-f]+$/;\n// eslint-disable-next-line no-control-regex\nvar FORBIDDEN_HOST_CODE_POINT = /[\\u0000\\u0009\\u000A\\u000D #%/:?@[\\\\]]/;\n// eslint-disable-next-line no-control-regex\nvar FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\\u0000\\u0009\\u000A\\u000D #/:?@[\\\\]]/;\n// eslint-disable-next-line no-control-regex\nvar LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\\u0000-\\u001F ]+|[\\u0000-\\u001F ]+$/g;\n// eslint-disable-next-line no-control-regex\nvar TAB_AND_NEW_LINE = /[\\u0009\\u000A\\u000D]/g;\nvar EOF;\n\nvar parseHost = function (url, input) {\n  var result, codePoints, index;\n  if (input.charAt(0) == '[') {\n    if (input.charAt(input.length - 1) != ']') return INVALID_HOST;\n    result = parseIPv6(input.slice(1, -1));\n    if (!result) return INVALID_HOST;\n    url.host = result;\n  // opaque host\n  } else if (!isSpecial(url)) {\n    if (FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT.test(input)) return INVALID_HOST;\n    result = '';\n    codePoints = arrayFrom(input);\n    for (index = 0; index < codePoints.length; index++) {\n      result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);\n    }\n    url.host = result;\n  } else {\n    input = toASCII(input);\n    if (FORBIDDEN_HOST_CODE_POINT.test(input)) return INVALID_HOST;\n    result = parseIPv4(input);\n    if (result === null) return INVALID_HOST;\n    url.host = result;\n  }\n};\n\nvar parseIPv4 = function (input) {\n  var parts = input.split('.');\n  var partsLength, numbers, index, part, radix, number, ipv4;\n  if (parts.length && parts[parts.length - 1] == '') {\n    parts.pop();\n  }\n  partsLength = parts.length;\n  if (partsLength > 4) return input;\n  numbers = [];\n  for (index = 0; index < partsLength; index++) {\n    part = parts[index];\n    if (part == '') return input;\n    radix = 10;\n    if (part.length > 1 && part.charAt(0) == '0') {\n      radix = HEX_START.test(part) ? 16 : 8;\n      part = part.slice(radix == 8 ? 1 : 2);\n    }\n    if (part === '') {\n      number = 0;\n    } else {\n      if (!(radix == 10 ? DEC : radix == 8 ? OCT : HEX).test(part)) return input;\n      number = parseInt(part, radix);\n    }\n    numbers.push(number);\n  }\n  for (index = 0; index < partsLength; index++) {\n    number = numbers[index];\n    if (index == partsLength - 1) {\n      if (number >= pow(256, 5 - partsLength)) return null;\n    } else if (number > 255) return null;\n  }\n  ipv4 = numbers.pop();\n  for (index = 0; index < numbers.length; index++) {\n    ipv4 += numbers[index] * pow(256, 3 - index);\n  }\n  return ipv4;\n};\n\n// eslint-disable-next-line max-statements\nvar parseIPv6 = function (input) {\n  var address = [0, 0, 0, 0, 0, 0, 0, 0];\n  var pieceIndex = 0;\n  var compress = null;\n  var pointer = 0;\n  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;\n\n  var char = function () {\n    return input.charAt(pointer);\n  };\n\n  if (char() == ':') {\n    if (input.charAt(1) != ':') return;\n    pointer += 2;\n    pieceIndex++;\n    compress = pieceIndex;\n  }\n  while (char()) {\n    if (pieceIndex == 8) return;\n    if (char() == ':') {\n      if (compress !== null) return;\n      pointer++;\n      pieceIndex++;\n      compress = pieceIndex;\n      continue;\n    }\n    value = length = 0;\n    while (length < 4 && HEX.test(char())) {\n      value = value * 16 + parseInt(char(), 16);\n      pointer++;\n      length++;\n    }\n    if (char() == '.') {\n      if (length == 0) return;\n      pointer -= length;\n      if (pieceIndex > 6) return;\n      numbersSeen = 0;\n      while (char()) {\n        ipv4Piece = null;\n        if (numbersSeen > 0) {\n          if (char() == '.' && numbersSeen < 4) pointer++;\n          else return;\n        }\n        if (!DIGIT.test(char())) return;\n        while (DIGIT.test(char())) {\n          number = parseInt(char(), 10);\n          if (ipv4Piece === null) ipv4Piece = number;\n          else if (ipv4Piece == 0) return;\n          else ipv4Piece = ipv4Piece * 10 + number;\n          if (ipv4Piece > 255) return;\n          pointer++;\n        }\n        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n        numbersSeen++;\n        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;\n      }\n      if (numbersSeen != 4) return;\n      break;\n    } else if (char() == ':') {\n      pointer++;\n      if (!char()) return;\n    } else if (char()) return;\n    address[pieceIndex++] = value;\n  }\n  if (compress !== null) {\n    swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex != 0 && swaps > 0) {\n      swap = address[pieceIndex];\n      address[pieceIndex--] = address[compress + swaps - 1];\n      address[compress + --swaps] = swap;\n    }\n  } else if (pieceIndex != 8) return;\n  return address;\n};\n\nvar findLongestZeroSequence = function (ipv6) {\n  var maxIndex = null;\n  var maxLength = 1;\n  var currStart = null;\n  var currLength = 0;\n  var index = 0;\n  for (; index < 8; index++) {\n    if (ipv6[index] !== 0) {\n      if (currLength > maxLength) {\n        maxIndex = currStart;\n        maxLength = currLength;\n      }\n      currStart = null;\n      currLength = 0;\n    } else {\n      if (currStart === null) currStart = index;\n      ++currLength;\n    }\n  }\n  if (currLength > maxLength) {\n    maxIndex = currStart;\n    maxLength = currLength;\n  }\n  return maxIndex;\n};\n\nvar serializeHost = function (host) {\n  var result, index, compress, ignore0;\n  // ipv4\n  if (typeof host == 'number') {\n    result = [];\n    for (index = 0; index < 4; index++) {\n      result.unshift(host % 256);\n      host = floor(host / 256);\n    } return result.join('.');\n  // ipv6\n  } else if (typeof host == 'object') {\n    result = '';\n    compress = findLongestZeroSequence(host);\n    for (index = 0; index < 8; index++) {\n      if (ignore0 && host[index] === 0) continue;\n      if (ignore0) ignore0 = false;\n      if (compress === index) {\n        result += index ? ':' : '::';\n        ignore0 = true;\n      } else {\n        result += host[index].toString(16);\n        if (index < 7) result += ':';\n      }\n    }\n    return '[' + result + ']';\n  } return host;\n};\n\nvar C0ControlPercentEncodeSet = {};\nvar fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {\n  ' ': 1, '\"': 1, '<': 1, '>': 1, '`': 1\n});\nvar pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {\n  '#': 1, '?': 1, '{': 1, '}': 1\n});\nvar userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {\n  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\\\': 1, ']': 1, '^': 1, '|': 1\n});\n\nvar percentEncode = function (char, set) {\n  var code = codeAt(char, 0);\n  return code > 0x20 && code < 0x7F && !has(set, char) ? char : encodeURIComponent(char);\n};\n\nvar specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nvar isSpecial = function (url) {\n  return has(specialSchemes, url.scheme);\n};\n\nvar includesCredentials = function (url) {\n  return url.username != '' || url.password != '';\n};\n\nvar cannotHaveUsernamePasswordPort = function (url) {\n  return !url.host || url.cannotBeABaseURL || url.scheme == 'file';\n};\n\nvar isWindowsDriveLetter = function (string, normalized) {\n  var second;\n  return string.length == 2 && ALPHA.test(string.charAt(0))\n    && ((second = string.charAt(1)) == ':' || (!normalized && second == '|'));\n};\n\nvar startsWithWindowsDriveLetter = function (string) {\n  var third;\n  return string.length > 1 && isWindowsDriveLetter(string.slice(0, 2)) && (\n    string.length == 2 ||\n    ((third = string.charAt(2)) === '/' || third === '\\\\' || third === '?' || third === '#')\n  );\n};\n\nvar shortenURLsPath = function (url) {\n  var path = url.path;\n  var pathSize = path.length;\n  if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {\n    path.pop();\n  }\n};\n\nvar isSingleDot = function (segment) {\n  return segment === '.' || segment.toLowerCase() === '%2e';\n};\n\nvar isDoubleDot = function (segment) {\n  segment = segment.toLowerCase();\n  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';\n};\n\n// States:\nvar SCHEME_START = {};\nvar SCHEME = {};\nvar NO_SCHEME = {};\nvar SPECIAL_RELATIVE_OR_AUTHORITY = {};\nvar PATH_OR_AUTHORITY = {};\nvar RELATIVE = {};\nvar RELATIVE_SLASH = {};\nvar SPECIAL_AUTHORITY_SLASHES = {};\nvar SPECIAL_AUTHORITY_IGNORE_SLASHES = {};\nvar AUTHORITY = {};\nvar HOST = {};\nvar HOSTNAME = {};\nvar PORT = {};\nvar FILE = {};\nvar FILE_SLASH = {};\nvar FILE_HOST = {};\nvar PATH_START = {};\nvar PATH = {};\nvar CANNOT_BE_A_BASE_URL_PATH = {};\nvar QUERY = {};\nvar FRAGMENT = {};\n\n// eslint-disable-next-line max-statements\nvar parseURL = function (url, input, stateOverride, base) {\n  var state = stateOverride || SCHEME_START;\n  var pointer = 0;\n  var buffer = '';\n  var seenAt = false;\n  var seenBracket = false;\n  var seenPasswordToken = false;\n  var codePoints, char, bufferCodePoints, failure;\n\n  if (!stateOverride) {\n    url.scheme = '';\n    url.username = '';\n    url.password = '';\n    url.host = null;\n    url.port = null;\n    url.path = [];\n    url.query = null;\n    url.fragment = null;\n    url.cannotBeABaseURL = false;\n    input = input.replace(LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');\n  }\n\n  input = input.replace(TAB_AND_NEW_LINE, '');\n\n  codePoints = arrayFrom(input);\n\n  while (pointer <= codePoints.length) {\n    char = codePoints[pointer];\n    switch (state) {\n      case SCHEME_START:\n        if (char && ALPHA.test(char)) {\n          buffer += char.toLowerCase();\n          state = SCHEME;\n        } else if (!stateOverride) {\n          state = NO_SCHEME;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case SCHEME:\n        if (char && (ALPHANUMERIC.test(char) || char == '+' || char == '-' || char == '.')) {\n          buffer += char.toLowerCase();\n        } else if (char == ':') {\n          if (stateOverride && (\n            (isSpecial(url) != has(specialSchemes, buffer)) ||\n            (buffer == 'file' && (includesCredentials(url) || url.port !== null)) ||\n            (url.scheme == 'file' && !url.host)\n          )) return;\n          url.scheme = buffer;\n          if (stateOverride) {\n            if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;\n            return;\n          }\n          buffer = '';\n          if (url.scheme == 'file') {\n            state = FILE;\n          } else if (isSpecial(url) && base && base.scheme == url.scheme) {\n            state = SPECIAL_RELATIVE_OR_AUTHORITY;\n          } else if (isSpecial(url)) {\n            state = SPECIAL_AUTHORITY_SLASHES;\n          } else if (codePoints[pointer + 1] == '/') {\n            state = PATH_OR_AUTHORITY;\n            pointer++;\n          } else {\n            url.cannotBeABaseURL = true;\n            url.path.push('');\n            state = CANNOT_BE_A_BASE_URL_PATH;\n          }\n        } else if (!stateOverride) {\n          buffer = '';\n          state = NO_SCHEME;\n          pointer = 0;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case NO_SCHEME:\n        if (!base || (base.cannotBeABaseURL && char != '#')) return INVALID_SCHEME;\n        if (base.cannotBeABaseURL && char == '#') {\n          url.scheme = base.scheme;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          url.cannotBeABaseURL = true;\n          state = FRAGMENT;\n          break;\n        }\n        state = base.scheme == 'file' ? FILE : RELATIVE;\n        continue;\n\n      case SPECIAL_RELATIVE_OR_AUTHORITY:\n        if (char == '/' && codePoints[pointer + 1] == '/') {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          pointer++;\n        } else {\n          state = RELATIVE;\n          continue;\n        } break;\n\n      case PATH_OR_AUTHORITY:\n        if (char == '/') {\n          state = AUTHORITY;\n          break;\n        } else {\n          state = PATH;\n          continue;\n        }\n\n      case RELATIVE:\n        url.scheme = base.scheme;\n        if (char == EOF) {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n        } else if (char == '/' || (char == '\\\\' && isSpecial(url))) {\n          state = RELATIVE_SLASH;\n        } else if (char == '?') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          state = FRAGMENT;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.path.pop();\n          state = PATH;\n          continue;\n        } break;\n\n      case RELATIVE_SLASH:\n        if (isSpecial(url) && (char == '/' || char == '\\\\')) {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        } else if (char == '/') {\n          state = AUTHORITY;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          state = PATH;\n          continue;\n        } break;\n\n      case SPECIAL_AUTHORITY_SLASHES:\n        state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        if (char != '/' || buffer.charAt(pointer + 1) != '/') continue;\n        pointer++;\n        break;\n\n      case SPECIAL_AUTHORITY_IGNORE_SLASHES:\n        if (char != '/' && char != '\\\\') {\n          state = AUTHORITY;\n          continue;\n        } break;\n\n      case AUTHORITY:\n        if (char == '@') {\n          if (seenAt) buffer = '%40' + buffer;\n          seenAt = true;\n          bufferCodePoints = arrayFrom(buffer);\n          for (var i = 0; i < bufferCodePoints.length; i++) {\n            var codePoint = bufferCodePoints[i];\n            if (codePoint == ':' && !seenPasswordToken) {\n              seenPasswordToken = true;\n              continue;\n            }\n            var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);\n            if (seenPasswordToken) url.password += encodedCodePoints;\n            else url.username += encodedCodePoints;\n          }\n          buffer = '';\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url))\n        ) {\n          if (seenAt && buffer == '') return INVALID_AUTHORITY;\n          pointer -= arrayFrom(buffer).length + 1;\n          buffer = '';\n          state = HOST;\n        } else buffer += char;\n        break;\n\n      case HOST:\n      case HOSTNAME:\n        if (stateOverride && url.scheme == 'file') {\n          state = FILE_HOST;\n          continue;\n        } else if (char == ':' && !seenBracket) {\n          if (buffer == '') return INVALID_HOST;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PORT;\n          if (stateOverride == HOSTNAME) return;\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url))\n        ) {\n          if (isSpecial(url) && buffer == '') return INVALID_HOST;\n          if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PATH_START;\n          if (stateOverride) return;\n          continue;\n        } else {\n          if (char == '[') seenBracket = true;\n          else if (char == ']') seenBracket = false;\n          buffer += char;\n        } break;\n\n      case PORT:\n        if (DIGIT.test(char)) {\n          buffer += char;\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url)) ||\n          stateOverride\n        ) {\n          if (buffer != '') {\n            var port = parseInt(buffer, 10);\n            if (port > 0xFFFF) return INVALID_PORT;\n            url.port = (isSpecial(url) && port === specialSchemes[url.scheme]) ? null : port;\n            buffer = '';\n          }\n          if (stateOverride) return;\n          state = PATH_START;\n          continue;\n        } else return INVALID_PORT;\n        break;\n\n      case FILE:\n        url.scheme = 'file';\n        if (char == '/' || char == '\\\\') state = FILE_SLASH;\n        else if (base && base.scheme == 'file') {\n          if (char == EOF) {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n          } else if (char == '?') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n            url.fragment = '';\n            state = FRAGMENT;\n          } else {\n            if (!startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n              url.host = base.host;\n              url.path = base.path.slice();\n              shortenURLsPath(url);\n            }\n            state = PATH;\n            continue;\n          }\n        } else {\n          state = PATH;\n          continue;\n        } break;\n\n      case FILE_SLASH:\n        if (char == '/' || char == '\\\\') {\n          state = FILE_HOST;\n          break;\n        }\n        if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n          if (isWindowsDriveLetter(base.path[0], true)) url.path.push(base.path[0]);\n          else url.host = base.host;\n        }\n        state = PATH;\n        continue;\n\n      case FILE_HOST:\n        if (char == EOF || char == '/' || char == '\\\\' || char == '?' || char == '#') {\n          if (!stateOverride && isWindowsDriveLetter(buffer)) {\n            state = PATH;\n          } else if (buffer == '') {\n            url.host = '';\n            if (stateOverride) return;\n            state = PATH_START;\n          } else {\n            failure = parseHost(url, buffer);\n            if (failure) return failure;\n            if (url.host == 'localhost') url.host = '';\n            if (stateOverride) return;\n            buffer = '';\n            state = PATH_START;\n          } continue;\n        } else buffer += char;\n        break;\n\n      case PATH_START:\n        if (isSpecial(url)) {\n          state = PATH;\n          if (char != '/' && char != '\\\\') continue;\n        } else if (!stateOverride && char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          state = PATH;\n          if (char != '/') continue;\n        } break;\n\n      case PATH:\n        if (\n          char == EOF || char == '/' ||\n          (char == '\\\\' && isSpecial(url)) ||\n          (!stateOverride && (char == '?' || char == '#'))\n        ) {\n          if (isDoubleDot(buffer)) {\n            shortenURLsPath(url);\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else if (isSingleDot(buffer)) {\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else {\n            if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {\n              if (url.host) url.host = '';\n              buffer = buffer.charAt(0) + ':'; // normalize windows drive letter\n            }\n            url.path.push(buffer);\n          }\n          buffer = '';\n          if (url.scheme == 'file' && (char == EOF || char == '?' || char == '#')) {\n            while (url.path.length > 1 && url.path[0] === '') {\n              url.path.shift();\n            }\n          }\n          if (char == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          }\n        } else {\n          buffer += percentEncode(char, pathPercentEncodeSet);\n        } break;\n\n      case CANNOT_BE_A_BASE_URL_PATH:\n        if (char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          url.path[0] += percentEncode(char, C0ControlPercentEncodeSet);\n        } break;\n\n      case QUERY:\n        if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          if (char == \"'\" && isSpecial(url)) url.query += '%27';\n          else if (char == '#') url.query += '%23';\n          else url.query += percentEncode(char, C0ControlPercentEncodeSet);\n        } break;\n\n      case FRAGMENT:\n        if (char != EOF) url.fragment += percentEncode(char, fragmentPercentEncodeSet);\n        break;\n    }\n\n    pointer++;\n  }\n};\n\n// `URL` constructor\n// https://url.spec.whatwg.org/#url-class\nvar URLConstructor = function URL(url /* , base */) {\n  var that = anInstance(this, URLConstructor, 'URL');\n  var base = arguments.length > 1 ? arguments[1] : undefined;\n  var urlString = String(url);\n  var state = setInternalState(that, { type: 'URL' });\n  var baseState, failure;\n  if (base !== undefined) {\n    if (base instanceof URLConstructor) baseState = getInternalURLState(base);\n    else {\n      failure = parseURL(baseState = {}, String(base));\n      if (failure) throw TypeError(failure);\n    }\n  }\n  failure = parseURL(state, urlString, null, baseState);\n  if (failure) throw TypeError(failure);\n  var searchParams = state.searchParams = new URLSearchParams();\n  var searchParamsState = getInternalSearchParamsState(searchParams);\n  searchParamsState.updateSearchParams(state.query);\n  searchParamsState.updateURL = function () {\n    state.query = String(searchParams) || null;\n  };\n  if (!DESCRIPTORS) {\n    that.href = serializeURL.call(that);\n    that.origin = getOrigin.call(that);\n    that.protocol = getProtocol.call(that);\n    that.username = getUsername.call(that);\n    that.password = getPassword.call(that);\n    that.host = getHost.call(that);\n    that.hostname = getHostname.call(that);\n    that.port = getPort.call(that);\n    that.pathname = getPathname.call(that);\n    that.search = getSearch.call(that);\n    that.searchParams = getSearchParams.call(that);\n    that.hash = getHash.call(that);\n  }\n};\n\nvar URLPrototype = URLConstructor.prototype;\n\nvar serializeURL = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var username = url.username;\n  var password = url.password;\n  var host = url.host;\n  var port = url.port;\n  var path = url.path;\n  var query = url.query;\n  var fragment = url.fragment;\n  var output = scheme + ':';\n  if (host !== null) {\n    output += '//';\n    if (includesCredentials(url)) {\n      output += username + (password ? ':' + password : '') + '@';\n    }\n    output += serializeHost(host);\n    if (port !== null) output += ':' + port;\n  } else if (scheme == 'file') output += '//';\n  output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n  if (query !== null) output += '?' + query;\n  if (fragment !== null) output += '#' + fragment;\n  return output;\n};\n\nvar getOrigin = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var port = url.port;\n  if (scheme == 'blob') try {\n    return new URL(scheme.path[0]).origin;\n  } catch (error) {\n    return 'null';\n  }\n  if (scheme == 'file' || !isSpecial(url)) return 'null';\n  return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');\n};\n\nvar getProtocol = function () {\n  return getInternalURLState(this).scheme + ':';\n};\n\nvar getUsername = function () {\n  return getInternalURLState(this).username;\n};\n\nvar getPassword = function () {\n  return getInternalURLState(this).password;\n};\n\nvar getHost = function () {\n  var url = getInternalURLState(this);\n  var host = url.host;\n  var port = url.port;\n  return host === null ? ''\n    : port === null ? serializeHost(host)\n    : serializeHost(host) + ':' + port;\n};\n\nvar getHostname = function () {\n  var host = getInternalURLState(this).host;\n  return host === null ? '' : serializeHost(host);\n};\n\nvar getPort = function () {\n  var port = getInternalURLState(this).port;\n  return port === null ? '' : String(port);\n};\n\nvar getPathname = function () {\n  var url = getInternalURLState(this);\n  var path = url.path;\n  return url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n};\n\nvar getSearch = function () {\n  var query = getInternalURLState(this).query;\n  return query ? '?' + query : '';\n};\n\nvar getSearchParams = function () {\n  return getInternalURLState(this).searchParams;\n};\n\nvar getHash = function () {\n  var fragment = getInternalURLState(this).fragment;\n  return fragment ? '#' + fragment : '';\n};\n\nvar accessorDescriptor = function (getter, setter) {\n  return { get: getter, set: setter, configurable: true, enumerable: true };\n};\n\nif (DESCRIPTORS) {\n  defineProperties(URLPrototype, {\n    // `URL.prototype.href` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-href\n    href: accessorDescriptor(serializeURL, function (href) {\n      var url = getInternalURLState(this);\n      var urlString = String(href);\n      var failure = parseURL(url, urlString);\n      if (failure) throw TypeError(failure);\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.origin` getter\n    // https://url.spec.whatwg.org/#dom-url-origin\n    origin: accessorDescriptor(getOrigin),\n    // `URL.prototype.protocol` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-protocol\n    protocol: accessorDescriptor(getProtocol, function (protocol) {\n      var url = getInternalURLState(this);\n      parseURL(url, String(protocol) + ':', SCHEME_START);\n    }),\n    // `URL.prototype.username` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-username\n    username: accessorDescriptor(getUsername, function (username) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(username));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.username = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.password` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-password\n    password: accessorDescriptor(getPassword, function (password) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(password));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.password = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.host` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-host\n    host: accessorDescriptor(getHost, function (host) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(host), HOST);\n    }),\n    // `URL.prototype.hostname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hostname\n    hostname: accessorDescriptor(getHostname, function (hostname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(hostname), HOSTNAME);\n    }),\n    // `URL.prototype.port` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-port\n    port: accessorDescriptor(getPort, function (port) {\n      var url = getInternalURLState(this);\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      port = String(port);\n      if (port == '') url.port = null;\n      else parseURL(url, port, PORT);\n    }),\n    // `URL.prototype.pathname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-pathname\n    pathname: accessorDescriptor(getPathname, function (pathname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      url.path = [];\n      parseURL(url, pathname + '', PATH_START);\n    }),\n    // `URL.prototype.search` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-search\n    search: accessorDescriptor(getSearch, function (search) {\n      var url = getInternalURLState(this);\n      search = String(search);\n      if (search == '') {\n        url.query = null;\n      } else {\n        if ('?' == search.charAt(0)) search = search.slice(1);\n        url.query = '';\n        parseURL(url, search, QUERY);\n      }\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.searchParams` getter\n    // https://url.spec.whatwg.org/#dom-url-searchparams\n    searchParams: accessorDescriptor(getSearchParams),\n    // `URL.prototype.hash` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hash\n    hash: accessorDescriptor(getHash, function (hash) {\n      var url = getInternalURLState(this);\n      hash = String(hash);\n      if (hash == '') {\n        url.fragment = null;\n        return;\n      }\n      if ('#' == hash.charAt(0)) hash = hash.slice(1);\n      url.fragment = '';\n      parseURL(url, hash, FRAGMENT);\n    })\n  });\n}\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\nredefine(URLPrototype, 'toJSON', function toJSON() {\n  return serializeURL.call(this);\n}, { enumerable: true });\n\n// `URL.prototype.toString` method\n// https://url.spec.whatwg.org/#URL-stringification-behavior\nredefine(URLPrototype, 'toString', function toString() {\n  return serializeURL.call(this);\n}, { enumerable: true });\n\nif (NativeURL) {\n  var nativeCreateObjectURL = NativeURL.createObjectURL;\n  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;\n  // `URL.createObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n  // eslint-disable-next-line no-unused-vars\n  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', function createObjectURL(blob) {\n    return nativeCreateObjectURL.apply(NativeURL, arguments);\n  });\n  // `URL.revokeObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL\n  // eslint-disable-next-line no-unused-vars\n  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', function revokeObjectURL(url) {\n    return nativeRevokeObjectURL.apply(NativeURL, arguments);\n  });\n}\n\nsetToStringTag(URLConstructor, 'URL');\n\n$({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {\n  URL: URLConstructor\n});\n","\r\nimport tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\n \r\nexport default {\r\n    title: 'Deposits',\r\n    icon: 'mdi-bank-transfer-in',\r\n    items: {\r\n        total: {\r\n            headers: [\r\n                {\r\n                    text: 'Subtotal',\r\n                    align: 'start',\r\n                    value: 'subtotal.amount',\r\n                    format: 'money',\r\n                    sortable: false,\r\n                },\r\n                {\r\n                    text: 'Withraw',\r\n                    align: 'start',\r\n                    format: 'money',\r\n                    value: 'withdraw.amount',\r\n                    sortable: false,\r\n                },\r\n                {\r\n                    text: 'Total',\r\n                    align: 'start',\r\n                    format: 'money',\r\n                    value: 'amount',\r\n                    sortable: false,\r\n                }\r\n            ]\r\n        },\r\n        buttons: tableButtons.get('new', 'withdraw', 'delete'),\r\n       \r\n        filters: [\r\n        {\r\n            input: 'autocomplete',\r\n            name: 'business',\r\n            if: state => !(state.auth.user.business),\r\n            bind: {\r\n                label: \"Business Unit\",\r\n                prependInnerIcon: \"mdi-domain\",\r\n                collection: 'business',\r\n                itemText: \"name\",\r\n                itemValue: \"_id\",\r\n                hideAddNew: true,\r\n\r\n            }\r\n        },\r\n        {\r\n            input: 'autocomplete',\r\n            name: 'department',\r\n            if: state => !(state.auth.user.department),\r\n            bind: {\r\n                label: \"Department\",\r\n                prependInnerIcon: \"mdi-briefcase-account-outline\",\r\n                collection: 'department',\r\n                itemText: \"name\",\r\n                itemValue: \"_id\",\r\n                hideAddNew: true,\r\n\r\n\r\n            },\r\n            on: {\r\n                input(evt) {\r\n                    const { user } = window.$items.$refs\r\n                    if (!evt && user[0].query.department)\r\n                        delete user[0].query.department\r\n                    else if(evt) \r\n                        user[0].query.department = evt\r\n\r\n                }\r\n            }\r\n        },\r\n        {\r\n            input: 'autocomplete',\r\n            name: 'user',\r\n            if: state => (state.auth.user.rights.filter(e => e.collection == 'deposit')[0].write.allOwn == 'all'),\r\n            bind: {\r\n                label: \"Owner\",\r\n                prependInnerIcon: \"mdi-account\",\r\n                collection: 'user',\r\n                itemText: \"displayName\",\r\n                itemValue: \"_id\",\r\n                hideAddNew: true,\r\n                or: false,\r\n                query: {\r\n                    role: ['!wakel', '!affiliate']\r\n                }\r\n\r\n            }\r\n        },\r\n        {\r\n            input: 'autocomplete',\r\n            name: 'customer',\r\n            bind: {\r\n                label: \"Account\",\r\n                prependInnerIcon: \"mdi-account-box\",\r\n                collection: 'customer',\r\n                itemText: \"name\",\r\n                itemValue: \"_id\",\r\n                searchFields: ['name', 'tpc'],\r\n                hideAddNew: true,\r\n\r\n            }\r\n        },\r\n        {\r\n            input: 'range',\r\n            name: 'created_on',\r\n            bind: {\r\n                label: \"Date\",\r\n                prependInnerIcon: \"mdi-calendar\",\r\n\r\n            }\r\n        }\r\n\r\n        ],\r\n        headers: [\r\n            {\r\n                text: 'TP Account',\r\n                align: 'start',\r\n                value: 'customer.tpc',\r\n                sortable: false,\r\n            },\r\n            { text: 'Account name', sortable: false, value: 'customer.name' },\r\n            { text: 'Country', sortable: false, value: 'customer.country', format: 'country', width: '150' },\r\n            { text: 'Type', sortable: false, value: 'type', format: 'depositType', width: '50' },\r\n            { text: 'Amount', value: 'amount', format: 'money' },\r\n            { text: 'Payment Method', sortable: false, value: 'payment_method.name' },\r\n            { text: 'Affiliate', value: 'customer.affiliate.name' },\r\n            { text: 'Sub Affiliate', value: 'customer.subaffiliate.name' },\r\n            { text: 'Created Date', value: 'created_on', width: '120', format: 'date' },\r\n            { text: 'Note', value: 'note' },\r\n            { text: 'Business Unit', value: 'business.name', sortable: false },\r\n            { text: 'Department', value: 'department.name', sortable: false },\r\n            { \r\n                text: 'Owner', \r\n                sortable: false, \r\n                value: 'user.displayName', \r\n                width: '200',\r\n                component: () => import('./../components/items/fields/User.vue') \r\n            },\r\n            { text: 'profileImage', sortable: false, value: 'user.profileImage', hide: true },\r\n            { \r\n                text: '', \r\n                value: 'actions', \r\n                sortable: false, \r\n                width: '150',\r\n                buttons: rowButtons.get() \r\n            }\r\n            ]\r\n    },\r\n    item: {\r\n\r\n    },\r\n    form: [\r\n        {\r\n            label: 'General',\r\n            fields: [\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'customer',\r\n                    bind: {\r\n                        label: \"Account\",\r\n                        prependIcon: \"mdi-account-box\",\r\n                        collection: 'customer',\r\n                        itemText: \"name\",\r\n                        itemValue: \"_id\",\r\n                        required: true,\r\n                        searchFields: ['name', 'tpc'],\r\n\r\n                        rules: [\r\n                            v => !!v || 'Account is required',\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    input: 'text',\r\n                    name: 'amount',\r\n\r\n                    bind: {\r\n                        label: \"Amount\",\r\n                        prependIcon: 'mdi-cash',\r\n                        required: true,\r\n                        type: 'number',\r\n                        rules: [\r\n                            v => !!v || 'Amount is required',\r\n                        ],\r\n                    }\r\n                },\r\n\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'payment_method',\r\n                    if() {\r\n                        // hide on withdraw\r\n                        const urlParams = new URLSearchParams(location.search);\r\n                        return urlParams.get('type') != 'wtd'\r\n                    },\r\n                    default: () =>  null,\r\n                    bind: {\r\n                        label: \"Payment Method\",\r\n                        prependIcon: \"mdi-credit-card-settings-outline\",\r\n                        collection: 'payment_method',\r\n                        itemText: \"name\",\r\n                        itemValue: \"_id\",\r\n                        required: true,\r\n\r\n\r\n                        rules: [\r\n                            v => !!v || 'Payment Method is required',\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    input: 'hidden',\r\n                    name: 'type',\r\n                    default () {\r\n                        const urlParams = new URLSearchParams(location.search);\r\n                        return urlParams.get('type')  \r\n                    }\r\n                },\r\n                {\r\n                    input: 'date',\r\n                    name: 'created_on',\r\n                    default: (new Date()).toISOString().split('T')[0],\r\n                    bind: {\r\n                        label: \"Created Date\",\r\n                        prependIcon: 'mdi-calendar',\r\n                        required: true,\r\n\r\n\r\n                        rules: [\r\n                            v => !!v || 'Created On is required',\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    input: 'textarea',\r\n                    name: 'note',\r\n                    bind: {\r\n                        label: \"Note\",\r\n                        prependIcon: 'mdi-message',\r\n                        outlined:true\r\n                    }\r\n                },\r\n                // {\r\n                //     input: 'select',\r\n                //     name: 'type',\r\n                //     bind: {\r\n                //         label: \"Deposit Type\",\r\n                //         prependIcon: 'mdi-bank-transfer',\r\n                //         items: [\r\n                //             { text: 'First Deposit', value: 'ftd' }, \r\n                //             { text: 'Retention Deposit', value: 'rtn' },\r\n                //             { text: 'Withdraw', value: 'wtd' },\r\n                //         ],\r\n                //         required: true,\r\n\r\n\r\n                //         rules: [\r\n                //             v => !!v || 'Created On is required',\r\n                //         ],\r\n                //     }\r\n                // },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'business',\r\n                    if: state => !(state.auth.user.business),\r\n                    default: state => state.auth.user.business,\r\n                    bind: {\r\n                        label: \"Business Unit\",\r\n                        prependIcon: \"mdi-domain\",\r\n                        collection: 'business',\r\n                        itemText: \"name\",\r\n                        itemValue: \"_id\",\r\n                        required: true,\r\n                        rules: [\r\n                            v => !!v || 'Business Unit is required',\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'department',\r\n                    if: state => !(state.auth.user.department),\r\n                    default: state => state.auth.user.department,\r\n                    bind: {\r\n                        label: \"Department\",\r\n                        prependIcon: \"mdi-briefcase-account-outline\",\r\n                        collection: 'department',\r\n                        itemText: \"name\",\r\n                        itemValue: \"_id\",\r\n                        required: true,\r\n                        rules: [\r\n                            v => !!v || 'Department is required',\r\n                        ],\r\n                    },\r\n                    on: () => ({\r\n                        input(evt) {\r\n                            const { deposit_user } = window.$form.$refs\r\n                            if (!evt && deposit_user[0].query.department)\r\n                                delete deposit_user[0].query.department\r\n                            else if (evt)\r\n                                deposit_user[0].query.department = evt\r\n\r\n                        }\r\n                    })\r\n                },\r\n\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'user',\r\n                    if: state => (state.auth.user.rights.filter(e => e.collection == 'deposit')[0].write.allOwn == 'all'),\r\n                    default: state => state.auth.user._id,\r\n                    bind: {\r\n                        label: \"Owner\",\r\n                        prependIcon: \"mdi-account\",\r\n                        collection: 'user',\r\n                        itemText: \"displayName\",\r\n                        itemValue: \"_id\",\r\n                        required: true,\r\n                        rules: [\r\n                            v => !!v || 'Owner is required',\r\n                        ],\r\n                        or: false,\r\n                        query: {\r\n\r\n                            role: ['!wakel', '!affiliate']\r\n                        }\r\n                    }\r\n                },\r\n\r\n\r\n            ]\r\n        }\r\n    ]\r\n\r\n}\r\n\r\n\r\n// export default {\r\n//     title: 'Deposits',\r\n//     icon: 'mdi-bank-transfer-in',\r\n//     withdraw: true,\r\n//     filters:[\r\n       \r\n//         {\r\n//             input: 'autocomplete',\r\n//             name: 'business',\r\n//             if: state => !(state.auth.user.business),\r\n//             bind: {\r\n//                 label: \"Business Unit\",\r\n//                 prependInnerIcon: \"mdi-domain\",\r\n//                 collection: 'business',\r\n//                 itemText: \"name\",\r\n//                 itemValue: \"_id\",\r\n//                 hideAddNew: true,\r\n               \r\n//             }\r\n//         },\r\n//         {\r\n//             input: 'autocomplete',\r\n//             name: 'department',\r\n//             if: state => !(state.auth.user.department),\r\n//             bind: {\r\n//                 label: \"Department\",\r\n//                 prependInnerIcon: \"mdi-briefcase-account-outline\",\r\n//                 collection: 'department',\r\n//                 itemText: \"name\",\r\n//                 itemValue: \"_id\",\r\n//                 hideAddNew: true,\r\n               \r\n                \r\n//             },\r\n//             on: {\r\n//                 input(evt) {\r\n//                     const { user } = window.$items.$refs\r\n//                     if (!evt && user[0].query.department)\r\n//                         delete user[0].query.department\r\n//                     else if(evt) \r\n//                         user[0].query.department = evt\r\n                   \r\n//                 }\r\n//             }\r\n//         },\r\n//         {\r\n//             input: 'autocomplete',\r\n//             name: 'user',\r\n//             if: state => (state.auth.user.rights.filter(e => e.collection == 'deposit')[0].write.allOwn == 'all'),\r\n//             bind: {\r\n//                 label: \"Owner\",\r\n//                 prependInnerIcon: \"mdi-account\",\r\n//                 collection: 'user',\r\n//                 itemText: \"displayName\",\r\n//                 itemValue: \"_id\",\r\n//                 hideAddNew: true,\r\n//                 or: false,\r\n//                 query: {\r\n//                     role: ['!wakel', '!affiliate']\r\n//                 }\r\n                \r\n//             }\r\n//         },\r\n//         {\r\n//             input: 'autocomplete',\r\n//             name: 'customer',\r\n//             bind: {\r\n//                 label: \"Account\",\r\n//                 prependInnerIcon: \"mdi-account-box\",\r\n//                 collection: 'customer',\r\n//                 itemText: \"name\",\r\n//                 itemValue: \"_id\",\r\n//                 searchFields: ['name', 'tpc'],\r\n//                 hideAddNew: true,\r\n\r\n//             }\r\n//         },\r\n//         {\r\n//             input: 'range',\r\n//             name: 'created_on',\r\n//             bind: {\r\n//                 label: \"Date\",\r\n//                 prependInnerIcon: \"mdi-calendar\",\r\n\r\n//             }\r\n//         }\r\n\r\n//     ],\r\n\r\n//     table: [\r\n//         {\r\n//             text: 'TP Account',\r\n//             align: 'start',\r\n//             value: 'customer.tpc',\r\n//             sortable: false,\r\n//         },\r\n//         { text: 'Account name', sortable: false, value: 'customer.name' },\r\n//         { text: 'Country', sortable: false, value: 'customer.country', format: 'country' },\r\n//         { text: 'Type', sortable: false, value: 'type', format: 'depositType' },\r\n//         { text: 'Amount', value: 'amount', format: 'money' },\r\n//         { text: 'Payment Method', sortable: false, value: 'payment_method.name' },\r\n//         { text: 'Affiliate', value: 'customer.affiliate.name' },\r\n//         { text: 'Sub Affiliate', value: 'customer.subaffiliate.name' },\r\n//         { text: 'Created Date', value: 'created_on', width: '120', format: 'date' },\r\n//         { text: 'Note', value: 'note' },\r\n//         { text: 'Business Unit', value: 'business.name', sortable: false },\r\n//         { text: 'Department', value: 'department.name', sortable: false },\r\n//         { text: 'Owner', sortable: false, value: 'user.displayName' },\r\n//         { text: 'Actions', value: 'actions', sortable: false, width: '150' }\r\n\r\n//     ],\r\n//     form: [\r\n//         {\r\n//             label: 'General',\r\n//             fields: [\r\n//                 {\r\n//                     input: 'autocomplete',\r\n//                     name: 'customer',\r\n//                     bind: {\r\n//                         label: \"Account\",\r\n//                         prependIcon: \"mdi-account-box\",\r\n//                         collection: 'customer',\r\n//                         itemText: \"name\",\r\n//                         itemValue: \"_id\",\r\n//                         required: true,\r\n//                         searchFields: ['name', 'tpc'],\r\n\r\n//                         rules: [\r\n//                             v => !!v || 'Account is required',\r\n//                         ],\r\n//                     }\r\n//                 },\r\n//                 {\r\n//                     input: 'text',\r\n//                     name: 'amount',\r\n                   \r\n//                     bind: {\r\n//                         label: \"Amount\",\r\n//                         prependIcon: 'mdi-cash',\r\n//                         required: true,\r\n//                         type: 'number',\r\n//                         rules: [\r\n//                             v => !!v || 'Amount is required',\r\n//                         ],\r\n//                     }\r\n//                 },\r\n               \r\n//                 {\r\n//                     input: 'autocomplete',\r\n//                     name: 'payment_method',\r\n//                     if() {\r\n//                         // hide on withdraw\r\n//                         const urlParams = new URLSearchParams(location.search);\r\n//                         return urlParams.get('type') != 'wtd'\r\n//                     },\r\n//                     default: () =>  null,\r\n//                     bind: {\r\n//                         label: \"Payment Method\",\r\n//                         prependIcon: \"mdi-credit-card-settings-outline\",\r\n//                         collection: 'payment_method',\r\n//                         itemText: \"name\",\r\n//                         itemValue: \"_id\",\r\n//                         required: true,\r\n                        \r\n                        \r\n//                         rules: [\r\n//                             v => !!v || 'Payment Method is required',\r\n//                         ],\r\n//                     }\r\n//                 },\r\n//                 {\r\n//                     input: 'hidden',\r\n//                     name: 'type',\r\n//                     default () {\r\n//                         const urlParams = new URLSearchParams(location.search);\r\n//                         return urlParams.get('type')  \r\n//                     }\r\n//                 },\r\n//                 {\r\n//                     input: 'date',\r\n//                     name: 'created_on',\r\n//                     default: (new Date()).toISOString().split('T')[0],\r\n//                     bind: {\r\n//                         label: \"Created Date\",\r\n//                         prependIcon: 'mdi-calendar',\r\n//                         required: true,\r\n                        \r\n                        \r\n//                         rules: [\r\n//                             v => !!v || 'Created On is required',\r\n//                         ],\r\n//                     }\r\n//                 },\r\n//                 {\r\n//                     input: 'textarea',\r\n//                     name: 'note',\r\n//                     bind: {\r\n//                         label: \"Note\",\r\n//                         prependIcon: 'mdi-message',\r\n//                         outlined:true\r\n//                     }\r\n//                 },\r\n//                 // {\r\n//                 //     input: 'select',\r\n//                 //     name: 'type',\r\n//                 //     bind: {\r\n//                 //         label: \"Deposit Type\",\r\n//                 //         prependIcon: 'mdi-bank-transfer',\r\n//                 //         items: [\r\n//                 //             { text: 'First Deposit', value: 'ftd' }, \r\n//                 //             { text: 'Retention Deposit', value: 'rtn' },\r\n//                 //             { text: 'Withdraw', value: 'wtd' },\r\n//                 //         ],\r\n//                 //         required: true,\r\n\r\n\r\n//                 //         rules: [\r\n//                 //             v => !!v || 'Created On is required',\r\n//                 //         ],\r\n//                 //     }\r\n//                 // },\r\n//                 {\r\n//                     input: 'autocomplete',\r\n//                     name: 'business',\r\n//                     if: state => !(state.auth.user.business),\r\n//                     default: state => state.auth.user.business,\r\n//                     bind: {\r\n//                         label: \"Business Unit\",\r\n//                         prependIcon: \"mdi-domain\",\r\n//                         collection: 'business',\r\n//                         itemText: \"name\",\r\n//                         itemValue: \"_id\",\r\n//                         required: true,\r\n//                         rules: [\r\n//                             v => !!v || 'Business Unit is required',\r\n//                         ],\r\n//                     }\r\n//                 },\r\n//                 {\r\n//                     input: 'autocomplete',\r\n//                     name: 'department',\r\n//                     if: state => !(state.auth.user.department),\r\n//                     default: state => state.auth.user.department,\r\n//                     bind: {\r\n//                         label: \"Department\",\r\n//                         prependIcon: \"mdi-briefcase-account-outline\",\r\n//                         collection: 'department',\r\n//                         itemText: \"name\",\r\n//                         itemValue: \"_id\",\r\n//                         required: true,\r\n//                         rules: [\r\n//                             v => !!v || 'Department is required',\r\n//                         ],\r\n//                     },\r\n//                     on: () => ({\r\n//                         input(evt) {\r\n//                             const { deposit_user } = window.$form.$refs\r\n//                             if (!evt && deposit_user[0].query.department)\r\n//                                 delete deposit_user[0].query.department\r\n//                             else if (evt)\r\n//                                 deposit_user[0].query.department = evt\r\n\r\n//                         }\r\n//                     })\r\n//                 },\r\n                \r\n//                 {\r\n//                     input: 'autocomplete',\r\n//                     name: 'user',\r\n//                     if: state => (state.auth.user.rights.filter(e => e.collection == 'deposit')[0].write.allOwn == 'all'),\r\n//                     default: state => state.auth.user._id,\r\n//                     bind: {\r\n//                         label: \"Owner\",\r\n//                         prependIcon: \"mdi-account\",\r\n//                         collection: 'user',\r\n//                         itemText: \"displayName\",\r\n//                         itemValue: \"_id\",\r\n//                         required: true,\r\n//                         rules: [\r\n//                             v => !!v || 'Owner is required',\r\n//                         ],\r\n//                         or: false,\r\n//                         query: {\r\n                        \r\n//                             role: ['!wakel', '!affiliate']\r\n//                         }\r\n//                     }\r\n//                 },\r\n                \r\n               \r\n//             ]\r\n//         }\r\n//     ]\r\n// }","export default {\r\n    get () {\r\n        const args = [...arguments]\r\n        \r\n        const buttons = args.map(e => {\r\n            return e.toLowerCase() == 'spacer' ? { spacer: true } : this.buttons.find(el => el.title.toLowerCase() == e.toLowerCase())\r\n        }).filter(e => e)\r\n    \r\n        return buttons.length ? buttons : this.buttons\r\n    },\r\n    buttons: [\r\n        {\r\n            title: 'New',\r\n            icon: 'mdi-plus',\r\n            bind: {\r\n                color: 'green',\r\n            },\r\n            on: (vm) => ({\r\n                click() {\r\n                    vm.$router.push(vm.$route.path + '/new')\r\n                }\r\n            })\r\n        },\r\n        {\r\n            title: 'Withdraw',\r\n            icon: 'mdi-bank-transfer-out',\r\n            bind: {\r\n                color: 'orange',\r\n            },\r\n            on: (vm) => ({\r\n                click() {\r\n                    vm.$router.push(vm.$route.path + '/new?type=wtd')\r\n                }\r\n            })\r\n        },\r\n        {\r\n            title: 'Delete',\r\n            icon: 'mdi-delete',\r\n            bind: (vm) => ({\r\n                color: 'red',\r\n                disabled: vm.selected.length < 1\r\n            }),\r\n            on: (vm) => ({\r\n                async click() {\r\n                    if (vm.selected.length) {\r\n                        const confirmed = await vm.$confirm(`Do you realy want to delete <b>(${vm.selected.length})</b> items ?`, { title: 'Delete Item', color: 'red' })\r\n                        if (confirmed) {\r\n                            vm.loading = true\r\n                            const rm = await vm.remove({ collection: vm.$route.params.collection, id: 'delete', data: vm.selected.map(item => item._id) })\r\n                            if (rm.status === 200) {\r\n\r\n                                vm.fetch()\r\n                                vm.loading = false\r\n                                vm.$store.commit('success', `(${vm.selected.length}) items has been deleted successfuly`)\r\n                            }\r\n                        }\r\n                        console.log(confirmed);\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        {\r\n            title: 'Assign',\r\n            icon: 'mdi-clipboard-account',\r\n            bind: (vm) => ({\r\n                color: 'info',\r\n                disabled: vm.selected.length < 1\r\n            }),\r\n            on: (vm) => ({\r\n                async click() {\r\n                    if (vm.selected.length) {\r\n                        vm.dialog.value = true\r\n                        vm.dialog.bind = {\r\n                            'max-width': \"650\",\r\n                            scrollable: true\r\n                        }\r\n                        vm.dialog.component = {\r\n                            is: () => import('./../../components/items/dialog/Assign.vue'),\r\n                            bind: (vm) => ({\r\n                                items: vm.selected,\r\n                                headers: [\r\n                                    { text: 'TP Account', value: 'tpc' },\r\n                                    { text: 'Account Name', value: 'name' },\r\n                                    { text: 'Remove', value: 'action' },\r\n                                ]\r\n                            }),\r\n                            on: (vm) => ({\r\n                                close () {\r\n                                    vm.dialog.value = false\r\n                                },\r\n                                unselect (item) {\r\n                                    vm.selected = vm.selected.filter(e => item != e)\r\n                                  \r\n                                },\r\n                                async save (user) {\r\n                                    if (vm.selected.length) {\r\n                                        const update = await vm.update({\r\n                                            collection: 'customer', id: 'assign', data: {\r\n                                                user: user,\r\n                                                items: vm.selected.map(e => e._id)\r\n                                            }\r\n                                        })\r\n\r\n                                        if (update.status == 200) {\r\n                                            vm.$store.commit('success', update.data.nModified + ' items has been assigned')\r\n                                            vm.dialog.value = false\r\n                                            vm.selected = []\r\n                                            vm.fetch()\r\n                                        }\r\n\r\n                                    } else {\r\n                                        this.$store.commit('error', 'No item has been selected! please select at least one item ')\r\n                                    }\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    ]\r\n}","\r\nimport tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nimport countries from '../country'\r\nimport store from './../store'\r\nexport default {\r\n    title: 'Customers',\r\n    icon: 'mdi-account-box',\r\n    get assign () {\r\n        return ['admin', 'owner', 'manager'].indexOf(store.state.auth.user.role) !== -1\r\n    } ,\r\n    get select() {\r\n        return ['admin', 'owner', 'manager'].indexOf(store.state.auth.user.role) !== -1\r\n    },\r\n    buttons: [\r\n        {\r\n            text: 'New Deposit',\r\n            icon:'mdi-bank-transfer-in',\r\n            bind: {\r\n                dark:true,\r\n                small: true,\r\n                color: 'green',\r\n            },\r\n            on:(vm) => ({\r\n                click () {\r\n                    const { id } = vm.$route.params\r\n                    vm.$router.replace({ path: '/deposit/new?customer=' + id, query: { backMode: true } })\r\n                } \r\n            })\r\n        }\r\n    ],\r\n    // import: true,\r\n    // export: true,\r\n    \r\n    items: {\r\n        buttons: tableButtons.get('new', 'delete','assign'),\r\n        filters: [\r\n            {\r\n                input: 'text',\r\n                name: 'tpc',\r\n                bind: {\r\n                    label: \"TP Account\",\r\n                    prependInnerIcon: 'mdi-card-account-details',\r\n\r\n                }\r\n            },\r\n            {\r\n                input: 'text',\r\n                name: 'name',\r\n                bind: {\r\n                    label: \"Account Name\",\r\n                    prependInnerIcon: 'mdi-account-box',\r\n\r\n                }\r\n            },\r\n            {\r\n                input: 'autocomplete',\r\n                name: 'country',\r\n                bind: {\r\n                    label: \"Country\",\r\n                    prependInnerIcon: \"mdi-flag\",\r\n                    items: countries,\r\n                    itemText: \"name\",\r\n                    itemValue: \"code\",\r\n                    hideAddNew: true,\r\n\r\n                }\r\n            },\r\n            {\r\n                input: 'autocomplete',\r\n                name: 'affiliate',\r\n                bind: {\r\n                    label: \"Affiliate\",\r\n                    collection: 'affiliate',\r\n                    itemText: \"name\",\r\n                    itemValue: \"_id\",\r\n                    prependInnerIcon: \"mdi-account-network-outline\",\r\n                }\r\n            },\r\n            {\r\n                input: 'autocomplete',\r\n                name: 'user',\r\n                if: state => (state.auth.user.rights.filter(e => e.collection == 'customer')[0].write.allOwn == 'all'),\r\n\r\n                bind: {\r\n\r\n                    label: \"Owner\",\r\n                    prependInnerIcon: \"mdi-account\",\r\n                    collection: 'user',\r\n                    itemText: \"displayName\",\r\n                    itemValue: \"_id\",\r\n                    hideAddNew: true,\r\n                    or: false,\r\n                    query: {\r\n                        role: ['!wakel', '!affiliate']\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                input: 'select',\r\n                name: 'status',\r\n                bind: {\r\n                    label: \"Status\",\r\n                    items: [\r\n                        { text: 'All', value: null },\r\n                        { text: 'New', value: 'new' },\r\n                        { text: 'Call again', value: 'call again' },\r\n                        { text: 'No Answer', value: 'no Answer' },\r\n                        { text: 'Not interested', value: 'not interested' },\r\n                    ],\r\n                    itemText: \"text\",\r\n                    itemValue: \"value\",\r\n                    prependInnerIcon: \"mdi-list-status\",\r\n                }\r\n            }\r\n        ],\r\n        headers: [\r\n            {\r\n                text: 'TP Account',\r\n                align: 'start',\r\n                value: 'tpc',\r\n                sortable: false\r\n            },\r\n            { text: 'Account name', value: 'name', sortable: false },\r\n            { text: 'Country', value: 'country', format: 'country', width: '150'  },\r\n            { text: 'Affiliate', value: 'affiliate.name', sortable: false },\r\n            { text: 'Subaffiliate', value: 'subaffiliate.name', sortable: false },\r\n\r\n            { text: 'FTD', value: 'ftd.amount', sortable: false, format: 'money' },\r\n            { text: 'FTD Date', value: 'ftd.created_on', width: 120, sortable: false, format: 'date' },\r\n            { \r\n                text: 'Owner Conversion', \r\n                value: 'ftd.user.displayName', \r\n                sortable: false,\r\n                width: '200',\r\n                component: () => import('./../components/items/fields/User.vue')\r\n            },\r\n            { text: 'profileImage', sortable: false, value: 'ftd.user.profileImage', hide: true },\r\n\r\n            \r\n\r\n            { text: 'Status', value: 'status', sortable: false },\r\n            {\r\n                text: 'Owner',\r\n                sortable: false,\r\n                value: 'user.displayName',\r\n                width: '200',\r\n                component: () => import('./../components/items/fields/User.vue')\r\n            },\r\n            { text: 'profileImage', sortable: false, value: 'user.profileImage', hide: true },\r\n\r\n            // { text: 'Deposits', value: 'child.length' },\r\n            // { text: 'Total Deposits', value: 'total[0].amount' },\r\n            { text: '', value: 'actions', sortable: false, width: '150', buttons: rowButtons.get() }\r\n\r\n        ]\r\n    },\r\n    // expanded: {\r\n    //     headers: [\r\n    //         {\r\n    //             text: 'Date',\r\n    //             align: 'start',\r\n    //             value: 'created_on',\r\n    //         },\r\n    //         { text: 'Amount', value: 'amount' },\r\n            \r\n    //     ],\r\n    // },\r\n    form: [\r\n        {\r\n            label: 'General',\r\n            fields: [\r\n                {\r\n                    input: 'text',\r\n                    name: 'tpc',\r\n                    bind: {\r\n                        label: \"TP Account\",\r\n                        prependIcon: 'mdi-card-account-details',\r\n                        required: true,\r\n                        rules: [\r\n                            v => !!v || 'ID is required',\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    input: 'text',\r\n                    name: 'name',\r\n                    bind: {\r\n                        label: \"Account Name\",\r\n                        prependIcon: 'mdi-account-box',\r\n                        required: true,\r\n                        rules: [\r\n                            v => !!v || 'ID is required',\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'country',\r\n                    bind: {\r\n                        label: \"Country\",\r\n                        prependIcon: \"mdi-flag\",\r\n                        items: countries,\r\n                        itemText: \"name\",\r\n                        itemValue: \"code\",\r\n                        required: true,\r\n                        hideAddNew: true,\r\n                        rules: [\r\n                            v => !!v || 'Country is required',\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'affiliate',\r\n                    bind: {\r\n                        label: \"Affiliate\",\r\n                        collection: 'affiliate',\r\n                        itemText: \"name\",\r\n                        itemValue: \"_id\",\r\n                        prependIcon: \"mdi-account-network-outline\",\r\n                    },\r\n                    on: (vm) => ({\r\n                        init (evt) {\r\n                            if (vm.$refs.customer_subaffiliate) {\r\n                                const [subaffiliate] = vm.$refs.customer_subaffiliate\r\n                                vm.data['subaffiliate'] = null\r\n                                subaffiliate.query.affiliate = evt[0] ? evt[0]._id : '!'\r\n                            }\r\n                        },\r\n                        input (evt) {\r\n                           \r\n                            if (vm.$refs.customer_subaffiliate) {\r\n                                const [subaffiliate] = vm.$refs.customer_subaffiliate\r\n                                vm.data['subaffiliate'] = null \r\n                                subaffiliate.query.affiliate = evt ? evt : '!'\r\n                            }\r\n                        }\r\n                    }) \r\n                },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'subaffiliate',\r\n                    default: null,\r\n                    bind: {\r\n                        label: \"Subaffiliate\",\r\n                        collection: 'subaffiliate',\r\n                        itemText: \"name\",\r\n                        itemValue: \"_id\",\r\n                        prependIcon: \"mdi-account-network-outline\",\r\n                        hideAddNew: true,\r\n                        query: { affiliate: '!' }\r\n                    }\r\n                },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'user',\r\n                    if: state => (state.auth.user.rights.filter(e => e.collection == 'customer')[0].write.allOwn == 'all'),\r\n                    default: state => state.auth.user._id,\r\n                    bind: {\r\n                       \r\n                        label: \"Owner\",\r\n                        prependIcon: \"mdi-account\",\r\n                        collection: 'user',\r\n                        itemText: \"displayName\",\r\n                        itemValue: \"_id\",\r\n                        or: false,\r\n                        query: {\r\n                            role: ['!wakel', '!affiliate'],\r\n                            // department: store.state.rtn\r\n                        },\r\n                        hideAddNew: true,\r\n                    }\r\n                },\r\n                {\r\n                    input: 'select',\r\n                    name: 'status',\r\n                    default: () => 'new',\r\n                    bind: {\r\n                        label: \"Status\",\r\n                        items: [\r\n                            { text: 'New', value: 'new' },\r\n                            { text: 'Call again', value: 'call again' },\r\n                            { text: 'No Answer', value: 'no Answer' },\r\n                            { text: 'Not interested', value: 'not interested' },\r\n                        ],\r\n                        itemText: \"text\",\r\n                        itemValue: \"value\",\r\n                        prependIcon: \"mdi-list-status\",\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: 'Assignment History',\r\n            if: (vm) => vm.$route.params.id,\r\n            fields: [\r\n                {\r\n                    input: 'assignment',\r\n                    name: 'history',\r\n                    default: () => []\r\n                } \r\n            ]\r\n        }\r\n    ]\r\n}","import tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nexport default {\r\n    title: 'Department',\r\n    icon: 'mdi-briefcase-account-outline',\r\n    items: {\r\n        buttons: tableButtons.get('new', 'delete'),\r\n        headers: [\r\n            {\r\n                text: 'Name',\r\n                align: 'start',\r\n                sortable: false,\r\n                value: 'name',\r\n            },\r\n            {\r\n                text: 'Deposit Type',\r\n                sortable: false,\r\n                value: 'type',\r\n            },\r\n            { text: '', value: 'actions', width: '150', buttons: rowButtons.get() }\r\n        ]\r\n    },\r\n    form: [\r\n        {\r\n            label: 'General',\r\n            fields: [\r\n                {\r\n                    input: 'text',\r\n                    name: 'name',\r\n                    bind: {\r\n                        label: \"Name\",\r\n                        rules: [\r\n                            v => !!v || 'Name is required',\r\n                        ],\r\n                        required: true,\r\n                    }\r\n                },\r\n                {\r\n                    input: 'select',\r\n                    name: 'type',\r\n                    bind: {\r\n                        label: \"Deposit Type\",\r\n                        items: [\r\n                            { text: 'FTD', value: 'ftd' },\r\n                            { text: 'Retention', value: 'rtn' },\r\n                            { text: 'Withdraw', value: 'wtd' },\r\n                        ],\r\n                        rules: [\r\n                            v => !!v || 'Deposit Type',\r\n                        ],\r\n                        required: true,\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}","'use strict';\n// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\nvar regexNonASCII = /[^\\0-\\u007E]/; // non-ASCII chars\nvar regexSeparators = /[.\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\nvar OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n */\nvar ucs2decode = function (string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n  while (counter < length) {\n    var value = string.charCodeAt(counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // It's a high surrogate, and there is a next character.\n      var extra = string.charCodeAt(counter++);\n      if ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // It's an unmatched surrogate; only append this code unit, in case the\n        // next code unit is the high surrogate of a surrogate pair.\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n */\nvar digitToBasic = function (digit) {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n */\nvar adapt = function (delta, numPoints, firstTime) {\n  var k = 0;\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\n  delta += floor(delta / numPoints);\n  for (; delta > baseMinusTMin * tMax >> 1; k += base) {\n    delta = floor(delta / baseMinusTMin);\n  }\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n */\n// eslint-disable-next-line  max-statements\nvar encode = function (input) {\n  var output = [];\n\n  // Convert the input in UCS-2 to an array of Unicode code points.\n  input = ucs2decode(input);\n\n  // Cache the length.\n  var inputLength = input.length;\n\n  // Initialize the state.\n  var n = initialN;\n  var delta = 0;\n  var bias = initialBias;\n  var i, currentValue;\n\n  // Handle the basic code points.\n  for (i = 0; i < input.length; i++) {\n    currentValue = input[i];\n    if (currentValue < 0x80) {\n      output.push(stringFromCharCode(currentValue));\n    }\n  }\n\n  var basicLength = output.length; // number of basic code points.\n  var handledCPCount = basicLength; // number of code points that have been handled;\n\n  // Finish the basic string with a delimiter unless it's empty.\n  if (basicLength) {\n    output.push(delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n    // All non-basic code points < n have been handled already. Find the next larger one:\n    var m = maxInt;\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.\n    var handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n      throw RangeError(OVERFLOW_ERROR);\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue < n && ++delta > maxInt) {\n        throw RangeError(OVERFLOW_ERROR);\n      }\n      if (currentValue == n) {\n        // Represent delta as a generalized variable-length integer.\n        var q = delta;\n        for (var k = base; /* no condition */; k += base) {\n          var t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n          if (q < t) break;\n          var qMinusT = q - t;\n          var baseMinusT = base - t;\n          output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT)));\n          q = floor(qMinusT / baseMinusT);\n        }\n\n        output.push(stringFromCharCode(digitToBasic(q)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n  }\n  return output.join('');\n};\n\nmodule.exports = function (input) {\n  var encoded = [];\n  var labels = input.toLowerCase().replace(regexSeparators, '\\u002E').split('.');\n  var i, label;\n  for (i = 0; i < labels.length; i++) {\n    label = labels[i];\n    encoded.push(regexNonASCII.test(label) ? 'xn--' + encode(label) : label);\n  }\n  return encoded.join('.');\n};\n","\r\n\r\nimport tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nfunction pad(number, length) {\r\n\r\n    var str = '' + number;\r\n    while (str.length < length) {\r\n        str = '0' + str;\r\n    }\r\n\r\n    return str;\r\n\r\n}\r\n\r\nexport default {\r\n    title: 'Transactions',\r\n    icon: 'mdi-bank-transfer',\r\n    withdraw: true,\r\n    currency: 'SAR',\r\n    total: true,\r\n   \r\n    items: {\r\n        total: {\r\n            headers: [\r\n                {\r\n                    text: 'Subtotal',\r\n                    align: 'start',\r\n                    value: 'subtotal.amount',\r\n                    format: 'money',\r\n                    sortable: false,\r\n                },\r\n                {\r\n                    text: 'Withraw',\r\n                    align: 'start',\r\n                    format: 'money',\r\n                    value: 'withdraw.amount',\r\n                    sortable: false,\r\n                },\r\n                {\r\n                    text: 'Total',\r\n                    align: 'start',\r\n                    format: 'money',\r\n                    value: 'amount',\r\n                    sortable: false,\r\n                }\r\n            ]\r\n        },\r\n        buttons: tableButtons.get('new', 'withdraw', 'delete'),\r\n        filters: [\r\n\r\n\r\n\r\n            {\r\n                input: 'autocomplete',\r\n                name: 'user',\r\n                if: state => {\r\n                    console.log('asdsad => ', state.auth.user.rights);\r\n                    return (state.auth.user.rights.filter(e => e.collection == 'transaction')[0].write.allOwn == 'all')\r\n                },\r\n                bind: {\r\n                    label: \"Wakel\",\r\n                    prependInnerIcon: \"mdi-account\",\r\n                    collection: 'user',\r\n                    itemText: \"displayName\",\r\n                    itemValue: \"_id\",\r\n                    hideAddNew: true,\r\n                    or: false,\r\n                    query: {\r\n                        role: 'wakel'\r\n                    },\r\n\r\n                }\r\n            },\r\n\r\n            {\r\n                input: 'range',\r\n                name: 'created_on',\r\n                default: () => {\r\n                    const today = new Date()\r\n                    today.setHours(0, 0, 0, 0);\r\n                    // console.log([`${today.getFullYear()}-${pad(today.getMonth() + 1, 2)}-01`, `${today.getFullYear()}-${pad(today.getMonth() + 1, 2)}-${pad(today.getDate(), 2)}`]);\r\n                    return [`${today.getFullYear()}-${pad(today.getMonth() + 1, 2)}-01`, `${today.getFullYear()}-${pad(today.getMonth() + 1, 2)}-${pad(today.getDate(), 2)}`]\r\n                },\r\n                bind: {\r\n                    label: \"Date\",\r\n                    prependInnerIcon: \"mdi-calendar\",\r\n\r\n                }\r\n            }\r\n\r\n        ],\r\n        headers: [\r\n            { text: 'Account name', value: 'name', class: \"font-weight-bold\" },\r\n            { text: 'Type', sortable: false, value: 'type', format: 'depositType', width: '50'  },\r\n            { text: 'Amount', value: 'amount', format: 'money' },\r\n            // { text: 'Email', value: 'email' },\r\n            { text: 'Date', value: 'created_on', format: 'date' },\r\n            { \r\n                text: 'Label', \r\n                sortable: false, \r\n                value: 'user.displayName',\r\n                width: '200',\r\n                component: () => import('./../components/items/fields/User.vue')\r\n            },\r\n            { text: 'profileImage', sortable: false, value: 'user.profileImage', hide: true },\r\n            { text: '', value: 'actions', sortable: false, width: '150', buttons: rowButtons.get() }\r\n        ]\r\n    },\r\n    form: [\r\n        {\r\n            label: 'General',\r\n            fields: [\r\n                {\r\n                    input: 'text',\r\n                    name: 'name',\r\n                    bind: {\r\n                        label: \"Account name\",\r\n                        prependIcon: \"mdi-account-box\",\r\n                     \r\n                    }\r\n                },\r\n                {\r\n                    input: 'text',\r\n                    name: 'amount',\r\n                   \r\n                    bind: {\r\n                        label: \"Amount\",\r\n                        prependIcon: 'mdi-cash',\r\n                        required: true,\r\n                        type: 'number',\r\n                        rules: [\r\n                            v => !!v || 'Amount is required',\r\n                        ],\r\n                    }\r\n                },\r\n               \r\n             \r\n                {\r\n                    input: 'hidden',\r\n                    name: 'type',\r\n                    default () {\r\n                        const urlParams = new URLSearchParams(location.search);\r\n                        return urlParams.get('type') || 'deposit'\r\n                    }\r\n                },\r\n                {\r\n                    input: 'date',\r\n                    name: 'created_on',\r\n                    default: (new Date()).toISOString().split('T')[0],\r\n                    bind: {\r\n                        label: \"Created Date\",\r\n                        prependIcon: 'mdi-calendar',\r\n                        required: true,\r\n                        \r\n                        \r\n                        rules: [\r\n                            v => !!v || 'Created On is required',\r\n                        ],\r\n                    }\r\n                },\r\n\r\n                 \r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'user',\r\n                    if: state => (state.auth.user.rights.filter(e => e.collection == 'transaction')[0].write.allOwn == 'all'),\r\n                    bind: {\r\n                        label: \"Label\",\r\n                        prependIcon: \"mdi-account\",\r\n                        collection: 'user',\r\n                        itemText: \"displayName\",\r\n                        itemValue: \"_id\",\r\n                        required: true,\r\n                        or: false,\r\n                        query: {\r\n                            role: 'wakel'\r\n                        },\r\n                        rules: [\r\n                            v => !!v || 'Label is required',\r\n                        ],\r\n                    }\r\n                },\r\n                \r\n               \r\n            ]\r\n        }\r\n    ]\r\n}","import tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nimport countries from '../country'\r\nexport default {\r\n    title: 'Banks',\r\n    icon: 'mdi-bank',\r\n    items: {\r\n        buttons: tableButtons.get('new', 'delete'),\r\n        headers: [\r\n            {\r\n                text: 'Bank Number',\r\n                align: 'start',\r\n                value: 'number',\r\n                sortable: false\r\n            },\r\n            { text: 'Country', value: 'country', sortable: false, format: 'country', width: '150'  },\r\n            { text: 'Currency', value: 'currency', sortable: false, component: () => import('./../components/items/fields/Currency.vue')  },\r\n            // { text: 'USD Rate', value: 'usd_rate', sortable: false },\r\n            // { text: 'SAR Rate', value: 'sar_rate', sortable: false },\r\n            { text: '', value: 'actions', sortable: false, width: '150', buttons: rowButtons.get() }\r\n        ]\r\n    },\r\n    form: [\r\n        {\r\n            label: 'General',\r\n            fields: [\r\n                {\r\n                    input: 'text',\r\n                    name: 'number',\r\n                    bind: {\r\n                        label: \"Bank Number\",\r\n                        prependIcon: 'mdi-card-account-details',\r\n                        required: true,\r\n                        rules: [\r\n                            v => !!v || 'ID is required',\r\n                        ],\r\n                    }\r\n                },\r\n                \r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'country',\r\n                    bind: {\r\n                        label: \"Country\",\r\n                        prependIcon: \"mdi-flag\",\r\n                        items: countries,\r\n                        itemText: \"name\",\r\n                        itemValue: \"code\",\r\n                        required: true,\r\n                        hideAddNew: true,\r\n                        rules: [\r\n                            v => !!v || 'Country is required',\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    input: 'select',\r\n                    name: 'currency',\r\n                    bind: {\r\n                        label: \"Bank Currency\",\r\n                        prependIcon: \"mdi-currency-usd-circle-outline\",\r\n                        items: ['USD', 'EUR', 'SAR', 'TRY'],\r\n                        required: true,\r\n                        rules: [\r\n                            v => !!v || 'Currency is required',\r\n                        ],\r\n                    }\r\n                },\r\n                // {\r\n                //     input: 'text',\r\n                //     name: 'usd_rate',\r\n                //     default: () => 0.00,\r\n                //     bind: {\r\n                //         label: \"USD Rate\",\r\n                //         type: 'number',\r\n                //         prependIcon: \"mdi-currency-usd\",\r\n                //         required: true,\r\n                //         rules: [\r\n                //             v => !!v || 'Currency is required',\r\n                //         ],\r\n                //     }\r\n                // },\r\n                // {\r\n                //     input: 'text',\r\n                //     name: 'sar_rate',\r\n                //     default: () => 0.00,\r\n                //     bind: {\r\n                //         label: \"SAR Rate\",\r\n                //         type: 'number',\r\n                //         prependIcon: \"mdi-currency-rial\",\r\n                       \r\n                //         required: true,\r\n                //         rules: [\r\n                //             v => !!v || 'Currency is required',\r\n                //         ],\r\n                //     }\r\n                // },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'user',\r\n                    if: state => (state.auth.user.rights.filter(e => e.collection == 'bank')[0].write.allOwn == 'all'),\r\n                    default: state => state.auth.user._id,\r\n                    bind: {\r\n                        label: \"User\",\r\n                        prependIcon: \"mdi-account\",\r\n                        collection: 'user',\r\n                        itemText: \"displayName\",\r\n                        itemValue: \"_id\",\r\n                        hideAddNew: true,\r\n                    }\r\n                },\r\n                \r\n            ]\r\n        },\r\n        \r\n    ]\r\n}","import tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nexport default  {\r\n        title: 'Users',\r\n        icon: 'mdi-account-multiple',\r\n        \r\n        items: {\r\n            // buttons: [],\r\n            buttons: tableButtons.get('new', 'delete'),\r\n            filters: [\r\n                {\r\n                    input: 'text',\r\n                    name: 'displayName',\r\n                    bind: {\r\n                        label: \"Display Name\",\r\n                        prependIcon: 'mdi-account',\r\n\r\n                    }\r\n                },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'role',\r\n                    bind: {\r\n                        label: \"Role\",\r\n                        collection: 'role',\r\n                        itemText: \"name\",\r\n                        itemValue: \"role\",\r\n                        prependIcon: \"mdi-key\",\r\n\r\n                    }\r\n                },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'department',\r\n                    bind: {\r\n                        label: \"Department\",\r\n                        prependIcon: \"mdi-briefcase-account-outline\",\r\n                        collection: 'department',\r\n                        itemText: \"name\",\r\n                        itemValue: \"_id\",\r\n                    }\r\n                },\r\n            ],\r\n            headers: [\r\n                {\r\n                    text: 'Pic',\r\n                    align: 'start',\r\n                    value: 'profileImage',\r\n                },\r\n                {\r\n                  text: 'Display Name',\r\n                  align: 'start',\r\n                  \r\n                  value: 'displayName',\r\n                },\r\n                { text: 'Username', value: 'username' },\r\n                { text: 'Role', value: 'role' },\r\n                { text: 'Target', value: 'target' },\r\n                { text: 'Business Unit', sortable: false, value: 'business.name' },\r\n                { text: 'Department', sortable: false, value: 'department.name' },\r\n                { text: 'Town', value: 'town' },\r\n                { text: '', value: 'actions', sortable: false, width: '150', buttons: rowButtons.get() } \r\n            ]\r\n        },\r\n        form: [\r\n            {\r\n                label: 'General',\r\n                fields: [\r\n                    {\r\n                        input: 'profile-image',\r\n                        name: 'profileImage',\r\n                        bind: {\r\n                            placeholder: \"Profile Picture\",\r\n                            prependIcon: 'mdi-image',\r\n\r\n                        }\r\n                    },\r\n                    {\r\n                        input: 'text',\r\n                        name: 'displayName',\r\n                        bind: {\r\n                            label: \"Display Name\",\r\n                            prependIcon: 'mdi-account',\r\n                            required: true,\r\n                            rules: [\r\n                                v => !!v || 'Display Name is required',\r\n                            ],\r\n                        } \r\n                    },\r\n              \r\n                    {\r\n                        input: 'text',\r\n                        name: 'username',\r\n                        bind: {\r\n                            label: \"Username\",\r\n                            autocomplete: 'username',\r\n                            prependIcon: 'mdi-account-box',\r\n                            required: true,\r\n                            rules: [\r\n                                v => !!v || 'Username is required',\r\n                            ],\r\n                        } \r\n                    },\r\n                    {\r\n                        input: 'password',\r\n                        name: 'password',\r\n                        bind: {\r\n                            label: \"Password\",\r\n                            prependIcon: 'mdi-lock',\r\n                             \r\n                            \r\n                        } \r\n                    },\r\n                    {\r\n                        input: 'select',\r\n                        name: 'town',\r\n                        bind: {\r\n                            label: \"Town\", \r\n                            items: ['Haifa', 'Nabless'],\r\n                            prependIcon: \"mdi-map-marker\",\r\n                            required: true,\r\n                            rules: [\r\n                                v => !!v || 'Town is required',\r\n                            ],\r\n                        } \r\n                    }, \r\n                    {\r\n                        input: 'autocomplete',\r\n                        name: 'role',\r\n                        bind: {\r\n                            label: \"Role\",\r\n                            collection: 'role',\r\n                            itemText: \"name\",\r\n                            itemValue: \"role\",\r\n                            prependIcon: \"mdi-key\",\r\n                            required: true,\r\n                            rules: [\r\n                                v => !!v || 'Role is required',\r\n                            ],\r\n                        }\r\n                    },\r\n                    {\r\n                        input: 'text',\r\n                        name: 'target',\r\n                        bind: {\r\n                            label: \"Target\",\r\n                            prependIcon: \"mdi-bullseye-arrow\",\r\n                            type: 'number'\r\n                        }\r\n                    }, \r\n                    {\r\n                        input: 'autocomplete',\r\n                        name: 'business',\r\n                        default: (state) => state.auth.user.business,\r\n                        if: (state) => !state.auth.user.business,\r\n                        bind: {\r\n                            label: \"Business Unit\",\r\n                            prependIcon: \"mdi-domain\",\r\n                            collection: 'business',\r\n                            itemText: \"name\",\r\n                            itemValue: \"_id\",\r\n                        }\r\n                    },\r\n                    {\r\n                        input: 'autocomplete',\r\n                        name: 'department',\r\n                        default: (state) => state.auth.user.department,\r\n                        if: (state) => !state.auth.user.department,\r\n                        bind: {\r\n                            label: \"Department\",\r\n                            prependIcon: \"mdi-briefcase-account-outline\",\r\n                            collection: 'department',\r\n                            itemText: \"name\",\r\n                            itemValue: \"_id\",\r\n                        }\r\n                    },\r\n                    {\r\n                        input: 'autocomplete',\r\n                        if: (state) => ['admin', 'owner'].indexOf(state.auth.user.role) != -1,\r\n                        name: 'affiliate',\r\n                        bind: {\r\n                            label: \"Affiliate\",\r\n                            prependIcon: \"mdi-account-network-outline\",\r\n                            collection: 'affiliate',\r\n                            itemText: \"name\",\r\n                            itemValue: \"_id\",\r\n                        }\r\n                    },\r\n                    {\r\n                        input: 'switch',\r\n                        name: 'active',\r\n                        default: true,\r\n                        bind: {\r\n                            label: \"Active\" \r\n                        } \r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }","export default {\r\n    get () {\r\n        const args = [...arguments]\r\n\r\n        const buttons = args.map(e => {\r\n            return e.toLowerCase() == 'spacer' ? { spacer: true } : this.buttons.find(el => el.title.toLowerCase() == e.toLowerCase())\r\n        }).filter(e => e)\r\n\r\n        return buttons.length ? buttons : this.buttons\r\n    },\r\n    buttons: [\r\n        {\r\n            title: 'Edit',\r\n            icon: 'mdi-pencil',\r\n            bind: {\r\n                color: 'info'\r\n            },\r\n            on: (vm, item) => ({\r\n                click () {\r\n                    vm.$router.push(vm.$route.path + '/' + item._id)\r\n                }\r\n            })\r\n        },\r\n        {\r\n            title: 'Delete',\r\n            icon: 'mdi-delete',\r\n            bind: {\r\n                color: 'red'\r\n            },\r\n            on: (vm, item) => ({\r\n                async click() {\r\n                    const confirmed = await vm.$confirm('Are you sure do you want to delete this item ?', { title: 'Delete Item', color: 'red' })\r\n                    if (confirmed) {\r\n                        vm.loading = true\r\n                        const rm = await vm.remove({ collection: vm.$route.params.collection, id: item._id })\r\n                        if (rm.status === 200) {\r\n\r\n                            vm.fetch()\r\n                            vm.loading = false\r\n                            vm.$store.commit('success', 'Item has been deleted successfuly')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        {\r\n            title: 'Duplicate',\r\n            icon: 'mdi-content-copy',\r\n            on: (vm, item) => ({\r\n                click() {\r\n                    vm.$router.push(vm.$route.path + '/new?clone=' + item._id)\r\n                }\r\n            })\r\n        }\r\n    ]\r\n}","'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.array.iterator');\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar redefine = require('../internals/redefine');\nvar redefineAll = require('../internals/redefine-all');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar InternalStateModule = require('../internals/internal-state');\nvar anInstance = require('../internals/an-instance');\nvar hasOwn = require('../internals/has');\nvar bind = require('../internals/function-bind-context');\nvar classof = require('../internals/classof');\nvar anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $fetch = getBuiltIn('fetch');\nvar Headers = getBuiltIn('Headers');\nvar ITERATOR = wellKnownSymbol('iterator');\nvar URL_SEARCH_PARAMS = 'URLSearchParams';\nvar URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalParamsState = InternalStateModule.getterFor(URL_SEARCH_PARAMS);\nvar getInternalIteratorState = InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);\n\nvar plus = /\\+/g;\nvar sequences = Array(4);\n\nvar percentSequence = function (bytes) {\n  return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp('((?:%[\\\\da-f]{2}){' + bytes + '})', 'gi'));\n};\n\nvar percentDecode = function (sequence) {\n  try {\n    return decodeURIComponent(sequence);\n  } catch (error) {\n    return sequence;\n  }\n};\n\nvar deserialize = function (it) {\n  var result = it.replace(plus, ' ');\n  var bytes = 4;\n  try {\n    return decodeURIComponent(result);\n  } catch (error) {\n    while (bytes) {\n      result = result.replace(percentSequence(bytes--), percentDecode);\n    }\n    return result;\n  }\n};\n\nvar find = /[!'()~]|%20/g;\n\nvar replace = {\n  '!': '%21',\n  \"'\": '%27',\n  '(': '%28',\n  ')': '%29',\n  '~': '%7E',\n  '%20': '+'\n};\n\nvar replacer = function (match) {\n  return replace[match];\n};\n\nvar serialize = function (it) {\n  return encodeURIComponent(it).replace(find, replacer);\n};\n\nvar parseSearchParams = function (result, query) {\n  if (query) {\n    var attributes = query.split('&');\n    var index = 0;\n    var attribute, entry;\n    while (index < attributes.length) {\n      attribute = attributes[index++];\n      if (attribute.length) {\n        entry = attribute.split('=');\n        result.push({\n          key: deserialize(entry.shift()),\n          value: deserialize(entry.join('='))\n        });\n      }\n    }\n  }\n};\n\nvar updateSearchParams = function (query) {\n  this.entries.length = 0;\n  parseSearchParams(this.entries, query);\n};\n\nvar validateArgumentsLength = function (passed, required) {\n  if (passed < required) throw TypeError('Not enough arguments');\n};\n\nvar URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {\n  setInternalState(this, {\n    type: URL_SEARCH_PARAMS_ITERATOR,\n    iterator: getIterator(getInternalParamsState(params).entries),\n    kind: kind\n  });\n}, 'Iterator', function next() {\n  var state = getInternalIteratorState(this);\n  var kind = state.kind;\n  var step = state.iterator.next();\n  var entry = step.value;\n  if (!step.done) {\n    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];\n  } return step;\n});\n\n// `URLSearchParams` constructor\n// https://url.spec.whatwg.org/#interface-urlsearchparams\nvar URLSearchParamsConstructor = function URLSearchParams(/* init */) {\n  anInstance(this, URLSearchParamsConstructor, URL_SEARCH_PARAMS);\n  var init = arguments.length > 0 ? arguments[0] : undefined;\n  var that = this;\n  var entries = [];\n  var iteratorMethod, iterator, next, step, entryIterator, entryNext, first, second, key;\n\n  setInternalState(that, {\n    type: URL_SEARCH_PARAMS,\n    entries: entries,\n    updateURL: function () { /* empty */ },\n    updateSearchParams: updateSearchParams\n  });\n\n  if (init !== undefined) {\n    if (isObject(init)) {\n      iteratorMethod = getIteratorMethod(init);\n      if (typeof iteratorMethod === 'function') {\n        iterator = iteratorMethod.call(init);\n        next = iterator.next;\n        while (!(step = next.call(iterator)).done) {\n          entryIterator = getIterator(anObject(step.value));\n          entryNext = entryIterator.next;\n          if (\n            (first = entryNext.call(entryIterator)).done ||\n            (second = entryNext.call(entryIterator)).done ||\n            !entryNext.call(entryIterator).done\n          ) throw TypeError('Expected sequence with length 2');\n          entries.push({ key: first.value + '', value: second.value + '' });\n        }\n      } else for (key in init) if (hasOwn(init, key)) entries.push({ key: key, value: init[key] + '' });\n    } else {\n      parseSearchParams(entries, typeof init === 'string' ? init.charAt(0) === '?' ? init.slice(1) : init : init + '');\n    }\n  }\n};\n\nvar URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;\n\nredefineAll(URLSearchParamsPrototype, {\n  // `URLSearchParams.prototype.appent` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-append\n  append: function append(name, value) {\n    validateArgumentsLength(arguments.length, 2);\n    var state = getInternalParamsState(this);\n    state.entries.push({ key: name + '', value: value + '' });\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.delete` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete\n  'delete': function (name) {\n    validateArgumentsLength(arguments.length, 1);\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    var key = name + '';\n    var index = 0;\n    while (index < entries.length) {\n      if (entries[index].key === key) entries.splice(index, 1);\n      else index++;\n    }\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.get` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-get\n  get: function get(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var index = 0;\n    for (; index < entries.length; index++) {\n      if (entries[index].key === key) return entries[index].value;\n    }\n    return null;\n  },\n  // `URLSearchParams.prototype.getAll` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall\n  getAll: function getAll(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var result = [];\n    var index = 0;\n    for (; index < entries.length; index++) {\n      if (entries[index].key === key) result.push(entries[index].value);\n    }\n    return result;\n  },\n  // `URLSearchParams.prototype.has` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-has\n  has: function has(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var index = 0;\n    while (index < entries.length) {\n      if (entries[index++].key === key) return true;\n    }\n    return false;\n  },\n  // `URLSearchParams.prototype.set` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-set\n  set: function set(name, value) {\n    validateArgumentsLength(arguments.length, 1);\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    var found = false;\n    var key = name + '';\n    var val = value + '';\n    var index = 0;\n    var entry;\n    for (; index < entries.length; index++) {\n      entry = entries[index];\n      if (entry.key === key) {\n        if (found) entries.splice(index--, 1);\n        else {\n          found = true;\n          entry.value = val;\n        }\n      }\n    }\n    if (!found) entries.push({ key: key, value: val });\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.sort` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort\n  sort: function sort() {\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    // Array#sort is not stable in some engines\n    var slice = entries.slice();\n    var entry, entriesIndex, sliceIndex;\n    entries.length = 0;\n    for (sliceIndex = 0; sliceIndex < slice.length; sliceIndex++) {\n      entry = slice[sliceIndex];\n      for (entriesIndex = 0; entriesIndex < sliceIndex; entriesIndex++) {\n        if (entries[entriesIndex].key > entry.key) {\n          entries.splice(entriesIndex, 0, entry);\n          break;\n        }\n      }\n      if (entriesIndex === sliceIndex) entries.push(entry);\n    }\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.forEach` method\n  forEach: function forEach(callback /* , thisArg */) {\n    var entries = getInternalParamsState(this).entries;\n    var boundFunction = bind(callback, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var index = 0;\n    var entry;\n    while (index < entries.length) {\n      entry = entries[index++];\n      boundFunction(entry.value, entry.key, this);\n    }\n  },\n  // `URLSearchParams.prototype.keys` method\n  keys: function keys() {\n    return new URLSearchParamsIterator(this, 'keys');\n  },\n  // `URLSearchParams.prototype.values` method\n  values: function values() {\n    return new URLSearchParamsIterator(this, 'values');\n  },\n  // `URLSearchParams.prototype.entries` method\n  entries: function entries() {\n    return new URLSearchParamsIterator(this, 'entries');\n  }\n}, { enumerable: true });\n\n// `URLSearchParams.prototype[@@iterator]` method\nredefine(URLSearchParamsPrototype, ITERATOR, URLSearchParamsPrototype.entries);\n\n// `URLSearchParams.prototype.toString` method\n// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\nredefine(URLSearchParamsPrototype, 'toString', function toString() {\n  var entries = getInternalParamsState(this).entries;\n  var result = [];\n  var index = 0;\n  var entry;\n  while (index < entries.length) {\n    entry = entries[index++];\n    result.push(serialize(entry.key) + '=' + serialize(entry.value));\n  } return result.join('&');\n}, { enumerable: true });\n\nsetToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);\n\n$({ global: true, forced: !USE_NATIVE_URL }, {\n  URLSearchParams: URLSearchParamsConstructor\n});\n\n// Wrap `fetch` for correct work with polyfilled `URLSearchParams`\n// https://github.com/zloirock/core-js/issues/674\nif (!USE_NATIVE_URL && typeof $fetch == 'function' && typeof Headers == 'function') {\n  $({ global: true, enumerable: true, forced: true }, {\n    fetch: function fetch(input /* , init */) {\n      var args = [input];\n      var init, body, headers;\n      if (arguments.length > 1) {\n        init = arguments[1];\n        if (isObject(init)) {\n          body = init.body;\n          if (classof(body) === URL_SEARCH_PARAMS) {\n            headers = init.headers ? new Headers(init.headers) : new Headers();\n            if (!headers.has('content-type')) {\n              headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n            }\n            init = create(init, {\n              body: createPropertyDescriptor(0, String(body)),\n              headers: createPropertyDescriptor(0, headers)\n            });\n          }\n        }\n        args.push(init);\n      } return $fetch.apply(this, args);\n    }\n  });\n}\n\nmodule.exports = {\n  URLSearchParams: URLSearchParamsConstructor,\n  getState: getInternalParamsState\n};\n","var anObject = require('../internals/an-object');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nmodule.exports = function (it) {\n  var iteratorMethod = getIteratorMethod(it);\n  if (typeof iteratorMethod != 'function') {\n    throw TypeError(String(it) + ' is not iterable');\n  } return anObject(iteratorMethod.call(it));\n};\n","var map = {\n\t\"./\": \"fb57\",\n\t\"./affiliate\": \"e5f9\",\n\t\"./affiliate.js\": \"e5f9\",\n\t\"./bank\": \"80b5\",\n\t\"./bank.js\": \"80b5\",\n\t\"./banktransaction\": \"ce83\",\n\t\"./banktransaction.js\": \"ce83\",\n\t\"./business\": \"267a\",\n\t\"./business.js\": \"267a\",\n\t\"./customer\": \"3310\",\n\t\"./customer.js\": \"3310\",\n\t\"./defaults/items_buttons\": \"314f\",\n\t\"./defaults/items_buttons.js\": \"314f\",\n\t\"./defaults/row_buttons\": \"93d5\",\n\t\"./defaults/row_buttons.js\": \"93d5\",\n\t\"./department\": \"4739\",\n\t\"./department.js\": \"4739\",\n\t\"./deposit\": \"2d47\",\n\t\"./deposit.js\": \"2d47\",\n\t\"./index\": \"fb57\",\n\t\"./index.js\": \"fb57\",\n\t\"./menu\": \"a2c8\",\n\t\"./menu.js\": \"a2c8\",\n\t\"./payment_method\": \"f3ec\",\n\t\"./payment_method.js\": \"f3ec\",\n\t\"./role\": \"177a\",\n\t\"./role.js\": \"177a\",\n\t\"./subaffiliate\": \"cbd5\",\n\t\"./subaffiliate.js\": \"cbd5\",\n\t\"./transaction\": \"675e\",\n\t\"./transaction.js\": \"675e\",\n\t\"./user\": \"8d32\",\n\t\"./user.js\": \"8d32\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"9fab\";","import tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nexport default {\r\n    title: 'Menu',\r\n    icon: 'mdi-microsoft-xbox-controller-menu',\r\n    items: {\r\n        buttons: tableButtons.get('new', 'delete'),\r\n        headers: [\r\n            {\r\n                text: 'Name',\r\n                align: 'start',\r\n                sortable: false,\r\n                value: 'name',\r\n            },\r\n            { text: '', value: 'actions', width: '150', buttons: rowButtons.get() }\r\n        ],\r\n    },\r\n    \r\n    form: [\r\n        {\r\n            label: 'General',\r\n            fields: [\r\n                {\r\n                    input: 'text',\r\n                    name: 'name',\r\n                    bind: {\r\n                        label: \"Name\",\r\n                        rules: [\r\n                            v => !!v || 'Name is required',\r\n                        ],\r\n                        required: true,\r\n                    }\r\n                },\r\n                {\r\n                    input: 'menu_item',\r\n                    name: 'menu_item',\r\n                    default: [{ \"name\": \"Dashboard\", \"icon\": \"mdi-view-dashboard\", \"path\": \"/\" }, \r\n                    { \"name\": \"Deposit\", \"icon\": \"mdi-bank-transfer-in\", \"path\": \"/deposit\" }, \r\n                    { \"name\": \"Customer\", \"icon\": \"mdi-account-box\", \"path\": \"/customer\" }, \r\n                    { \"name\": \"Payment Method\", \"icon\": \"mdi mdi-credit-card-settings-outline\", \"path\": \"/payment_method\" }, \r\n                    { \"name\": \"Affiliate\", \"icon\": \"mdi-account-network-outline\", \"path\": \"/affiliate\" }, \r\n                    { \"name\": \"Users\", \"icon\": \"mdi-account-multiple\", \"path\": \"/user\" }, \r\n                    { \"name\": \"Roles\", \"icon\": \"mdi-key\", \"path\": \"/role\" }, \r\n                    { \"name\": \"Menus\", \"icon\": \"mdi-menu\", \"path\": \"/menu\" }, \r\n                    { \"name\": \"Business\", \"icon\": \"mdi-domain\", \"path\": \"/business\" }, \r\n                    { \"name\": \"Department\", \"icon\": \"mdi-briefcase-account-outline\", \"path\": \"/department\" }],\r\n                    bind: {\r\n                         label: 'Menu Items'\r\n                    }\r\n                }\r\n                \r\n            ]\r\n        }\r\n    ]\r\n}","import tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nexport default {\r\n    title: 'Sub-Affiliate',\r\n    icon: 'mdi-account-network-outline',\r\n    items: {\r\n\r\n        buttons: tableButtons.get('new', 'delete'),\r\n        headers: [\r\n            {\r\n                text: 'Name',\r\n                align: 'start',\r\n                value: 'name',\r\n            },\r\n            {\r\n                text: 'Affiliate',\r\n                value: 'affiliate.name'\r\n            },\r\n            { text: 'Active', value: 'active', sortable: false, width: '10%' },\r\n            { text: '', value: 'actions', sortable: false, width: '150', buttons: rowButtons.get() }\r\n        ],\r\n    },\r\n    form: [\r\n        {\r\n            label: 'General',\r\n            fields: [\r\n                {\r\n                    input: 'text',\r\n                    name: 'name',\r\n                    bind: {\r\n                        label: \"Name\",\r\n                        rules: [\r\n                            v => !!v || 'Name is required',\r\n                        ],\r\n                        required: true,\r\n                    }\r\n                },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'affiliate',\r\n                    bind: {\r\n                        label: \"Affiliate\",\r\n                        collection: 'affiliate',\r\n                        itemText: \"name\",\r\n                        itemValue: \"_id\",\r\n                        prependIcon: \"mdi-account-network-outline\",\r\n                        rules: [\r\n                            v => !!v || 'Affiliate is required',\r\n                        ],\r\n                        required: true,\r\n                    }\r\n                },\r\n                {\r\n                    input: 'switch',\r\n                    name: 'active',\r\n                    default: true,\r\n                    bind: {\r\n                        label: \"Active\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}","\r\n\r\nimport tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\n\r\nexport default {\r\n    title: 'Bank Transactions',\r\n    icon: 'mdi-bank-transfer',\r\n     \r\n    \r\n    items: {\r\n        total: {\r\n            headers: [\r\n                {\r\n                    text: 'Currency',\r\n                    align: 'start',\r\n                    value: '_id',\r\n                    component: () => import('./../components/items/fields/Currency.vue'),\r\n                    sortable: false,\r\n                    width:\"50\"\r\n                },\r\n                {\r\n                    text: 'Subtotal',\r\n                    align: 'start',\r\n                    value: 'subtotal.amount',\r\n                    format: 'money',\r\n                    formatArgs: ['$_id', true],\r\n                    sortable: false,\r\n                },\r\n                {\r\n                    text: 'Withraw',\r\n                    align: 'start',\r\n                    format: 'money',\r\n                    formatArgs: ['$_id', true],\r\n                    value: 'withdraw.amount',\r\n                    sortable: false,\r\n                },\r\n                {\r\n                    text: 'Total',\r\n                    align: 'start',\r\n                    format: 'money',\r\n                    formatArgs: ['$_id', true],\r\n                    value: 'amount',\r\n                    sortable: false,\r\n                },\r\n                // {\r\n                //     text: 'Total SAR',\r\n                //     align: 'start',\r\n                //     format: 'money',\r\n                //     formatArgs: ['SAR', true],\r\n                //     value: 'amount_sar',\r\n                //     sortable: false,\r\n                // }\r\n            ]\r\n        },\r\n        buttons: tableButtons.get('new', 'withdraw', 'delete'),\r\n        filters: [\r\n\r\n\r\n            {\r\n                input: 'autocomplete',\r\n                name: 'bank',\r\n                bind: {\r\n                    label: \"Bank\",\r\n                    prependInnerIcon: \"mdi-bank\",\r\n                    collection: 'bank',\r\n                    itemText: \"number\",\r\n                    itemValue: \"_id\",\r\n                    hideAddNew: true,\r\n                }\r\n            },\r\n            {\r\n                input: 'range',\r\n                name: 'created_on',\r\n                bind: {\r\n                    label: \"Date\",\r\n                    prependInnerIcon: \"mdi-calendar\",\r\n\r\n                }\r\n            }\r\n\r\n        ],\r\n        headers: [\r\n            { text: 'Agent', value: 'agent' },\r\n            { text: 'Bank', value: 'bank.number' },\r\n            { text: 'Country', value: 'bank.country', format: 'country', width: '100' },\r\n            { text: 'Currency', value: 'currency', sortable: false, component: () => import('./../components/items/fields/Currency.vue') },\r\n            { text: 'Type', sortable: false, value: 'type', format: 'depositType', width: '50'  },\r\n            // { text: 'Amount', value: 'amount', format: 'money', formatArgs: ['$bank.currency'] },\r\n            { text: 'TRY', value: 'amount_try', format: 'money', formatArgs: ['TRY', true] },\r\n            { text: 'EUR', value: 'amount_eur', format: 'money', formatArgs: ['EUR', true] },\r\n            { text: 'SAR', value: 'amount_sar', format: 'money', formatArgs: ['SAR', true] },\r\n            { text: 'USD', value: 'amount_usd', format: 'money', formatArgs: ['USD', true] },\r\n            { text: 'Date', value: 'created_on', format: 'date' },\r\n            { text: '', value: 'actions', sortable: false, width: '150', buttons: rowButtons.get() }\r\n\r\n        ]\r\n    },\r\n    form: [\r\n        {\r\n            label: 'General',\r\n            fields: [\r\n                {\r\n                    input: 'text',\r\n                    name: 'agent',\r\n                    bind: {\r\n                        label: \"Agent\",\r\n                        prependIcon: 'mdi-account',\r\n                        required: true,\r\n                        rules: [\r\n                            v => !!v || 'Agent is required',\r\n                        ],\r\n                    }\r\n                },\r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'bank',\r\n                    bind: {\r\n                        label: \"Bank\",\r\n                        prependIcon: \"mdi-bank\",\r\n                        collection: 'bank',\r\n                        itemText: \"number\",\r\n                        itemValue: \"_id\",\r\n                        required: true,\r\n                        searchFields: ['number', 'country'],\r\n                       \r\n                        rules: [\r\n                            v => !!v || 'Bank is required',\r\n                        ],\r\n                    },\r\n                    on: (vm) => ({\r\n                        data (bank) {\r\n                            \r\n                            vm.$refs.banktransaction_currency[0].$emit('input', bank ? bank.currency : '')\r\n                        }\r\n                    })\r\n                },\r\n                {\r\n                    input: 'select',\r\n                    name: 'currency',\r\n                    bind: {\r\n                        label: \"Currency\",\r\n                        prependIcon: \"mdi-currency-usd-circle-outline\",\r\n                        items: ['USD', 'EUR', 'SAR', 'TRY'],\r\n                        required: true,\r\n                        rules: [\r\n                            v => !!v || 'Currency is required',\r\n                        ],\r\n                    },\r\n                    on: (vm) => ({\r\n                        input(currency) {\r\n                            console.log(currency);\r\n                            const icons = {\r\n                                'USD': 'mdi-currency-usd',\r\n                                'SAR': 'mdi-currency-rial',\r\n                                'TRY': 'mdi-currency-try',\r\n                                'EUR': 'mdi-currency-eur',\r\n                            }\r\n\r\n                            if (currency) {\r\n                                vm.props['banktransaction_amount'] = {\r\n                                    prependIcon: icons[currency],\r\n                                    label: 'Amount in ' + currency\r\n                                }\r\n\r\n                            } else if (vm.props['banktransaction_amount'])\r\n                                delete vm.props['banktransaction_amount']\r\n                        }\r\n                    })\r\n                },\r\n                {\r\n                    input: 'text',\r\n                    name: 'amount',\r\n                    bind: (vm) => ({\r\n                        label: (() => {\r\n                            console.log(vm.data.currency);\r\n                             \r\n                            return vm.data.currency ? `Amount in ${vm.data.currency}` : \"Amount\"\r\n                        })(),\r\n                        prependIcon: (() => {\r\n                            console.log(vm.data.currency);\r\n                            const icons = {\r\n                                'USD': 'mdi-currency-usd',\r\n                                'SAR': 'mdi-currency-rial',\r\n                                'TRY': 'mdi-currency-try',\r\n                                'EUR': 'mdi-currency-eur',\r\n                            }\r\n                            return icons[vm.data.currency] || 'mdi-cash'\r\n                        })(),\r\n                        required: true,\r\n                        type: 'number',\r\n                        rules: [\r\n                            v => !!v || 'Amount is required',\r\n                        ],\r\n                    })\r\n                },\r\n                {\r\n                    input: 'text',\r\n                    name: 'amount_sar',\r\n\r\n                    bind: {\r\n                        label: \"Amount in SAR\",\r\n                        prependIcon: 'mdi-currency-rial',\r\n                        required: true,\r\n                        type: 'number',\r\n                        rules: [\r\n                            v => !!v || 'Amount is required',\r\n                        ],\r\n                    }\r\n                },\r\n             \r\n                {\r\n                    input: 'hidden',\r\n                    name: 'type',\r\n                    default () {\r\n                        const urlParams = new URLSearchParams(location.search);\r\n                        return urlParams.get('type') || 'deposit'\r\n                    }\r\n                },\r\n                {\r\n                    input: 'date',\r\n                    name: 'created_on',\r\n                    default: (new Date()).toISOString().split('T')[0],\r\n                    bind: {\r\n                        label: \"Created Date\",\r\n                        prependIcon: 'mdi-calendar',\r\n                        required: true,\r\n                        \r\n                        \r\n                        rules: [\r\n                            v => !!v || 'Created On is required',\r\n                        ],\r\n                    }\r\n                },\r\n\r\n                 \r\n                {\r\n                    input: 'autocomplete',\r\n                    name: 'user',\r\n                    if: state => (state.auth.user.rights.filter(e => e.collection == 'transaction')[0].write.allOwn == 'all'),\r\n                    default: state => state.auth.user._id,\r\n                    bind: {\r\n                        label: \"User\",\r\n                        prependIcon: \"mdi-account\",\r\n                        collection: 'user',\r\n                        itemText: \"displayName\",\r\n                        itemValue: \"_id\",\r\n                        required: true,\r\n                        or: false,\r\n                        query: {\r\n                            role: ['!wakel', '!affiliate'],\r\n                        },\r\n                        rules: [\r\n                            v => !!v || 'User is required',\r\n                        ],\r\n                    }\r\n                },\r\n                \r\n               \r\n            ]\r\n        }\r\n    ]\r\n}","import tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nexport default {\r\n    title: 'Affiliate',\r\n    icon: 'mdi-account-network-outline',\r\n    items: {\r\n        buttons: tableButtons.get('new', 'delete'),\r\n        headers: [\r\n            {\r\n                text: 'Name',\r\n                align: 'start',\r\n\r\n                value: 'name',\r\n            },\r\n            { text: 'Active', value: 'active', sortable: false, width: '10%' },\r\n            { text: '', value: 'actions', sortable: false, width: '150', buttons: rowButtons.get() }\r\n        ]\r\n    },\r\n    form: [\r\n        {\r\n            label: 'General',\r\n            fields: [\r\n                {\r\n                    input: 'text',\r\n                    name: 'name',\r\n                    bind: {\r\n                        label: \"Name\",\r\n                        rules: [\r\n                            v => !!v || 'Name is required',\r\n                        ],\r\n                        required: true,\r\n                    }\r\n                },\r\n                {\r\n                    input: 'switch',\r\n                    name: 'active',\r\n                    default: true,\r\n                    bind: {\r\n                        label: \"Active\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}","import tableButtons from './defaults/items_buttons'\r\nimport rowButtons from './defaults/row_buttons'\r\nexport default {\r\n    title: 'Payment Method',\r\n    icon: 'mdi-credit-card-settings-outline',\r\n    items: {\r\n        buttons: tableButtons.get('new', 'delete'),\r\n        headers: [\r\n            {\r\n                text: 'Name',\r\n                align: 'start',\r\n\r\n                value: 'name',\r\n            },\r\n            { text: 'Type', value: 'type', width: '20%' },\r\n            { text: 'Active', value: 'active', sortable: false, width: '10%' },\r\n            { text: '', value: 'actions', sortable: false, width: '150', buttons: rowButtons.get() }\r\n        ],\r\n    },\r\n    \r\n    form: [\r\n        {\r\n            label: 'General',\r\n            fields: [\r\n                {\r\n                    input: 'text',\r\n                    name: 'name',\r\n                    bind: {\r\n                        label: \"Name\",\r\n                        rules: [\r\n                            v => !!v || 'Name is required',\r\n                        ],\r\n                        required: true,\r\n                    }\r\n                },\r\n                {\r\n                    input: 'select',\r\n                    name: 'type',\r\n                    bind: {\r\n                        label: \"Type\",\r\n                        rules: [\r\n                            v => !!v || 'Type is required',\r\n                        ],\r\n                        items: [\r\n                            {\r\n                                label: \"Credit Card\",\r\n                                value: \"cc\"\r\n                            },\r\n                            {\r\n                                label: \"Wire\",\r\n                                value: \"wire\"\r\n                            }\r\n                        ],\r\n                        itemText: \"label\",\r\n                        itemValue: \"value\",\r\n                        required: true,\r\n                    }\r\n                },\r\n                {\r\n                    input: 'switch',\r\n                    name: 'active',\r\n                    default: true,\r\n                    bind: {\r\n                        label: \"Active\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}"," \r\n\r\n// import payment_method from './payment_method'\r\n// import retention from './retention'\r\n// import sale from './sale'\r\n// import user from './user'\r\n// import role from './role'\r\n// import notefication from './notefication'\r\n\r\n\r\n\r\n\r\n\r\nexport default {\r\n    get(name) {\r\n        try {\r\n           return  require('./' + name).default\r\n        } catch (err) {\r\n            return false\r\n        }\r\n       \r\n    },\r\n    // sale,\r\n    // retention,\r\n    // payment_method,\r\n    // user,\r\n    // role,\r\n    // notefication\r\n}"],"sourceRoot":""}